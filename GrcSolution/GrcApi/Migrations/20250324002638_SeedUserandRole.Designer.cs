// <auto-generated />
using System;
using Arm.GrcApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrcApi.Migrations
{
    [DbContext(typeof(GrcToolDbContext))]
    [Migration("20250324002638_SeedUserandRole")]
    partial class SeedUserandRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessPhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CTO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfManagerOrMD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RCNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceBusines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8fda6fb-0e8a-4621-bae1-16f26d40f345"),
                            BusinessName = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(4010),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c767a782-a495-4b96-988c-22e8e16c33d9"),
                            BusinessName = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(4016),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("70c25108-c4c7-4221-b444-2a98bddbba7b"),
                            BusinessName = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(4018),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("803dcb0e-6a10-4e3b-9c73-35f1c7c4a265"),
                            BusinessName = "ARM Capital Partner",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(4023),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessId");

                    b.HasIndex("ComplianceDepartmentId");

                    b.ToTable("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("AttachmentCount")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirmToSubmit")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LevelStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameOfReport");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReportStatus")
                        .HasColumnType("int");

                    b.Property<int>("ResponseStatus")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceCalendar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceDepartment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9443293c-a893-41de-8317-264444c8bbc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8017),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("4c9b0a56-52dc-4b33-af2b-5c999308a0ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8020),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("4f52f84c-20cf-459e-8c9c-48d7072f30c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8021),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("da0bcbe0-9dad-4f4a-822f-3c0f9005cae8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8023),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("8f9dfe1b-0ca1-4722-b2a1-09609ee3bb0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8024),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2f10b305-b9da-4801-9188-133c042b276a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8025),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("d969cbf1-7f32-40bf-9e68-74f71a2d23d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8026),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("ebde322f-5df1-4af1-aeb8-870df4c58b3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8027),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("9686c1aa-690e-4efb-a6f0-e48c838ec238"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8029),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("766dfecd-8db0-4cc4-981e-43ae1f9f9265"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8030),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("c08f04f7-5e1c-42f9-8247-cb902cd62f49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8031),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("469e97db-72af-49ed-84dd-c11d425263cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8032),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("a8e77619-5129-4a88-b234-386f64840215"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8032),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("30c73a8b-1b74-4732-802d-e97b7ea2a404"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8033),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("037b9ff2-504e-404f-b329-8dffcc2c5e94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8034),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("113da9be-b174-48a0-98cf-7573f8f344f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8035),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("dc1ab4ae-db59-420b-aade-49c9c0225b21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8036),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("86b47b0a-c3e1-45b6-97ef-5dead8955745"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8037),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("4108d577-9409-498b-9822-bbdd9f9b1e6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8038),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("581ed77e-2e05-42fd-8b92-d001a96909a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8039),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("732911ea-38e8-4104-a9c9-8101c7ec2748"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8040),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("7cc52d32-76d1-4537-b418-7418d09f28f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8040),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("0b760d1e-9eb3-4758-93d8-beade293f5d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8042),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("48cc7b70-9efa-4125-b448-6a957d2041f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8042),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("51c62493-240a-4122-8ac8-ee1fe16e3ee2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8043),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8acebf76-21e6-4e74-9f8c-b0d1db9f3753"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8044),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("aa8efd00-7cc1-4fa6-b9e0-b24e06e8a0a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8045),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("f2b1a942-b22c-4c66-9929-513ba1867053"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8046),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("fad581c6-2f33-46de-b1c4-25d3873f23f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8047),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("a50412b5-65ff-4002-8da4-a45c5bf4bf2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8048),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("3d7857e6-8875-477f-a962-247326e2c92d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8049),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("dfc65214-67c8-47eb-aeeb-3146ae489e60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8050),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("eefa7c57-98b1-44f8-aba7-549399321114"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8051),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4fae7da7-6ddd-48d0-9400-1126815fb4d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8052),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("1e534470-a920-457d-b5d3-ca8882de81ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8053),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1c2370db-3244-4bf2-9b56-57d98bb3b5e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8054),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("1b5cbd9d-3a11-4ae2-8350-f208d37bcbb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8055),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("413c704d-af7b-4b17-bd98-9eea7b16ff03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8055),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("9e94023e-ce76-490c-8f1f-e46f4117b1a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8056),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d071e04-9a34-4c6b-aaa0-ef9f11470990"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8057),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("8ef60bcb-a795-4141-bab6-38e5863e14a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8058),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("c3de97f2-ef7c-40ad-94ef-f88738c71c07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8059),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("1ac36092-da7b-4b32-bdac-a97fc23164cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8064),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4e7f8112-d6bf-4619-b41e-236fba1eb541"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8066),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("93427ce2-6640-44ed-a078-320ac73e4dc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8067),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("9ae1d479-e587-4d46-95ba-b8e72851fc75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8068),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("199f9de0-d08b-47eb-a96a-5b2526eb31ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8068),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("022aa7d5-7c0a-4fb3-9c8d-ff2278b289fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8069),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("3ddc0333-f27a-4ced-9599-6ef1ee92c3c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8070),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("affceba9-38dc-4e5f-afb0-8b2d9edf5efa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8071),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("97c9b380-ad8f-4f41-944b-dc37b82fe85f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8072),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("5e885e75-f8b3-4b3a-9017-b2e7a1122d83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8073),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2fd39529-b005-4293-8b8f-12ed3ff87807"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8074),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("7165d5c6-dc08-4471-99b9-4c60dd76ec8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8074),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("a66bea4e-f461-476f-9af7-61a91c69af99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8075),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("55772580-4c93-435d-8c31-685b80b9bd3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8076),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("dd059d83-0706-425f-aa33-c8d32294f7b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8077),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("58662c2e-5a9c-43f8-8d42-fc2e93a50eb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8078),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("040acaf6-ccdc-4302-bae9-95bbe7175fa7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8079),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("f155216a-9fc1-4d29-ac25-060c116d0e1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8080),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("9d10fb74-ed81-42ec-a109-072ca0ddfde3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8080),
                            IsDeleted = false,
                            Name = "Securities Operations "
                        },
                        new
                        {
                            Id = new Guid("f0748176-df02-49af-8565-520f9c59c9a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8081),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("5203f4dc-ab02-4dc8-85b1-b293ff9ffcbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8082),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("82355662-28d3-45c9-bbf4-51be40c368d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8083),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("80921fb2-5762-4149-98a1-7a990efb2428"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8084),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("da9c707e-ff33-455b-973e-ff2928d41aca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8085),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("ca9277c7-59d1-4f5f-adbf-bd036440e602"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8086),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("e98b0111-935c-41ba-bfed-00ae9ce3814f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8086),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("193306a0-16ce-4c4b-99a1-8765a8032cac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8087),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("f8360ffe-e1be-4d14-99a8-db3a2e840f41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8088),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("9cb7a2c2-4d91-47c1-9c6f-17540afa0c44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 363, DateTimeKind.Utc).AddTicks(8089),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegulatorTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulator");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20b7b8e7-ebfb-4e30-a35c-ef0cc4878188"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8779),
                            IsDeleted = false,
                            RegulatorTitle = "LABOUR ACT"
                        },
                        new
                        {
                            Id = new Guid("3454dc14-648d-4c68-8279-0b82585618ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8784),
                            IsDeleted = false,
                            RegulatorTitle = "PENSION REFORM ACT 2004"
                        },
                        new
                        {
                            Id = new Guid("885c060b-eea9-4d86-b163-f28c60e66736"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8785),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES AND ALLIED MATTERS ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("a28cac7e-cbe2-4950-83ad-cbadc060c86c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8787),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHOLDING TAX) REGULATIONS 1977"
                        },
                        new
                        {
                            Id = new Guid("c83f0df5-a41b-4296-a185-14b423473122"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8789),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("92508225-4b55-4fd1-b32c-e069d107a554"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8790),
                            IsDeleted = false,
                            RegulatorTitle = "EMPLOYEES COMPENSATION ACT"
                        },
                        new
                        {
                            Id = new Guid("1ad9ae19-60ce-4712-84dc-fe55e1b88c3b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8792),
                            IsDeleted = false,
                            RegulatorTitle = "FINANCIAL REPORTINNG COUNCIL OF NIGERIA ACT 2011"
                        },
                        new
                        {
                            Id = new Guid("f3eab0ba-f3fd-4e89-8716-ab23699e1159"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8797),
                            IsDeleted = false,
                            RegulatorTitle = "INVESTMENT & SECURITIES ACT 2007"
                        },
                        new
                        {
                            Id = new Guid("9171c80a-d862-4254-b6e7-a488124a2979"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8798),
                            IsDeleted = false,
                            RegulatorTitle = "NATIONAL YOUTH SERVICE CORPS ACT"
                        },
                        new
                        {
                            Id = new Guid("1b244041-2bfb-4158-8251-6599f66d3302"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8799),
                            IsDeleted = false,
                            RegulatorTitle = "PAY AS YOU EARN (PAYE)"
                        },
                        new
                        {
                            Id = new Guid("c5dae39f-b49d-4a24-86f4-e83544fc5e47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8801),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHHOLDING TAX REGULATION) 1997"
                        },
                        new
                        {
                            Id = new Guid("57c7047e-c1c5-4323-9b26-72d8560499f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8802),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("2163d6c4-f924-4698-839f-654ec59e7284"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8803),
                            IsDeleted = false,
                            RegulatorTitle = "VALUE ADDED TAX LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("bf3b070f-2883-40ea-b573-cecabbeb77f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8804),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON MINIMUM REQUIREMENTS FOR OPENING BRANCHES"
                        },
                        new
                        {
                            Id = new Guid("43cf07e6-8956-4b21-9b13-4d931e6a77b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8816),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON PAYMENT OF ACCRUED PRE-PENSION REFORM BENEFITS MAY 2011"
                        },
                        new
                        {
                            Id = new Guid("59138bb0-e094-48eb-b5ec-4cd2aa3f9db3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8820),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON REQUIREMENTS FOR PFAs WITH FUNDS UNDER MANAGEMENT OF N100 BILLION & ABOVE AND NEW REQUIREMENTS FOR APPOINTMENTS TO BOARD AND TOP MANAGEMENT POSITIONS OF ALL PFAs"
                        },
                        new
                        {
                            Id = new Guid("10de3a4e-49f8-4e67-a513-6219d087e747"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8822),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON SERVICE DELIVERY BY PENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("189a4456-930e-4a59-b721-b698d448775c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8824),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON STANDARDIZATION OF ANNUAL TOTAL EMOLUMENTS FOR THE COMPUTATION OF RETIREMENT BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("191ca6ae-a827-4b40-8798-af53ff64e14f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8825),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON THE IMPORTANCE OF TRAINING FOR STAFF OF PENSION FUND OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("17488d81-13f9-4cf1-bfb9-931191142061"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8827),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF CORPORATE GOVERNANCE"
                        },
                        new
                        {
                            Id = new Guid("bf3c448d-5602-4aa9-b94e-3e36cdcb337b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8828),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF ETHICS & BUSINESS PRACTICES"
                        },
                        new
                        {
                            Id = new Guid("12418cf1-0592-49ac-96b2-eb27bf63ca96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8829),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINE FOR APPOINTMENT TO BOARD AND TOP MANAGEMENT POSITIONS IN PFAs AND PFCs"
                        },
                        new
                        {
                            Id = new Guid("3e58ddd8-da9b-47b5-800c-f97a606c438f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8830),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR CROSS BOARDER ARRANGEMENTS UNDER PENSION REFORM ACT"
                        },
                        new
                        {
                            Id = new Guid("9b6f45a5-744b-43eb-aaf5-5dcc65974fa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8833),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR LIFE INSURANCE POLICY FOR EMPLOYEES"
                        },
                        new
                        {
                            Id = new Guid("f3e71ebf-7fcf-4af3-90ed-332de74e9601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8834),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR RISK MANAGEMENT FRAMEWORK FOR LICENSED OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("596f7f2e-0e82-46ff-b11e-7b8a27e03983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8835),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE ADMINISTRATION OF STATE FUNDS DEDUCTED AT SOURCE UNDER THE CONTRIBUTORY PENSION SCHEME"
                        },
                        new
                        {
                            Id = new Guid("ed229bfb-b639-401f-95f8-a267adceefff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8836),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND ADMINISTRATORS AND CUSTODIANS FOR EXISTING PENSION SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("2a93b173-23a6-4530-b447-98b1ce499bf7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8837),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND CUSTODIANS FOR STATE GOVERNMENT AND RETIREE FUNDS"
                        },
                        new
                        {
                            Id = new Guid("91525b64-1cb5-42e9-82eb-034ed057d7e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8839),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION FUND CUSTODIANS"
                        },
                        new
                        {
                            Id = new Guid("30c07d3f-8f36-41de-87e9-bc1071d434d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8840),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION TRANSITIONAL ARRANGEMENT DEPARTMENTS"
                        },
                        new
                        {
                            Id = new Guid("9deda427-c40d-4e08-9cba-227444dedbde"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8842),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PFAS"
                        },
                        new
                        {
                            Id = new Guid("a55cdcc2-aef2-40bb-97ed-97ed0cd31909"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8844),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE PUBLICATION OF RATES OF RETURN ON RSA FUNDS BYPENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("27688539-e496-4a50-89a8-8b842aeacfd9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8845),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE TRANSFER OF NSITF CONTRIBUTIONS INTO EMPLOYEES RETIREMENT SAVINGS ACCOUNT"
                        },
                        new
                        {
                            Id = new Guid("6abca7e0-03cf-40f8-831e-1f3503322e42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8846),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR TRANSITIONAL CONTRIBUTIONS FUND"
                        },
                        new
                        {
                            Id = new Guid("21c301ca-73a5-4def-800b-27987416b42c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8847),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON DIRECT REAL ESTATE INVESTMENTS BY CLOSED PENSION FUND ADMINISTRATORS AND APPROVED EXISTING SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("0902e170-5fc5-49ca-9e31-9da612ed2547"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8850),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON FUND ACCOUNTING"
                        },
                        new
                        {
                            Id = new Guid("63d58047-074e-439a-b244-b50a2d216c88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8851),
                            IsDeleted = false,
                            RegulatorTitle = "INCLUSION OF GROUP LIFE INSURANCE POLICY FOR EMPLOYEES: FURTHER STEPS TO IMPROVE COMPLIANCE"
                        },
                        new
                        {
                            Id = new Guid("3d03d9e4-4026-41f4-98e0-ee15d5d37907"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8853),
                            IsDeleted = false,
                            RegulatorTitle = "MINIMUM INFORMATION TO BE POSTED ON A PFAs WEBSITE"
                        },
                        new
                        {
                            Id = new Guid("5c923578-67d4-4e86-ae34-a28036056a7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8854),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATION ON INVESTMENT OF PENSION FUND ASSETS"
                        },
                        new
                        {
                            Id = new Guid("66ad68b7-2f5e-4be4-9f7c-e30695022ded"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8858),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR AUDITING PENSION FUNDS"
                        },
                        new
                        {
                            Id = new Guid("e7563613-5933-4c0a-bded-728e3e2b9835"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8859),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR THE ADMINISTRATION OF RETIREMENT AND TERMINAL BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("53e6317c-f579-4ca4-a6dd-77dce9473d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8861),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS ON COMPLIANCE OFFICERS"
                        },
                        new
                        {
                            Id = new Guid("594b2f82-13d1-4a70-b45a-47b85daffb8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8862),
                            IsDeleted = false,
                            RegulatorTitle = "SECURITIES AND EXCHANGE COMMISSION RULES AND REGULATIONS 2013"
                        },
                        new
                        {
                            Id = new Guid("d72c7077-df45-4f41-95b2-b1f48a25de30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 364, DateTimeKind.Utc).AddTicks(8863),
                            IsDeleted = false,
                            RegulatorTitle = "WHISTLE BLOWING GUIDELINES FOR PENSIONS"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulatoryPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessEntity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComplianceLevel")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initiator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeansOfPaymentAmount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentAttachmentCount")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Regulator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulatoryPayment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRegulatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deadline")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Heading")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuesOrFillingOrReturn")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Penalty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Responsibilities")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceRegulatorId");

                    b.ToTable("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("ComplianceRuleId");

                    b.ToTable("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.ComplianceStatutoryPayment.ComplianceStatutoryPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessEntity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CashRemittanceStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComplianceLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initiator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayingUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentFrequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatutoryPayment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubmissionToStatutoryBody")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceStatutoryPayment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionToBeResolved")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlId");

                    b.ToTable("InternalControlAction");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlActionOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionOwnerStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalControlActionlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResponseTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlActionlId");

                    b.ToTable("InternalControlActionOwner");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("ExpectedUploadTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfReport")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("date");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeUploaded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InternalControlCallOver");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOverReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CallOverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReportDone")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfAttachments")
                        .HasColumnType("int");

                    b.Property<string>("ReportTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CallOverId");

                    b.ToTable("InternalControlCallOverReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlDashboard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActivityIntervals")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTaskCompleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDailyReminderSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMonthlyReminderSent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWeeklyReminderSent")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextNoficationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfTransactionsReviewed")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProposedCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("ToTrigger")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("InternalControlDashboard");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlExceptionTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityImpacted")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControlImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExceptionTrackerStatus")
                        .HasColumnType("int");

                    b.Property<string>("ImpactRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent12Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent24Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent36Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent48Hrs")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NatureOfException")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleOfficerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TransactionCount")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InternalControlExceptionTracker");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AttachmentCount")
                        .HasColumnType("int");

                    b.Property<string>("CollaboratorEmail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Collaborators")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueSummary")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NoOfActionOwners")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfCollaboration")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InternalControlModel");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.OperationControl.OperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionOwnerEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ActionOwnerResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionPoint")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalProcess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ExceptionCategory")
                        .HasColumnType("int");

                    b.Property<string>("ExceptionDescription")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsApprovedAsException")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsApprovedAsObservation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExceptionForActionOwner")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExceptionReAssignBySupervisor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent1")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent3")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationActivity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReAssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReAssignedOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReassignOfficerEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequestedEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResolutionStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionCallOverType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AAFML")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RFL")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMCapitalAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMCapital")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ARMCapitalEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMHILL")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHILLEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMHoldingCompany")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TreasurySales")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMIM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ARMRegisterar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BDOrIMRetail")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FundAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Fundaccount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IMUnit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OperationControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OperationSetlement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RetailOperations")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InvestmentBanking")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("StockBroking")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCustomerExperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseDataAnalytic");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InfoSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMTAM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommercialTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrivateTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AssessmentOfDigitalInitiativeList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("AssessmentOfDigitalInitiativeList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditScoped")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("CommenceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsAuditAnnouncementMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PreviousFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PreviousTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recipient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecipientUnitEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Salutation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SalutationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("WorkApproach")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditAnnouncementMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlDesignOrEffectively")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOrRecurring")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Rating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("AuditFindingAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditPlanningMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("BusinessDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImplementationPlan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Policies")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PriorAuditObservation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RegulatoryConsideration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskIdentified")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeAndControlTesting")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StrategicObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SystemOverview")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditPlanningMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoPlanningTimeline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditPlanningMemoAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlannedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Responsibility")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tasks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditPlanningMemoPlanningTimeline");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditProgramCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FindingStatus")
                        .HasColumnType("int");

                    b.Property<string>("InformationRequired")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkPaperInitiated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReviewProcedure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RiskDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubProcess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkpaperStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessRFL");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldCoTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldingCompany");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMIMUnit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityInvestmentBanking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditUniverseARMSecurityInvestmentBanking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditUniverseARMSecurityResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteeCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteePrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEMCRated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManagementRated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OverAllComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("CitationAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId");

                    b.ToTable("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceARMCapitalId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("ComplianceHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceComplianceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceDataAnalyticRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceFinancialControlRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessRiskRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFindingRaised")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DetailedFindings")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("EngagementName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Evidence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ImpactRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Level1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Level2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ManagmentResponseAsAtTimeOfEngagement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OPRStatus")
                        .HasColumnType("int");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportingQuater")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("RevisedDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusLevel")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("WorkStream")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("ConsolidatedAuditFindingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityToAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("ConsolidatedAuditFindingId");

                    b.ToTable("ConsolidatedAuditFindingActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DigitalFinancialService")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmcRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("EMCConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditScope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BriefBackgroundObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BusinessOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("CommunicationProtocol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("KeyRisk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Mandate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibilityOfInternalAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ResponsibleExecutive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DurationAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DurationTiming")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterAuditExecutionDuration");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDistributionListBusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportDistributionListName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportDistributionListTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialARMCapitalId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialHillReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialHillReportingId")
                        .IsUnique();

                    b.ToTable("FinacialHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialAgribusinessReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("FinancialHillReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialReportingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("FinancialSecurityReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("FinancialTrusteeReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateProvided")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("InformationRequest")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool?>("InformationRequirementCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId");

                    b.ToTable("InformationRequirementAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PreviousRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("InternalAuditRatingReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AssessmentOfDigitalInitiative")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfIssue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DetailedFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutiveSummary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("GoodPractiseInclude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OtherImprovementArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OverAllManagementComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PotentialMaterialisedImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Scope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SignedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId");

                    b.ToTable("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId");

                    b.ToTable("ManagementConcernARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AAFML")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RFL")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMCapital")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMCapitalId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMHill")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMIM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ARMRegistrar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BDOrIMRetail")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FundAccount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FundAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IMUnit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OperationControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OperationSettlement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RetailOperation")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InvestmentBanking")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("StockBroking")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommercialTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrivateTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitDFSRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DigitalFinancialService")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernDFSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernDFSId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitDFSRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernDFS");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementConcernRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMCapitalId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceDFSRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernDFSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernDFSId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceDFSRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionPointToResolve")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ManagementResponseAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHoldingCompanyRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHoldingCompanyRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ObservationListAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationARMCapitalId")
                        .IsUnique();

                    b.ToTable("OperationARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessArmHolco");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("OperationDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("OperationHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMUnitRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("OperationSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceComplianceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceDataAnalyticRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceFinancialControlRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("OperationTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("RatedBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDetailfindings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfIssue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PotentialMaterialisedImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ReportDetailfindings");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDistributionList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ForAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ForDistribution")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyARMCapitalId")
                        .IsUnique();

                    b.ToTable("StrategyARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessArmHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("StrategyDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHillId")
                        .IsUnique();

                    b.ToTable("StrategyHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyImBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("StrategySharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceDataAnalytic");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AAFML")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFl")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAgribusinessAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMCapital")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHoldingCompany")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TreasurySale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinancialService")
                        .HasColumnType("int");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMIM")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMRegistrar")
                        .HasColumnType("int");

                    b.Property<int>("BDPWMIAMIMRetail")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FundAccount")
                        .HasColumnType("int");

                    b.Property<int>("FundAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IMUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationControl")
                        .HasColumnType("int");

                    b.Property<int>("OperationSettlement")
                        .HasColumnType("int");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("RetailOperation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMTAM")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastBusinessARMTAMAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHill")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastHillAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockBroking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSecurityAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("Corporatestrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Customerexperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmind")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSharedServiceAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("CommercialTrust")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrivateTrust")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastTrusteeAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductOwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProductRiskAssementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductRiskCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductRiskAssementId");

                    b.ToTable("ProductAssessRisk", (string)null);
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuestionOrRecomendation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReseasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductRiskAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BusinessEntity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8312),
                            IsDeleted = false,
                            Name = "ARM Securities"
                        },
                        new
                        {
                            Id = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8316),
                            IsDeleted = false,
                            Name = "ARMIM"
                        },
                        new
                        {
                            Id = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8318),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8320),
                            IsDeleted = false,
                            Name = "ARM Trustees"
                        },
                        new
                        {
                            Id = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8322),
                            IsDeleted = false,
                            Name = "ARM Harith Infracstrure Investement Limited"
                        },
                        new
                        {
                            Id = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8324),
                            IsDeleted = false,
                            Name = "Shared Services"
                        },
                        new
                        {
                            Id = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8325),
                            IsDeleted = false,
                            Name = "ARM AgriBusiness"
                        },
                        new
                        {
                            Id = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8333),
                            IsDeleted = false,
                            Name = "Mixta Nigeria"
                        },
                        new
                        {
                            Id = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8335),
                            IsDeleted = false,
                            Name = "ARM Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("f93b6763-93d7-41d2-9a4c-4929d359b69c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8336),
                            IsDeleted = false,
                            Name = "ARM HIIL"
                        },
                        new
                        {
                            Id = new Guid("fee31ed7-4adf-4d03-8fd0-b3144b42865a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 349, DateTimeKind.Utc).AddTicks(8347),
                            IsDeleted = false,
                            Name = "ARM Capital"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlternativeWorkarounds")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyNonElectronicVitalRecords")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationsUsedToRunProcess")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessProcessDescriptionSummary")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerExperience")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinancialImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyVendors")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumAllowableOutage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MinimumBusinessContinuityObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherProcessesOrPeople")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeakPeriod")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryRecoverStrategyAndSolution")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecoveryPointObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecoveryTimeObjective")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegulatoryOrLegal")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteWorking")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reputation")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdPartyImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BIAUnitProcessDetails", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BIAUnitProcessDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BIAUnitProcessDetailsId");

                    b.HasIndex("UnitId");

                    b.ToTable("BIAUnitProcessDetailsBusinessUnitToRunProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("BusinessImpactAnalysis", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessImpactAnalysisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisId");

                    b.HasIndex("UnitId");

                    b.ToTable("BusinessImpactAnalysisUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessImpactAnalysisUnitJson")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BusinessImpactAnalysisUnitLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessEntityId", "Name")
                        .IsUnique();

                    b.ToTable("Department", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7458),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7463),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7466),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7474),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7476),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7478),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7479),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7481),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7484),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7507),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7509),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7513),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7514),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7517),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7525),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7527),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7529),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("2b4752e0-89e3-45ab-b4d6-f3809bd9c015"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7531),
                            IsDeleted = false,
                            Name = "ARM Security"
                        },
                        new
                        {
                            Id = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7533),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7536),
                            IsDeleted = false,
                            Name = "Business Development"
                        },
                        new
                        {
                            Id = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7537),
                            IsDeleted = false,
                            Name = "Retail Sales"
                        },
                        new
                        {
                            Id = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7539),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7541),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7543),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7545),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7547),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7549),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7552),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7553),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7555),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7557),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7558),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7560),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7562),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7564),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7567),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("2214335d-9ca8-4ac9-8fe1-352deda923bf"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7569),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7570),
                            IsDeleted = false,
                            Name = "Operations Settlement"
                        },
                        new
                        {
                            Id = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7573),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7575),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7577),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7578),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7580),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7583),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7585),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7587),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7589),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7590),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7592),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7594),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7595),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7598),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7600),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7602),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("1777e6a2-05bc-4322-81f0-10a205779214"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7604),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("427b8268-2d8b-4686-b677-69de2a46a459"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7606),
                            IsDeleted = false,
                            Name = "Treasury Operations"
                        },
                        new
                        {
                            Id = new Guid("f663d307-7d4d-4261-9f7e-e8fe6645ba18"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7613),
                            IsDeleted = false,
                            Name = "Treasury Sales"
                        },
                        new
                        {
                            Id = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7615),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7617),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7620),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7622),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7623),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7625),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7627),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7629),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7630),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7632),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7635),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7636),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7638),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7640),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7642),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7643),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7645),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7647),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7649),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7651),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7653),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7655),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7656),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7658),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7659),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7661),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7664),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7666),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7667),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7669),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7671),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7672),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7674),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7676),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7679),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7680),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7682),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7684),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7686),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7687),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7689),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7691),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7698),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7700),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7702),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7703),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7705),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("865be81a-ebe9-4c50-b5b9-9c07c28b1d9f"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7707),
                            IsDeleted = false,
                            Name = "Company Secretariat"
                        },
                        new
                        {
                            Id = new Guid("252cf529-9e73-4257-a718-d9cf51251ae0"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7708),
                            IsDeleted = false,
                            Name = "Environmental, Social and Governance"
                        },
                        new
                        {
                            Id = new Guid("37d376e3-5e1f-42a7-9d77-e63f07ca4475"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7710),
                            IsDeleted = false,
                            Name = "Data and Insights"
                        },
                        new
                        {
                            Id = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7713),
                            IsDeleted = false,
                            Name = "ARM Agricbusiness Fund Manager Ltd"
                        },
                        new
                        {
                            Id = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7715),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7716),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7718),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7720),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7721),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7723),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7725),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7728),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7729),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7731),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7734),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7735),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7737),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7738),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7740),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7743),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7745),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7746),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7748),
                            IsDeleted = false,
                            Name = "Design & Construction"
                        },
                        new
                        {
                            Id = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7750),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7751),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7753),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7755),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7758),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7759),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7761),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7763),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7765),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7766),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7768),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7770),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7772),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7774),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7781),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7783),
                            IsDeleted = false,
                            Name = "Corporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7785),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7787),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7788),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7790),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7793),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7795),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7797),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7798),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7800),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7802),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7803),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7805),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7809),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7810),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7812),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7814),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7815),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7817),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7819),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7820),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7825),
                            IsDeleted = false,
                            Name = "Legal and Compliance"
                        },
                        new
                        {
                            Id = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7826),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("840c2b0e-4146-41fb-a771-ede34bd0d915"),
                            BusinessEntityId = new Guid("f93b6763-93d7-41d2-9a4c-4929d359b69c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7828),
                            IsDeleted = false,
                            Name = "ARM HIIL"
                        },
                        new
                        {
                            Id = new Guid("b0b881eb-8beb-412e-8b63-ebfb5fbe0c0a"),
                            BusinessEntityId = new Guid("fee31ed7-4adf-4d03-8fd0-b3144b42865a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 352, DateTimeKind.Utc).AddTicks(7830),
                            IsDeleted = false,
                            Name = "ARM Capital"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Blob")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("RiskEventType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(8022),
                            IsDeleted = false,
                            Name = "Internal Fraud"
                        },
                        new
                        {
                            Id = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(8026),
                            IsDeleted = false,
                            Name = "External Fraud"
                        },
                        new
                        {
                            Id = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(8028),
                            IsDeleted = false,
                            Name = "Employment Practices and Workplace Safety"
                        },
                        new
                        {
                            Id = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(8030),
                            IsDeleted = false,
                            Name = "Clients, Products and Business Practices"
                        },
                        new
                        {
                            Id = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(8031),
                            IsDeleted = false,
                            Name = "Disasters and Other Events"
                        },
                        new
                        {
                            Id = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(8033),
                            IsDeleted = false,
                            Name = "Business Disruption and System Failures"
                        },
                        new
                        {
                            Id = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(8034),
                            IsDeleted = false,
                            Name = "Execution, Delivery and Process Management"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("NAME");

                    b.Property<Guid>("RiskEventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeId");

                    b.ToTable("RiskEventTypeCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6184),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6189),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6192),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("3429aad4-e734-44ac-919c-af9758979aab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6195),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6197),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6199),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6200),
                            IsDeleted = false,
                            Name = "Safe Environment",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6206),
                            IsDeleted = false,
                            Name = "Diversity and discrimination",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6208),
                            IsDeleted = false,
                            Name = "Employee relations",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6210),
                            IsDeleted = false,
                            Name = "Suitability, disclosure and fiduciary",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6212),
                            IsDeleted = false,
                            Name = "Improper business or market practices",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6214),
                            IsDeleted = false,
                            Name = "Product flaws",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6216),
                            IsDeleted = false,
                            Name = "Selection, sponsorship and exposure",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6217),
                            IsDeleted = false,
                            Name = "Consulting/Advisory Activities",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6225),
                            IsDeleted = false,
                            Name = "Mismanagement of classified company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("5e969527-3694-477a-8f17-40e53039966c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6228),
                            IsDeleted = false,
                            Name = "Misrepresentation of company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("635ca6d7-708f-4349-a483-ecf00679c489"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6230),
                            IsDeleted = false,
                            Name = "Poor Quality of Media Production",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6232),
                            IsDeleted = false,
                            Name = "Natural causes",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("611b88d4-5289-4da1-a78d-420f236257dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6234),
                            IsDeleted = false,
                            Name = "Accidents and public safety",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6236),
                            IsDeleted = false,
                            Name = "Retroactive effects and improper activities by third parties",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6237),
                            IsDeleted = false,
                            Name = "Human Acts",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6239),
                            IsDeleted = false,
                            Name = "Disputes with Regulatory Authorities or other Governmental Bodies",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6241),
                            IsDeleted = false,
                            Name = "Interruption in services provided by external providers",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6244),
                            IsDeleted = false,
                            Name = "Inadequacy Inefficiency Malfunction or Block of Technology Systems",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6246),
                            IsDeleted = false,
                            Name = "Transaction capture, execution and maintenance",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6248),
                            IsDeleted = false,
                            Name = "Monitoring and reporting",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("81f7e998-9b34-4092-8590-a551647de2c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6250),
                            IsDeleted = false,
                            Name = "Customer intake and documentation",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6251),
                            IsDeleted = false,
                            Name = "Customer account management",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6253),
                            IsDeleted = false,
                            Name = "Non-client counterparty breaches",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6254),
                            IsDeleted = false,
                            Name = "Vendors and suppliers",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(6256),
                            IsDeleted = false,
                            Name = "Other Process breakdown",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<Guid>("RiskEventTypeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeCategoryId");

                    b.ToTable("RiskEventTypeSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c48af021-4557-404f-b6b0-b21d5fa08538"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5498),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("5c9f73a4-0565-4ea3-b199-d3cc6023572e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5503),
                            IsDeleted = false,
                            Name = "Theft",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("bf0cdfcb-b5de-45f6-b7cd-5f65fe91a2a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5505),
                            IsDeleted = false,
                            Name = "Cash management shortages",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("2503a8f2-3207-4c08-899b-cda7295c287c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5510),
                            IsDeleted = false,
                            Name = "Extortion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("db4c5449-3801-4fba-8a84-c6074872ba21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5512),
                            IsDeleted = false,
                            Name = "Embezzlement",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("b5322764-77b5-4c11-8465-54924355f0e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5513),
                            IsDeleted = false,
                            Name = "Forgery",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("03bfa405-f8b1-4427-9c8f-c81a25805613"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5515),
                            IsDeleted = false,
                            Name = "Cash suppression",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("dbebdbd9-b5b4-4244-b0ea-7da50b9b8e5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5516),
                            IsDeleted = false,
                            Name = "Cheque conversion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("ea5cbffe-f14b-44fa-a309-1917df4a0a9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5518),
                            IsDeleted = false,
                            Name = "Manipulation of source documents",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("4379f711-6b47-4085-95bd-2ce957c1296f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5519),
                            IsDeleted = false,
                            Name = "Manipulation of customer accounts",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("0eadd5bb-2767-4699-97ed-cf0a52260347"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5520),
                            IsDeleted = false,
                            Name = "Teaming",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("9f3daf5b-bb14-4920-84a6-bddba331193e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5523),
                            IsDeleted = false,
                            Name = "Illegal sales of securities from Clients portfolio",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("11a75e73-dfaf-4ecf-9090-20c006b409f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5524),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("c0ed3d3b-0c84-4dcd-963a-33e9e3af3888"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5525),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("39030a08-a94b-4261-adb5-83ee8fd91dba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5527),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("7986072e-5775-4b12-adac-da5f15a00816"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5529),
                            IsDeleted = false,
                            Name = "Misappropriation of company assets",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("4847cad7-72bc-4036-a294-42396d3e2845"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5530),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("67f16816-acfb-4fd2-961a-8a8fc062e640"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5531),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("9e7fdc6b-dcc3-4a29-825a-66c817261981"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5532),
                            IsDeleted = false,
                            Name = "Intentional mispricing of products",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("9976c528-e0be-4ba4-92cd-b0f8d6574358"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5536),
                            IsDeleted = false,
                            Name = "Destruction of source documents",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("547d2a31-242b-44d3-af92-b7a628ea4762"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5537),
                            IsDeleted = false,
                            Name = "Unauthorised income waivers",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("6e65d9c8-2600-408a-9893-d941eb8539b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5539),
                            IsDeleted = false,
                            Name = "Granting unauthorised credit",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("f8ca316f-70a1-4ea3-815b-d5a08b9bebd1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5540),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("bd3dd9f8-3bab-4eeb-98ed-339a1a3c3b7d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5541),
                            IsDeleted = false,
                            Name = "Cash theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("f32fb669-c67b-4d00-b7a6-93e8495f90c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5548),
                            IsDeleted = false,
                            Name = "Pool car theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("f5503737-c5ee-4c20-9f19-8a4d6c4b6774"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5549),
                            IsDeleted = false,
                            Name = "Cheque forgery",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("f1ba4fee-6b3f-41a0-9791-666af5ebbef2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5550),
                            IsDeleted = false,
                            Name = "Cheque fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("cbefcb3f-bafe-428c-be60-1a3866ecc4f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5553),
                            IsDeleted = false,
                            Name = "Cheque kiting",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("d4bb6ecb-1ed3-48a0-a123-a91f6669dd72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5554),
                            IsDeleted = false,
                            Name = "Fake currency fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("1f0f8042-ab0a-48e6-a92e-79dc37a16ea8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5555),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("e2864675-4e0c-4a52-b3e3-7ea9ef32b576"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5556),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("7782b2a8-9b25-4a5e-8576-ad19d01c8d4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5558),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("dd71c55a-baac-4d5e-b7aa-d14caff07cc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5559),
                            IsDeleted = false,
                            Name = "Account take over / impersonation",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("1a0ef411-cb42-4fe4-9c3f-f253ed422a24"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5560),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("ea19dae7-36a3-4d54-894f-5bb702e3e26f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5561),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("cc28e14d-b0a2-48e1-b5f7-51b3fbf4f683"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5564),
                            IsDeleted = false,
                            Name = "Employee health and safety violations",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("d3cade4e-21b4-4102-96ec-d04432705611"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5566),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("f4abecfb-2570-4aef-9bee-62e1f5654e3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5567),
                            IsDeleted = false,
                            Name = "Discrimination on account of religion, nationality, race",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("e8cc240d-50df-4448-9121-ddbe6340e56a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5568),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("e3e1267e-d775-4745-811d-50cf30891c45"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5569),
                            IsDeleted = false,
                            Name = "Employee disputes and investigations",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("d2fb9b80-caf8-4629-a975-044655f9d190"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5570),
                            IsDeleted = false,
                            Name = "Mistakes in the administration of employee compensation, benefits, or termination",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("0941ea99-abe0-4c16-a766-67ef6a9d7809"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5572),
                            IsDeleted = false,
                            Name = "Organised labour activities",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("ff583497-40ae-4eca-8b0a-0e4482ddbfe9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5573),
                            IsDeleted = false,
                            Name = "Fighting between staff",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("25134d21-4eff-4bfe-a54a-a998edcf78e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5575),
                            IsDeleted = false,
                            Name = "Fiduciary breaches and guideline violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("5e30dd68-1b54-4eb6-9402-289cb7437342"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5578),
                            IsDeleted = false,
                            Name = "Customer suitability violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("db3798b1-99f2-44a3-8358-3ba60e91511f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5579),
                            IsDeleted = false,
                            Name = "Disclosure / misuse of confidential client data",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("dd58f615-43c8-499f-bf3b-5b239439574c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5580),
                            IsDeleted = false,
                            Name = "Breach of regulatory guidelines on foreign exchange transactions / suspicious transactions",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("6db6a3b7-f272-4b3b-9ecf-49cb5a7e8a66"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5581),
                            IsDeleted = false,
                            Name = "Aggressive selling",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("83d818ae-f6e3-4954-8083-721afe246526"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5582),
                            IsDeleted = false,
                            Name = "Account churning",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("50dd5748-19ae-4139-8a37-7055882632c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5583),
                            IsDeleted = false,
                            Name = "Unlicensed activities",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("f272d59e-7b5f-4490-9427-0a9a4910474c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5584),
                            IsDeleted = false,
                            Name = "Money laundering",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("9b01475e-73cd-4398-a449-d3ccc2a77f9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5587),
                            IsDeleted = false,
                            Name = "Tax non-remittance",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("2c2ef983-f351-4597-b1d0-3d5233932b23"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5588),
                            IsDeleted = false,
                            Name = "Product defects (e.g. Marketing of unauthorised products)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("18b4e127-d543-4d7f-90b4-0ffb025e2030"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5589),
                            IsDeleted = false,
                            Name = "Model errors (e.g. product conception, methodology, or pricing errors)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("1846260a-d786-4e4d-8939-65a5944c9c71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5590),
                            IsDeleted = false,
                            Name = "Non - compliance with internal guidelines when investigating a client",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("f51a3cfd-5ccc-4172-8443-016251b2b532"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5592),
                            IsDeleted = false,
                            Name = "Client exposure (loan) limits exceeded",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("0ae5dd62-c195-44c3-af8e-108ff62b25e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5593),
                            IsDeleted = false,
                            Name = "Penalties / Fees incurred for contractual disputes / transgressions",
                            RiskEventTypeCategoryId = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b")
                        },
                        new
                        {
                            Id = new Guid("f07e1c73-4475-4def-85c8-f694435dea38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5594),
                            IsDeleted = false,
                            Name = "Competitors obtaining information about the firm's initiatives and business strategy",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("168737e9-f46d-444e-b5f0-e68d72e2fcc4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5595),
                            IsDeleted = false,
                            Name = "Misplacement of client information and correspondence",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("dfc4c495-f11b-4ee4-a552-ced51b455391"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5597),
                            IsDeleted = false,
                            Name = "Errors in ARM's publications and annual reports",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("211caa13-0658-4e8e-ac2b-7b457c682256"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5599),
                            IsDeleted = false,
                            Name = "Misquotes by public media sources",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("21b653e3-2881-495d-a5f4-8f1a02423e64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5600),
                            IsDeleted = false,
                            Name = "Inferior production of corporate gifts",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("1a0ac76b-1cbe-42d6-a1ca-3e5d4d486041"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5601),
                            IsDeleted = false,
                            Name = "Substandard /Offensive advertisements and promotional activities",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("6f9745a3-4572-48cb-8514-6dde8ae38dc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5602),
                            IsDeleted = false,
                            Name = "Poor quality of Annual Reports prints",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("bab3970c-3e96-441a-8799-a2963349755d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5603),
                            IsDeleted = false,
                            Name = "Fire",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("4b5da3c7-aef5-4ca0-b32d-3425db77a68e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5604),
                            IsDeleted = false,
                            Name = "floods",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("a9c3918f-c225-426d-a569-a46b1af4a69e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5606),
                            IsDeleted = false,
                            Name = "hail damage",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("a50d4dff-142a-4218-8bce-559851b823f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5608),
                            IsDeleted = false,
                            Name = "General responsibility for injuries caused to third parties eg. company Vehicle accidents",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("6d2c62fe-a73f-406c-b023-09be444ee083"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5609),
                            IsDeleted = false,
                            Name = "Electrical surges",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("9c284279-752e-4e38-8c73-f72507038547"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5611),
                            IsDeleted = false,
                            Name = "Fire outbreak",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("5dbb24be-75f7-47fb-8140-5552fab62b55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5612),
                            IsDeleted = false,
                            Name = "Water spillage",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("08cb7b83-443f-433c-941d-98aafe6b4743"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5613),
                            IsDeleted = false,
                            Name = "Smoke detectors not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("90c3dadf-e092-4d95-a5fb-bc802c7f95d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5614),
                            IsDeleted = false,
                            Name = "Fire alarms not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("8ce8228c-2016-4946-b45e-78eafa287e19"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5615),
                            IsDeleted = false,
                            Name = "Political interference in the companys operations",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("57c18ead-728e-42da-85bc-3950e313b9e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5617),
                            IsDeleted = false,
                            Name = "Launch of competitive products by agents",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("24f0b4f4-b716-42d8-b8aa-7b95f6df25c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5619),
                            IsDeleted = false,
                            Name = "Court debt judgements",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("bf447b26-b253-4a8b-9db3-faf53e27a43f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5620),
                            IsDeleted = false,
                            Name = "Out-of-court settlement costs",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("607be58d-4236-427b-ac25-b681f26dbd59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5621),
                            IsDeleted = false,
                            Name = "Litigation expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("613b863c-19b0-4a21-b4d3-54ca7a5a7e63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5627),
                            IsDeleted = false,
                            Name = "Debt recovery expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("1dd3b807-3616-45cf-b321-e8019e05e89d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5629),
                            IsDeleted = false,
                            Name = "Fines & penalties",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("8aa0ce6c-cab3-41bb-a7de-faed1c084512"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5630),
                            IsDeleted = false,
                            Name = "Loan writeoff expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("89c7fe29-adde-4cc0-8a3c-1b9549c6e873"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5631),
                            IsDeleted = false,
                            Name = "Vandalisation of company property",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("eee59c2c-6f29-4a69-9f36-56b4f7d32bd5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5632),
                            IsDeleted = false,
                            Name = "Sabotage",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("955f603c-2c17-43ab-9c06-daa45817af77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5635),
                            IsDeleted = false,
                            Name = "Robberies",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("62bb3108-551c-4dbb-97a4-1126cb60c692"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5636),
                            IsDeleted = false,
                            Name = "Missed deadlines",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("91ee891a-277b-4ce7-9207-740e44f89f51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5637),
                            IsDeleted = false,
                            Name = "undeserved fines and licence supensions",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("4f26ff2a-61a0-456f-8844-e10009e4ffdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5638),
                            IsDeleted = false,
                            Name = "Interruption in communications",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("15c289a8-4b76-47ff-8616-8d72d0f56249"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5639),
                            IsDeleted = false,
                            Name = "Power outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("92ecc49a-4be4-458f-8fab-67e840f1b127"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5641),
                            IsDeleted = false,
                            Name = "Inability to process transactions",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("1f2de5da-f22f-488f-bdd3-5db58ec75800"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5642),
                            IsDeleted = false,
                            Name = "Telecommunication link outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("c376524e-324b-437e-8268-4326da7d15b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5643),
                            IsDeleted = false,
                            Name = "CCTV outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("5141427f-42c1-4a01-ab3e-eec671c7abc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5646),
                            IsDeleted = false,
                            Name = "System downtime",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("96a20db4-fa0b-43e1-bb84-0f4786befb21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5647),
                            IsDeleted = false,
                            Name = "Automated data processing errors",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("17717a08-d165-4baf-bbf3-ddabcf8c7143"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5648),
                            IsDeleted = false,
                            Name = "Errors in the maintenance of information",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("9966a667-f9fe-4842-b630-96de38e1d78e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5649),
                            IsDeleted = false,
                            Name = "Data entry errors (payment instructions, rates)",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("cb4c1832-bc25-4379-8334-39da39762a7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5650),
                            IsDeleted = false,
                            Name = "Transaction not booked",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("128b5428-1d9c-4e17-b99c-aa021004d879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5651),
                            IsDeleted = false,
                            Name = "Alteration not countersigned",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("b065e4b3-555b-4801-b8e7-ac86248d1010"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5653),
                            IsDeleted = false,
                            Name = "Transaction not registered",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("217cafcd-053b-419d-b975-6ddbb5c69ca0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5654),
                            IsDeleted = false,
                            Name = "Amount in words different from figures",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("665af80c-fc8c-4ec5-a205-888d1ee2b5b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5656),
                            IsDeleted = false,
                            Name = "Application of wrong interest or exchange rates",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("3b921a54-2bb5-4a12-83f4-54e21b378a81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5657),
                            IsDeleted = false,
                            Name = "Failure to regularise customer instructions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("60d17f8b-717c-4e50-a11f-3b24dd050192"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5659),
                            IsDeleted = false,
                            Name = "Data entry errors",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("f8fc29e2-639d-4ef9-876f-d64e54980af1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5660),
                            IsDeleted = false,
                            Name = "Processing undated transactions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("a6f6a98d-e931-4e20-babb-9b1703d8568c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5661),
                            IsDeleted = false,
                            Name = "Improper identification of beneficiaries",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("01c210a7-6169-4bf9-aacc-b0621e4f97fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5662),
                            IsDeleted = false,
                            Name = "Wrong classification of accounts",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("f48a037d-7256-4dba-998e-69463d44f287"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5663),
                            IsDeleted = false,
                            Name = "Incorrect client records",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("ba860757-c849-4c05-9b7c-1711484e8f26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5665),
                            IsDeleted = false,
                            Name = "Inaccurate information sent to clients / external parties",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("cbe04450-26da-4bed-880f-60a210989b16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5667),
                            IsDeleted = false,
                            Name = "Client permissions/disclaimers missing",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("679179ef-803a-42ad-9202-94be3a95b596"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5668),
                            IsDeleted = false,
                            Name = "Contractual documents missing / incomplete / erroneous",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("e921bc0d-d27c-43e5-b4d9-30becf344d54"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5670),
                            IsDeleted = false,
                            Name = "Improper account setup",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("d1c79edb-473e-4e48-ae21-94df38d0a832"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5671),
                            IsDeleted = false,
                            Name = "Incomplete account opening documentation",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("58f89e27-14fe-449a-b10c-ec2d46630ddf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5672),
                            IsDeleted = false,
                            Name = "Failure to upload mandates",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("54bbb095-428f-40af-8907-086d047c002d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5673),
                            IsDeleted = false,
                            Name = "Unapproved access given to accounts",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("fff36588-402c-4ad5-b018-e337ad30e8bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5674),
                            IsDeleted = false,
                            Name = "Negligent loss or damage of client assets",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("cf00caa8-37d8-4052-a93a-1daeb83900bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5676),
                            IsDeleted = false,
                            Name = "Failure of counter-party company to repay inter-company lending amounts on demand",
                            RiskEventTypeCategoryId = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472")
                        },
                        new
                        {
                            Id = new Guid("d176bad0-9287-4ada-93c9-491daef984e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5678),
                            IsDeleted = false,
                            Name = "Failure of vendors to deliver on contractual obligations",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("7e27cd79-a45b-4561-b1bf-4c6948cd4c34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5679),
                            IsDeleted = false,
                            Name = "Disagreements over terms of outsourcing contracts",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("5374de26-c877-4fba-82f1-935f8ed363cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5680),
                            IsDeleted = false,
                            Name = "Errors in Human Resources/ Administration processes",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("fd29b922-75b6-4b1c-bb20-1a2ff647ecb1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5682),
                            IsDeleted = false,
                            Name = "Procurement not authorised",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("0495c905-60cf-4678-bb77-a7def9e827a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 366, DateTimeKind.Utc).AddTicks(5683),
                            IsDeleted = false,
                            Name = "Disposal of Fixed asset not approved",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RCSAStage")
                        .HasColumnType("int");

                    b.Property<Guid>("RiskControlSelfAssessmentUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RiskControlSelfAssessmentUnitId")
                        .IsUnique();

                    b.ToTable("DocumentRSCAProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRSCAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentRSCAProcessJsonDump")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRSCAProcessId");

                    b.ToTable("DocumentRSCAProcessLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwnerUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<string>("ColourEffectiveness")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Control")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectiveActions")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRCSAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InherentRisk")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResidualRiskLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ResidualRiskRating")
                        .HasColumnType("int");

                    b.Property<string>("ResidualRisks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResult")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TestResultAttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<string>("TestToApply")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeLine")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRCSAProcessId");

                    b.ToTable("ProcessInherentRiskControl", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("RSCAProcess", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("24ae389b-b92d-4a8f-ba14-264e74c8c025"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(111),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("263e166b-3b7e-40c1-af1a-8e45a7c3d4f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(118),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("9aa86996-f1ae-43c1-a131-25e40c147089"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(120),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("e92afc18-ecda-4d7c-a8b3-0e7ad4552723"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(122),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("593ff69b-35d0-45c4-8b7c-71653a799e6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(124),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("1e68375d-ac80-4704-8108-f955d4e52e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(125),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("c90f8957-5056-4964-b567-ecbf0b4db22c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(127),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("8aa306f9-39bb-4d2e-ae08-4db0369bf7c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(128),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("260db7e1-57db-49b8-ac37-c7cfeeff46a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(129),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("1f5e3bb8-6a12-4edc-87eb-50c26d8e94cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(132),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("f2287a0d-641d-4343-8a58-df327d5fec2b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(134),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("cabc4919-17a7-4b0c-a1ca-839c93133783"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(135),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("76945537-1abf-4013-8964-e38474aa719c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(136),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("9b9bf87b-ca60-4e25-ab19-66c2181791a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(138),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("63d67587-df8c-42cf-b5bf-093be2c0a69e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(140),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("a52761ee-210e-41da-8e70-877853371252"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(141),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("4a4a3656-57d2-4a2b-85c7-ecf78d6c6dbe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(143),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("16936a18-cd1c-49d7-bc32-4fe8845c1623"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(145),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("7cd90dc0-0ae5-40dc-aa68-0c835dd27759"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(147),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("a5c2a50d-e463-42c0-97b2-085446feef5d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(148),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("6c6b6c75-39df-4358-a962-0c523d3286f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(150),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("2916864e-547d-4b76-884a-39b9cd2ccdd5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(151),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("e243f6ca-ddbf-402c-a0a0-a6aa09a6859c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(152),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("f9560192-9bfc-418b-af6d-5eddbe709aa6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(153),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("bf064de6-4387-4029-9ef3-21b7ec2cef0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(155),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("b477f707-a6b4-416c-9768-44cd54aeb9b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(157),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("bb90bb08-f174-47b1-96ae-e28d690cc513"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(159),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("0d74b6b9-c317-47f4-b8b9-66720dafbb3a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(161),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("01b3ff34-049b-40f7-ba00-8b772bca6e4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(162),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("b9ffdd33-f0cd-45ef-87ac-ddcb56dc20d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(163),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("9a2d1504-8d90-46fc-972e-d1c6f361e338"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(164),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("720364f4-fa64-4535-8934-8d52eb2126ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(166),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("957c342b-c3ba-4573-bec1-6b36dd326e53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(167),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("8ed80b98-0aec-4fd5-8567-d340fc0e14af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(170),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("114fa7e1-c9e9-4b6b-9f83-d3faf714a218"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(171),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("2c6432d4-3f2f-4136-bc46-1627b026117c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(172),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("e96994e9-1f45-4d62-8311-31e2f935e2d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(173),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("be963dee-1445-41e6-94bd-ceb666addcd2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(175),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("dcb2e857-d96f-4209-b254-7fa5c858dd1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(176),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("b0ade876-9e04-4cb0-9563-c7f4170e1f23"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(177),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("9b58a016-dc75-49e6-90f0-2f09739aff28"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(179),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("9cdca892-4ab5-45ff-918a-c76e14b65c84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(181),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("5cbaa47d-2760-4bce-a74e-c963d3ad868c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(183),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("1f600eda-0c38-4a95-a2e4-05e7576eb077"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(184),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("8a3b9a6c-66e6-42b5-b277-5eabdb78a1fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(185),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("6e1c0866-444e-4272-bef1-8430ca5bd93e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(187),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("bddce347-eeb8-48d1-a4b8-ef52b8f0422f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(188),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("6947b1d5-ba5b-49a2-ae76-e6711ec20a58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(189),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("0ea02593-20e4-4905-ae2b-484af69c98cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(191),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("dcac9638-4cf2-471f-83fa-7f877618ea8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(194),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("7eb4969d-1c7f-48c0-a762-780889d45143"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(202),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("3e9035e3-456f-47b5-a2ed-ac30f45c2aea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(204),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("c8a39c0b-9122-4bd9-831b-7d656b8cbdf8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(205),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("7032373f-d02e-4c56-81f4-61f87f50bd12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(206),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("43366381-caf5-422c-978b-c68e0dbab4e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(208),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("faab4d67-a938-4e0e-ba77-9bfb9390480d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(209),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("27785252-0c5f-4c67-b718-8035144c4c3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(210),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("b9c00e54-5897-4f28-82d0-c8a670d21d3a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(213),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("dbcfded1-9a80-49eb-8b61-7160f6b033e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(215),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("ae3892fa-e432-4ab6-a713-ce2378b01de5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(216),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("825c8f55-41ae-40c8-8350-4072e21a02c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(217),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("7a513ffe-e46e-40b1-92d6-92cedeff8c90"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(218),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("c239da6d-283c-419f-95d6-757bb4151ee5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(219),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("4590654e-103a-49c0-9064-a5b734ac7007"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(221),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("0011012d-0aca-4817-9b89-2a276faa1ebc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(222),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("749fc474-25cc-4e85-a2cc-5d46d15c83a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(224),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("776c94d1-553d-4834-9c94-d5c989fb9d66"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(226),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("f305ae97-c3f3-4e7f-a3f5-3d8fd5c748d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(227),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("51532870-5da5-4ba1-8881-ba38b4270ce8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(229),
                            IsDeleted = false,
                            Name = "Redemption/Withdrawals/Other Payments",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("209f37ff-baf2-48b1-996f-9a17262fcbfc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(230),
                            IsDeleted = false,
                            Name = "Subscriptions",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("858c14a1-fbaa-4035-9ff6-b7780588483a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(231),
                            IsDeleted = false,
                            Name = "Reference Letters",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("d4a27bce-badd-4c7b-ad92-20048255f717"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(233),
                            IsDeleted = false,
                            Name = "Statement/Valuation Requests & Quarterly Portfolio Reviews",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("da441dec-805b-4171-891d-f18d8a992ccb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(234),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("c0301381-f183-425d-a4d4-0bb5bae1817e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(236),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("d626eb7b-b3a1-4468-9365-10497516a5d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(238),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("650e4200-4d47-4dae-9176-21d552607f8f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(239),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("5a6414da-b7d1-4f3f-933a-df835d4db21b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(240),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("26e6683c-bc8e-453c-97f1-20245e85798b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(241),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("a2728ea2-8e4d-4c29-8d0c-7196a78932d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(243),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("d6c3cb8c-b4e9-4584-bf47-6021fd401e81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(244),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("ae36e2e2-8c0d-414e-bff9-49eebcca95b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(245),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("67d49f89-8634-4c4c-9cd5-b9f0fc544ae4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(247),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("84f3612f-f75a-4192-93e9-ec7d1ce9fbce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(249),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("965ab32b-0502-4495-89e9-f92fdf075d78"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(250),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("4bd99a29-d145-4a8b-86dd-11523845a5ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(251),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("940fb8cf-5959-4587-bee7-cb2cf3008326"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(252),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("f6d45b44-76f7-48b3-8222-330207d35e4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(253),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("012d3cef-31b8-4b63-a137-e649d20475c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(255),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("b7a2b612-6f38-475b-810d-e0d355ba3cea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(256),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("a0c5670e-34b7-4885-8998-3f2c651664b0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(259),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("d993429c-8aa9-4c09-83ba-67f8ea902913"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(260),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("b2ceb698-190e-43e0-afda-bd660a9360e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(261),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("7f22d4db-77fc-4a39-b0dc-4acfbfcda8f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(262),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("f78caf33-a083-466f-9d8b-f0be3203e217"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(264),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("d4368974-29d2-40ce-9721-f033534a4e21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(265),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("0ee8e986-1323-4a8f-b087-3f3bc807d295"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(266),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("0c6f2568-0365-4ddf-a7f0-c19808ee0b99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(267),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("dbb461d2-65c6-4aae-9989-3950f652d89e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(270),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("575389df-07f4-46ca-9a06-37aac29f3e9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(271),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("e2232bbd-ff0a-40e4-a7f4-bc3a0f25171f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(272),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("03eebb42-99f1-461f-97ae-ce88cf509516"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(273),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("fc269140-c02a-4d64-87f0-1ccc4c76adba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(274),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("d9a173d7-3a32-406c-a1ef-00b59e8692e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(276),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("c5edc399-3ffa-4c67-ac39-bddaf730295f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(277),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("b35b4956-4663-4d57-82fc-86f0c646627d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(283),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("f812b342-faee-4f1f-8b39-7b896ed27b55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(286),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("c574c2ba-e0ed-40c3-a875-a6aca4210929"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(287),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("f63ef882-2927-4076-942e-b065025f1591"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(288),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("bcab51d8-1202-4199-8c42-5814f89a8b68"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(289),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("99eccb89-6b4f-4e41-a347-6c3f63957880"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(290),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("6fe8b94a-4e8f-4e71-998e-e528a972be72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(292),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("84ec924d-495f-4745-8d55-ee7735fcef86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(293),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("1f81c4e0-b90f-4c9a-971d-fabf5f69f928"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(294),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("4a6a9f40-bd38-43a1-bb4e-690be92bf7c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(296),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("51070436-af01-4031-b4f4-54025cc0ed4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(298),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("287abd2f-1082-47d7-8833-7ab3fe289654"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(299),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("c4297974-e9ee-4e6b-a2cd-59e94dde582c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(300),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("79e946e0-dd95-4b2f-928d-bc059265ba7e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(301),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("5c0e438a-a142-467a-9a4d-d4fc9b5d80e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(303),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("56743fbc-4179-4af9-8276-7e5a045feb54"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(304),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("3af9e6c7-f2c1-48da-8c04-449cb92f7d65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(305),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("23c12877-0648-4b70-83c0-326dd3f8b42b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(307),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("b9c03c6b-9ef0-4db9-b36a-b697ea8090f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(309),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("eb397859-7d74-482f-8566-ab99302e7dfb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(311),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("6ecedf1e-1213-4604-b004-ff69fff76f1b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(312),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("1ce2d551-54af-470d-aa10-438a0e73a3ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(313),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("ad1cf8ea-17d7-47b0-849d-dca77865f330"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(314),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("e5d1e7d2-ed3b-4f29-a39c-2cb746fc8102"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(316),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("b0a3b46a-bfa2-4e5a-bb11-65789da259bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(318),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("342d4cef-d2da-4b83-a031-7982e53eff4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(320),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("b52c9c86-9b38-4ae5-96ad-0a1bf48bfed9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(321),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("d925ccf7-234f-4dd6-b4cb-37bc45b278f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(323),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("46ce9ed8-3ddd-4f9e-9bff-55d9da9d2fee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(324),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("f262cda2-316e-48c5-9607-a013a75dfde2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(325),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("a5eaec6f-a24f-46d1-84ab-345f66390c97"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(326),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("f0d508b4-7c42-440f-b7b3-7250b5ded140"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(328),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("94065758-67e5-4648-8cb6-fb31ede61aac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(329),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("118ed42e-bc5f-46af-9893-940f4caf8aa3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(331),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("cddd1174-68a9-42c3-9468-d113085cea04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(332),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("3f368bb5-6d3d-4c7e-8c4b-fd1615abe869"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(334),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("6c970b03-c277-414f-ab3a-bf2277e25438"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(336),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("23aeb4e7-3207-4b4e-b0b6-f773827bc247"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(337),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("17cb7713-e64e-4984-9379-44adfbd40155"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(338),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("3c6d2fa8-79e4-4bc0-bb81-e1b9c3607b7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(339),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("92cbcc70-3c9c-433f-9261-0acbb3e8fad6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(341),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("07b39c00-9f0b-42a9-9766-effa0f65555c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(343),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("e22dfe59-5be2-4f6b-9a53-c0b3ba9d4e4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(344),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("fb5d234b-65d3-403a-a2f0-c349b2a2e6a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(346),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("aef3d3cf-c881-4d52-8ba7-fcbc76a00e0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(347),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("8a3c1962-c49b-48fa-92a6-3fa27b623ff7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(348),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("22e4f4eb-fe44-49ce-9b8f-bd396d63b723"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(349),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("c9b576f9-2de2-41cd-aaa1-a9fcb5789003"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(351),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("a79498c9-b68e-4446-b483-40d2cc5d66dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(352),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("bedebc6a-3241-4882-963e-1e55e4818da3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(357),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("e9521fae-0f91-43cf-a40c-f30a0402e3be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(358),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("8d6c7e96-7129-48b4-a4c5-5d2b643d6a0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(359),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("75131c03-0baf-4af1-abca-00ba49dbdcc8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(361),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("e6ea4e49-2354-440d-b135-446fc682412f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(368),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("b61fd00a-3011-4270-a967-d8b432d16bb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(369),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("e5ab9c43-2450-4553-845a-4d79ec070459"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(370),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("3a4ea158-4c90-4b99-b600-2a338d800d5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(372),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("b5b2ce01-9fdd-48be-a342-588bd20c4a98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(374),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("673786d6-1c28-4086-bd50-b9f37e7ce189"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(375),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("ae3aad9b-4fbd-4a9a-961e-f815fee926ab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(377),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("3172f0ea-8189-4ffb-a97a-2bb4baa439fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(378),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("a9eca847-8989-4c80-b5a4-80690ad7f93d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(379),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("79cece8f-7799-4fd2-beef-86ed5c8c4325"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(381),
                            IsDeleted = false,
                            Name = "Reconciliation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("0e37c495-a58a-4d18-8ac3-692e2592756e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(382),
                            IsDeleted = false,
                            Name = "Call over",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("432694a1-9307-406f-8734-9419b294fab6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(383),
                            IsDeleted = false,
                            Name = "Fee accrual validation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("017e3abf-afe4-4a19-942e-b36fc57edd2f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(387),
                            IsDeleted = false,
                            Name = "GL reconciliation and review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("8bdd98d8-caa5-430f-89d8-8f9330a7625e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(388),
                            IsDeleted = false,
                            Name = "Valuation and pricing review, EOD activities review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("9a6f9c6b-d68a-4720-90bc-2551a32a27b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(390),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("cc52f2df-aa36-492c-9d27-af7d56aba988"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(391),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("dd10d5c5-7f14-41e0-8f3e-ae34ba6d3c5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(392),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("19a41d75-4dd6-4348-a6dc-baf747ca4333"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(393),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("efa486ba-121a-4c64-8736-da563ad33813"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(394),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("34cbb62e-59d2-4929-a8ab-237ad2bf6177"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(395),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("54b1a2e0-ad50-4ffb-b348-87d0a2159d65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(398),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("f1e6e8d9-76a0-4a59-aec0-755d8a40aea9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(399),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("e21d714c-0526-4d9c-87f5-0f83461e5539"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(400),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("02184a7a-5a8e-404c-83b1-165fae1f9f3a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(402),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("6a319683-613e-4ace-bfb8-3a5d2d90c464"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(403),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("d2449d93-7c0e-4ff0-85ff-f0f7e87f9c73"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(404),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("a98746bf-1625-44e4-b7e3-5501c4814a00"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(405),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("dcbf70fe-0088-4910-8841-f73c882ab6f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(406),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("80dcb6bc-aae9-4b17-8a65-16a3c7d43756"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(409),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("55d967ea-ea69-4503-868d-e9468c50f3d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(410),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("e919fecd-8076-4ed5-b2f3-b19d1e937213"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(411),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("4a59e215-6dc8-46b5-98a1-59cd0c5e9b1b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(413),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("1cdbeb8d-3a06-468e-8863-ac3b7bd4a847"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(414),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("dd1ac9f8-fe2b-4fcf-8bfa-c25db6397f05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(416),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("cf087c52-aea2-4f67-8331-23d68515e5cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(417),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("4fe6c9fa-87a5-4ca4-96c2-8bd412ce9a33"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(418),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("10da892e-307a-491a-bf1b-ec880a6551d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(420),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("95319eb0-9fbb-4d9b-bfaa-b4cbfe420962"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(422),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("490754ae-0836-49ca-92f3-6983dca9a1d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(423),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("11be911e-cf67-4ea0-a713-3c622539b1c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(424),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("eaa6cf61-7b13-47cc-bf88-03dbc2835ee6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(425),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("022f6abe-1201-4b10-aca4-5de77cb54071"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(426),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("3c974858-53f5-442a-a87e-db644fbcc078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(428),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("be8c689f-d7d7-438a-af0d-68c33da02f8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(429),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("c0c4e9fa-413c-4806-9dea-5c26bff4c74d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(431),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("959a69fd-d4ea-4d06-b40d-796bc6d75a97"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(433),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("aad42cf0-4fd7-4110-82c5-5ce1250703bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(434),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("a604faf2-6ecf-4214-8502-dd486f185df6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(435),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("4f8cfa17-73af-4533-a376-65f72898e41d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(436),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("bd0bcb99-21b5-433b-b7a3-89f2fe8d121e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(437),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("2020c1d8-7130-4002-b785-eb6cd54177ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(439),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("73d838c9-a7c1-4b0b-8d78-0fb95968c833"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(440),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("7c56951f-80f2-490d-80f3-4cb72052e7c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(442),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("509ad2e4-38b4-4351-900d-a2f15c9a5602"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(443),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("f0eea033-37ad-48e0-bfd3-0072b62efcdb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(450),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("8318a4eb-0ac5-416a-8faf-efc9c10a33ab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(452),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("94b23e8a-c18f-4d8a-829c-1d1c5bd9b6a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(453),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("0a2c8f14-c338-48c8-9ec7-ad774c2c0716"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(454),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("6d4a7580-da09-4fee-9e2b-b73c5b85e43b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(455),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("01f3f3f1-823f-4819-887c-9008c97954a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(456),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("5f882029-6a0a-43ac-80a2-60ac5a89a34e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(459),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("6cb93b63-32ca-4aa9-b3bf-c126fe0cd8be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(460),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("1bf0c143-1522-4ac9-a4ac-9d4e1ad4c9f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(461),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("739c6922-1010-4a33-b402-c4e2e366fdf0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(463),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("93be282f-c9c6-4035-af38-d1c629d273bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(464),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("cd3eed8f-c983-4896-bd3e-a1cf3f87bbaa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(465),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("12a6dd2e-4205-4f2e-bf3b-7e4a46835fca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(466),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("f6682b78-2909-4f9c-8d90-96c0e254fdb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(467),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("a58a54eb-3a8d-45fc-893c-62b288a4d771"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(470),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("89158022-844e-439e-b419-22c68916a3c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(471),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("d70899dc-cc94-4cc4-b471-23e3c320b246"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(472),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("aa40fa57-d241-4558-8ee0-bd18ad347179"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(473),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("f9287d75-5c4c-4f86-9974-edd2a0edb90c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(475),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("04bf1695-3487-4c17-867a-a6a758fe6a77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(476),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("5c2a1d28-626e-4d59-9e0a-2c52d6c9bf5f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(477),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("3c465dcd-d8b1-490b-965b-72a53dcbf68a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(478),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("6f1f3ed5-e491-4f1a-8c1d-4641fc842f40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(481),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("8455588b-556f-48d9-b064-014e1929531a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(482),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("e097eee9-b941-4b03-8b43-5abcff98b95e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(483),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("439f2fcf-81bf-4945-a826-dee54eff3cfa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(485),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("1d18c6e0-183f-4a8a-9d72-d199a89b0f67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(486),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("c39ff031-19a5-4780-9265-07fdf411c692"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(487),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("38da5814-f1e5-4b27-a041-8097becfc371"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(488),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("665e8ce6-09e3-49f6-a1ad-1cb5e828b6eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(490),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("1b9d8cd5-7540-4cc7-abca-a8f1bb6d2418"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(492),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("d5b404f7-fdca-428c-99ce-1e34542077db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(493),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("da7077bd-a33b-4f17-85ac-c76c65a499b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(494),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("1859593d-2a37-4377-85d7-048743b74f14"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(496),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("458a021d-874f-4d75-b31d-d63e6a900133"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(497),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("08a8a5ee-dcba-409a-a0f9-1ebe8fac178c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(498),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("13f1fbea-205d-4fb8-897a-2aae32317b0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(499),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("7e921cdd-cdd8-4b30-bd3f-62c7baef365c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(500),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("40a14838-22d3-4569-8edb-ee278247c120"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(503),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("b3fd34a1-561f-46ce-8046-72b9a5a3f5aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(504),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("e52ce05d-4518-451b-87f6-c1dbecb5fe6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(505),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("6d1316d4-c907-4656-8c50-e8f0e34c0d07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(506),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("b2a048a2-a396-4a74-b25e-313f43f129af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(508),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("5187d8f5-182b-4f44-8b2f-3088b4bd8879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(509),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("32d3a9e9-387f-48ba-aaf9-7ff405467a02"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(510),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("ac879f4e-b960-42b1-893a-6e4c001724c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(511),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("b001f0cd-4853-4362-b75f-d4a04dcae7c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(514),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("77c002ed-b9fd-4561-8e97-13c157ed275f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(515),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("87f9ee76-90b5-40eb-b31c-391984da8201"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(516),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("3473c9ee-cc56-42ea-9e66-b1893f53a0f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(517),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("fb468863-958e-4091-81ed-e7202a1403a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(519),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("ac1eef60-885f-450c-ab41-28db37c0d1a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(520),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("fa3cb379-8ea3-4a9b-88c5-7d4a6da40c4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(521),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("6d2f731a-2bf5-428f-a183-69f41f50a597"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(522),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("899851ea-d1c2-4e65-9e19-339450ac4487"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(530),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("fbaa604b-0b1a-434d-9d1e-3e999a4f1a9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(531),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("dcf1a5ad-f3b9-40a6-80a5-e8783f80f8df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(532),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("2ef87d47-96c4-404f-9434-676f4d58c539"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(533),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("8f6bb0fa-bf01-4c11-9712-70ba049bff88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(535),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("8bd9d3ef-640b-41e8-9c4d-3064f546287a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(536),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("03edda18-3a9d-4a0a-97de-37b4aa1b06f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(537),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("03ff8162-1747-458e-b454-987f19082ecd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(538),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("f4ed9e12-637a-4c49-858d-3432542275d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(541),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("848b7fc6-5c88-4ced-a141-926cee7b6547"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(542),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("32613766-ffd8-47dd-b583-d5705fa6df3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(544),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("469dcf48-31f5-48cf-825f-41bec1c184bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(545),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("f0920858-490a-4e61-b94d-840df7a0ff2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(546),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("26f7944d-08f4-43b9-af75-bbf8ad74417c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(547),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("41968070-4548-4b79-9ac6-46b335a37e07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(548),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("0bc06563-a5c6-40a7-8b02-1ae165a7d201"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(549),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("00f14bfa-f368-4027-830e-5624de7eefb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(552),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("4d6298f3-b546-40a6-966d-33d5df60936b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(553),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("94b303e7-040c-410c-9d29-0628e8149b7f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(554),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("3c2ada02-0141-4fd5-a279-2b838ebd9332"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(555),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("8a1d33d8-82a4-47ab-b98a-d156321e9493"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(557),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("667ae32c-896a-4326-8a1d-e3d7a0f2ce6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(558),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("8f4bf780-0a99-4ad2-9d71-725f37deefea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(559),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("c16af82d-dbb3-45cc-bd8c-832802cade2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(560),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("d1ea803e-db28-4741-91ed-ee381764ea95"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(563),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("764008be-311c-40c4-ac60-ae4d234ec6f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(564),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("f192e0c8-aa67-4545-965c-1496e1154807"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(565),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("9aedee06-c978-4e20-b728-a6488da1d772"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(566),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("74c59843-8bea-4d05-b2de-8c9c83bfe9a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(567),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("522e1eb5-f801-40ee-b7ec-d1e009dc673f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(569),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("6353405c-bb2b-4003-8632-b2a9ab78e88a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(570),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("d945c434-1cee-4bd8-b123-3d255d9e7739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(571),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("89f18392-3d3c-4e74-a4b2-d82abb2fd43b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(573),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("e2dcd70f-89b3-4dea-8a90-522efff9f9ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(575),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("1b690754-7ed3-473e-a89b-03a4d8808616"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(576),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("c1c2988e-dcb2-49ef-91e5-95ad11aba665"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(577),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("bbbf3f03-1126-4a08-8b94-0de6f5e31477"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(578),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("56d0f274-31c3-4197-8693-7330d25da918"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(579),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("31ad369f-4dc3-4870-9785-282d1b5c3800"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(581),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("47ddf96d-0d29-492c-a033-19ccd96ee3b0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(582),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("17af91b0-7f28-4548-bb5f-b5547e147882"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(585),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("069bf935-f191-4f09-85da-a6623d2e1957"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(586),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("f67bfd4b-2813-4c90-b828-809e6f7e13a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(587),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("f8b627eb-6f86-440f-a4e9-a1bb27873fbe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(588),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("466e453d-0548-48a1-8a19-7ba64ddf69ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(589),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("c701a1ee-7b5e-426e-a080-b5c1533a7830"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(590),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("c269de43-d0c4-47b8-820d-5db2fa3bbb22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(592),
                            IsDeleted = false,
                            Name = "Trust Client Acquisition",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("1ebbee61-e631-4d9e-ba8b-c08a7de7d1f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(593),
                            IsDeleted = false,
                            Name = "Client Request Processing ",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("fa12bc9c-0a8e-47b3-bb96-db766e7150df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(595),
                            IsDeleted = false,
                            Name = "Client Investment Monitoring",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("fa6308bb-8021-4638-b0a6-e8a7a00c2da1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(597),
                            IsDeleted = false,
                            Name = "Real estate asset management",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("0f2f373d-0d7f-4923-9a26-715233abed7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(598),
                            IsDeleted = false,
                            Name = "Business Development",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("0d4eacb9-367f-46ba-9c0a-1e6893651339"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(600),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("044d3b46-dcd2-482f-b810-94218d10cb31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(601),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("f6c7b5b1-3a8a-498a-8462-995b6cb9fc83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(602),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("d891069e-2270-4b5a-95bf-4f7ca8c32fb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(608),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("811f8df3-da0e-4745-9043-0e819f234833"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(609),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("a3d48efe-9b44-4d88-9c3b-f45e1f5766eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(612),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("19dd1146-5912-4633-a899-04bd7d357a86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(613),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("4a1b4a56-f59e-4b02-a5e4-fb854281e364"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(614),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("7bf9500c-0324-4c04-b924-36d733f5aede"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(616),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("17a6772d-28e4-4ce3-86c0-b334184bc4b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(617),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("7e01b2b4-0726-47f3-b840-e1c1ae123d1b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(618),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("ec110409-b4c5-41f5-8d4e-575fc12954d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(619),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("68f0b521-267c-488a-a0a6-edccb95c8459"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(620),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("29e3b0d8-d156-4fb1-8099-c2f0039343ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(623),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("136c3dde-1c51-4cde-83fc-fc046c00836f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(624),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("bff9a7c9-50bd-48b2-9e07-1246d2565c59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(626),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("9363c91a-e80d-4a35-99fb-6024f190edc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(627),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("4a85a077-a8c6-4b0b-b597-4cbf6c008760"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(628),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("f3b3b356-db51-485e-881f-e7ca5eeda827"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(629),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("3925c809-357c-458f-b821-87a8f96a3247"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(630),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("24e2abb7-8476-4db6-b64f-6d882160a5b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(632),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("ac56e2ac-b9bb-4e6a-b108-7955a5c35bcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(634),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("51d43967-1187-4c48-9ffc-436b242f6db8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(635),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("99885a57-4b98-4407-befb-72f16175cf16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(636),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("7ed970ef-4ee2-4554-8629-c092c242c969"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(637),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("31cf6b40-1cb2-41de-9950-a4ba4df8203f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(639),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("a21a7f2e-b071-4b9c-abd0-7828c147350e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(640),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("6d8a1491-6b23-4cb2-b2ac-5a791c777181"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(641),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("f53907cb-0f52-4cb1-804d-1f341a6de10c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(642),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("9d079c68-d039-496b-903b-d46f86f79fca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(645),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("89495bc9-e093-4842-9ec6-6b97e6832d86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(646),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("747623ae-ecf9-4ae7-a3cf-7182d151b81e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(647),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("d98d6f86-fb5a-477b-b03e-2e739b2725c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(648),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("8b73e4f1-ba3c-4113-93b9-5fb191130c99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(649),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("8011b001-8ebb-4403-9263-b1e543066aae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(651),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("43b1b2a0-b2d6-4568-8b8d-9182d338b597"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(652),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("e8e90834-e7a2-4d9e-aa59-9468d5a0b3c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(653),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("9f74a373-1277-4814-9604-2ffc204d70b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(655),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("296e1d4b-ece0-499e-9046-14d1a2558d42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(657),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("e9371d7e-b7f0-40d0-945c-a907c291f997"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(658),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("de835d05-b472-4a55-b9d6-97e7695179c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(659),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("26a11bb3-4683-4521-a99c-623d8f3ef487"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(660),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("c30be585-5d8b-43e8-84f5-6a57bc8cd2bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(661),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("d2f8e621-bd7e-4e4a-9273-838800d1c3be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(663),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("083dcb54-eb49-4875-89f4-442ef3dc107c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(664),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("e6fd96c0-56a1-4f83-99cf-489f738b16dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(666),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("e96d4516-ccf5-496b-81b6-0250a3f87481"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(668),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("720b59c3-7fb7-4783-a35e-a59532495526"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(669),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("51efe101-0378-4737-b738-6154ee4956b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(670),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("83d78ebf-ab8e-42c0-9ce9-0bec1e201dc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(671),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("27c2eeeb-fffb-445c-928e-f2f0c6a7c45f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(672),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("1ccdb318-5b56-40d3-a069-9b0bfdc2bd82"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(674),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("9e3b1503-99b8-4758-bc49-7db279c96869"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(675),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("ab35319d-6b39-4fc0-b374-e735d378c9d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(677),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("8c9e4a36-98d6-470c-9791-4d7c9f4557de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(678),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("02f78a95-694f-482f-bc32-f1c66ee3f252"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(680),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("164bb657-cf75-45ba-ae6c-94d0ceb434aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(686),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("6b1d338b-0bae-4de8-a657-660c8bdc5887"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(687),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("2c3f2184-b899-4cbe-9835-772e6b3115f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(688),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("8364304f-c22e-475e-9cdd-0427e4a77cea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(689),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("adfc4321-0f4e-40aa-8a7f-02319f755319"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(690),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("041b3c0f-f16c-48c2-bbad-7316ccb2f604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(693),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("864d1268-ce09-4071-af83-aa8823b0e911"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(694),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("108e2d7b-4819-4534-af2f-52cfd4206fdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(695),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("bc4087c6-75f3-4c4a-8d9d-ad9b65f9010c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(696),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("85ccce59-d5b7-4565-af4d-c2c191bd7653"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(698),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("e7a1ce99-8c8c-4dcd-a711-6420ca48f5bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(699),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("5b66af65-63e6-4570-9125-780001a6b740"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(700),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("c31d34bd-4652-4fc5-b2a2-ecda02ba5086"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(701),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("ff0a928d-eaf7-44b0-94bf-c969cae095aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(704),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("88a00dfa-9c6e-483d-b0a2-33c0fdda433d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(705),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("4f9d695c-d034-4255-b975-1cc66919b005"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(706),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("ccadb3a6-ebb4-4178-b894-c5bf46917912"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(707),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("1e585cf0-a85a-49ac-ba0d-2ccd3257ca65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(708),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("6f71e29e-5ba4-4e72-a596-01d8deaf4051"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(710),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("275d0011-65e7-485c-b317-08985886943c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(711),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("adde4dcb-3114-48d9-a4fa-707eb9792601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(712),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("9dd3d985-dc62-445d-b36d-bcc05bd4d5fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(715),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("6f7631c2-bc46-48a9-8d62-27714908cb49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(716),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("89e240f8-ea54-464d-ae75-f75a907ea488"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(717),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("677aa834-d6ca-44d5-8cd9-2bda9fbcb4dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(718),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("837ef1aa-3de6-4689-8c9b-4dbf7f10057d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(719),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("2bd628cf-dbc5-41f3-b033-4364c174b0dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(720),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("6133f5e8-0a1f-4f0a-b7b3-1f7f436600e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(722),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("535c7aa4-eba1-48fb-9f04-0c55b0a4411d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(723),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("653aecf8-cbdb-4402-be27-d173aefc5eee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(725),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("45aac2e3-67c8-43e1-ba14-4563fe290fe8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(726),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("48df6524-a62c-4234-883c-5d1ad7b735a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(727),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("1cd69fdd-1496-46ca-923c-3fd999004777"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(732),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("a94b0a2d-70a4-4a5a-b55c-ae2bbd603613"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(733),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("0aa39bc1-33c2-4526-883d-427a3d6e70e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(734),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("aa84078c-e686-4b38-8b0b-10e0d21e1f49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(735),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("eabc9d4c-af4d-4453-8728-44a09b1ba652"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(736),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("21ac4614-7235-434c-91f7-1345f620ce5e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(739),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("d1618912-ce13-4b68-a86f-b793caeb5fe4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(740),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("e43cf29d-6f90-4050-b680-d38a5621722b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(741),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("b587ab6b-487c-45cd-b841-310afaac7567"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(742),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("d6351f52-51ee-44fc-88f5-d300ec94a808"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(744),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("064f6f16-940c-400b-a956-5b2b579efa31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(745),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("35a18d27-b70a-4827-9b3f-5aee6a47e46d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(746),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("1196ade1-908d-4587-8787-2b514f23ce21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(747),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("bdc7bd40-01f9-452b-9b95-71dd47a16dbb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(750),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("f32be9c2-5e53-46cd-8694-b5f2e55e24a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(751),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("da6c15fa-47b1-44f0-839a-0957d570770f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(752),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("1c13821b-659a-4243-b551-230002f35bc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(753),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("8dab5e0a-5776-419f-97c7-65e0605c8290"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(755),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("a643a50d-4aec-48bf-b67d-e267b1556012"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(756),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("895949f2-edbd-4670-8da0-d1b4f4cdf030"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(757),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("d2c3b1b8-c5b6-4cca-8a2e-607ac8256e32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(758),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("17471888-47a7-47ef-9318-72762aff1aa7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(761),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("63d08ce1-907b-4b3d-972b-3fbf33fbb80e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(767),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("5ed1085b-b4e1-4fef-9ea6-d6043eab31f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(768),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("5242701f-efef-4b69-867c-447c2484bde0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(770),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("26bfb708-2583-4d07-80c7-e785aaa57875"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(771),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("3da66328-6635-47dc-8399-2d060fb863b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(772),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("fff44958-b5d0-46f3-8a8b-d1eae3a7b030"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(773),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("e9a75e37-0281-4a3b-8892-cdd20f1cbbdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(774),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("c9e56115-b06e-4b34-8d51-6d55172d4808"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(777),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("2167bfcc-6e93-42c0-9e79-defb58d8a090"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(778),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("cad541fc-c33e-4def-ada7-120ac4e88e8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(779),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("14a5db2c-4ef6-4c93-af1c-dff8f36954c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(781),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("1f8965d2-d98d-44f0-a18a-6a51f446276f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(782),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("7dff9177-1ada-422e-9378-9699b2c565c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(783),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("c72dbb14-f688-4e73-adea-555483f31a31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(784),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("3f5fd23c-e794-4d58-9d50-7eef4a307172"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(785),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("9b65d5b2-eba3-4d74-9fa8-c72c58cf059a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(788),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("99d01bba-4931-4912-95ff-2a52121a98c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(789),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("917aeff4-9484-4431-969a-4d0d32551b67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(790),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("1f1c2e56-0f9d-4d8e-973e-7a81deb0058c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(791),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("eacce52a-9f9e-4e1d-a52a-85160cb72da0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(793),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("e58fda30-012a-41c0-9fca-3c276d8a0f0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(794),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("1e741269-72ec-4d28-a284-8cb87a36a08b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(795),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("a3374bba-e806-4daa-ac4c-79e363de9601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(796),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("ee815e1b-9f05-4b48-9908-f7f323f078ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(799),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("6a5794e8-9749-4763-8493-4f27b4d030ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(800),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("8cb9a805-0943-40f0-9731-d34e2ffc4cbc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(801),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("a40bccb0-2106-458e-93f1-15c6e08596b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(802),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("4468c750-df8c-43a7-86f8-ffbc0da4b430"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(804),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("562caebb-c135-46f2-92ae-ce855f63cc94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(805),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("f6661cc9-a2cc-4784-a5ff-36b31f64545c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(806),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("1422ef71-9727-45e1-94d9-e5cd75db0c5d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(807),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("aa24f67e-c1fc-4cc6-b6c8-83a863ac9172"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(810),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("6d39fcf9-5861-40f0-a41c-3fafe2428589"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(811),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("f98a30e1-3b5c-4488-a758-aeca0e38d8c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(812),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("41f3c920-5c9c-4b7b-a0ed-297bd1d96d18"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(813),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("80a5fc7d-ec07-4248-bd0d-3003db0da14d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(814),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("42f979e9-f1ba-4cac-a8c0-348de9faf44d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(816),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("b7e21089-fe36-41b1-ae67-014f7349d4ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(817),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("1769c8dd-c56f-434d-950e-50b5999aafb3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(818),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("43d7c147-afee-42d6-aa59-0f8382afa4b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(820),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("2da6b314-5cae-43cc-a85f-1023d29b5ce4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(822),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("19fe2497-a70f-4e72-ab48-f7e29eb919f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(823),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("2af92eb2-8a1f-4ef4-8207-bed03caabf7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(824),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("5e26cfda-1518-4582-b2c5-910d5df9b9c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(825),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("c707cb98-5d97-4ba0-b151-6fb83817eaa2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(826),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("10d0bca5-e1ee-4768-9827-9fec17f0527b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(828),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("79ea23e9-1285-4443-a4ce-5eaa151ba463"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(829),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("2806bd1a-93d8-404e-9759-a766511ab473"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(831),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("306508df-6770-4ca9-bbd3-d158a2875763"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(832),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("c12b40b2-a379-4a06-9a94-7a42a3f97993"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(834),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("7a925344-3a83-4b40-81a4-b75002fc071c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(835),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("6401929d-3b4a-4405-89ed-56bc19f873f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(836),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("9a2e7538-f296-411e-ad3e-94a2c4df5858"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(837),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("b1b9eaf0-9230-441a-922e-f79e99761db7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(838),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("97291dc0-cb94-403c-a2a1-545c5f18564d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(844),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("99fa93f6-8c70-4830-a1d5-c5ed8fbb37fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(847),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("274afc04-53c6-4fcc-ad9f-ebebc9fc747f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(848),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("d9123634-ab7c-4763-bb87-928f60e937ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(849),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("e6c7fbc3-45d4-41cc-8ca5-636284d77e05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(850),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("fe80441c-5718-49ea-92ea-539ebf6803f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(852),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("664647bf-8bf6-4e94-ac92-3baca2b2d636"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(853),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("d8b08416-f4cc-4f4e-b301-9317367f8ab0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(854),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("ad678df0-1e1f-4f1f-ab2b-f0b749e46b81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(855),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("b1b0b733-a535-45f3-9694-544057f4ec2b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(858),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("07914ee9-ef7c-471d-ad40-753038ffd5a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(859),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("4854d27c-0f9f-4031-87cb-fb5ee56f7e9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(860),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("3c20e271-84d0-4e35-b1d9-ed098d9c0960"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(861),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("f1d8ae5b-2cd6-4307-a02b-69cbcad560bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(863),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("062d7418-1779-4109-83c4-82b3cd50c3aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(864),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("68330f44-b875-4b06-8bff-163351249e8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(865),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("607177a9-0688-4155-b142-bf12be357566"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(866),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("df08833f-8b46-4794-a948-7459cf2b05d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(869),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("115d0b0f-1eeb-4031-a41f-cfe244290a25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(870),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("1976be84-56cc-46a7-9653-9ebfa710721a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(871),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("e03754dd-c596-4da2-8bc3-75710c4d5bce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(872),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("9ddef481-12eb-4081-a9e7-7851baae2a7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(873),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("27de92f1-d704-45bb-a29c-027e804817bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(875),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("79684434-cdb4-44c3-8f00-c22b41aad925"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(876),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("4c1eef4d-2276-458e-a6af-0785dd3aa2f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(877),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("f18b08f9-d0db-4625-afa8-f67da36273da"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(880),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("17ece2a0-d73f-4edd-8edd-a210d1d27d42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(881),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("7b19a915-e8e3-4046-be7c-a4872c829634"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(882),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("2ff16085-b907-4470-b310-9ed053a23d1d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(883),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("2523900e-760a-4759-9fb1-b951f9420bf9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(884),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("d396c75f-15be-4456-8289-c84862cd37ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(886),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("3c37828f-607e-490d-918a-f12f76c1100f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(887),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("3b7e7f72-44d4-40f5-bb16-82074a101ffe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(888),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("04858284-9729-402f-961b-0dcd5c382890"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(891),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("9987d2b9-75fb-468f-8d09-47d95fa79c15"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(892),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("3dc96b5c-1375-4236-84b2-d7ed478cd1ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(893),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("4277e52a-2c31-42d1-b5ac-d036ec71b647"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(894),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("0a2e3418-01d9-476c-bcab-2fef97f56c56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(896),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("6c5e932b-bf0f-4a94-918d-97c205eec240"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(897),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("7c693616-ec04-46b8-a21e-76bf18bf673e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(898),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("4b5f8730-ecd8-4b9d-b27d-e1f4c8ea6b55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(899),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("b4c0692f-91f8-4606-abe1-2981d680017a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(902),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("01916bc3-abf3-49eb-95a8-ea0dd28b86da"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(903),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("ca9ebed4-2e1a-4603-9217-43fb72505a08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(904),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("26d1cf17-b7b4-4920-a8e3-4d030ebf9bda"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(905),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("4404cd1e-64d8-41f6-b39b-34ac717d595d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(907),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("426fc5a9-f9b4-4d14-8db2-145ce59168b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(908),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("1f3a2bdd-30ab-49c2-9d1e-f28b1e3c6bfc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(909),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("ba75e606-badd-4435-8e36-f689e0e8918a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(910),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("917c47be-4b22-4558-be10-def4809d9c75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(913),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("6b541a35-b9f7-430f-9601-0ac09a1d11f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(914),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("352bc0a5-9d9c-4c9e-98ff-0f843d249ebc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(915),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("a163ace9-6068-492f-845d-f89018e9b47e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(916),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("cd1d3ed3-9e96-4fed-bc6d-8c003b879e44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(917),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("232b7107-d1e5-4123-b6b4-4a227f0efecf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(923),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("29ead758-0a22-4e0f-af2f-d268bcfc1c68"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(925),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("72a32e62-392a-437e-bc18-8f4b3a7ab118"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(926),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("d8aa1500-432f-450d-853e-61658ef04ca7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(928),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("1d3631aa-14f0-4335-9c28-648fc40b3ac0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(929),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("b156807b-c85a-4225-aa5a-fb519c038b9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(931),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("d72004e7-be7f-4ed5-8deb-bc737f459e7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(932),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("c82b8671-8d9e-4d63-9e8e-6b49051fa3fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(933),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("24212be7-f643-454a-894e-331c51de0c0f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(934),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("5dee708f-5472-4393-8cb2-10b93e58618b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(935),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("8a9bcb7b-c837-497f-8265-d0d1de94b8f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(937),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("ec873919-3f31-4b42-b533-d95e77d3012c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(939),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("30eec44c-4c34-406d-9d9b-84151b2d0c68"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(940),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("ebb41f10-afce-45cd-b493-733430a2a0d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(941),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("e1e4238c-02e7-4b94-bc34-d77c8b3be3fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(942),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("4b4c5364-3579-492a-870e-78918f0f8c7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(944),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("c1fe9f3e-852e-47f1-b5bf-55e7ba671994"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(945),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("f6ba3a19-184a-442a-9805-c5561ffb5fd7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(946),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("25f45fe8-239e-478c-83f8-5e85ecf3cafa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(947),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("03d74774-1310-4828-84a3-ab8b9900bb25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(949),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("413455f8-292a-4cb0-87fa-7239b9cf894b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(951),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("a23caa64-f22f-4999-949a-b691ec306c79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(952),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("3d48f9e1-d24a-40b5-b260-a8fd83e5cfc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(953),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("a7ec8405-3c2d-40c8-b42e-6e0b0de7f006"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(954),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("132d0d18-ad21-44c6-992f-794444c8e74f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(955),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("b986ea5e-97af-47e0-836c-dd1f21df5559"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(956),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("6e33ff30-501f-4cf0-9fb6-14680ea6179a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(958),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("78cc2fb4-039e-4dbf-999a-cb93be99660a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(960),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("9a275cd1-2ff6-4de7-838b-03153f2fee09"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(961),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("b613eb27-8cb7-4fea-9678-e2db1d16b3a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(963),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("1475cff5-31c7-4cf8-91be-3370fd7f9de3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(964),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("b72512dc-63a1-4bd4-a9a1-4ad892a47e02"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(965),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("1df0a6d8-9155-47a5-a69d-a54dbd327203"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(966),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("19fb169c-7263-4386-8dbf-690b91fa2008"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(967),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("91414b71-0138-4efe-b9b1-3a04363261ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(968),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("71caf82c-e232-4a01-93cc-4b371ac18c9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(971),
                            IsDeleted = false,
                            Name = "Develop Marketing and Corporate Communication (external and internal)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("b572f721-6934-4d90-be81-08314592ee2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(972),
                            IsDeleted = false,
                            Name = "Production of Branded Materials",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("8047f0da-9d7d-4cd7-b5d0-7b0a66da1aea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(973),
                            IsDeleted = false,
                            Name = "Web Development /Update (this is the process of developing or updating web pages)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("a03d88f0-12b3-4b3d-8dae-0f1f2e9937f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(974),
                            IsDeleted = false,
                            Name = "CSR Evaluation & Sponsorshp Selection Process",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("6233e9c8-260c-435c-a424-ba614d8add48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(976),
                            IsDeleted = false,
                            Name = "Budget and Planning",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("57031c48-b65f-43ff-ba18-7a7fbadaaaaa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(977),
                            IsDeleted = false,
                            Name = "Bank Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("e8487164-0cf3-487a-8946-6702d7647e56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(978),
                            IsDeleted = false,
                            Name = "Create Asset Master Data",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("4d9c4d17-2ed0-440e-9ccc-c3cb2f73ebb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(979),
                            IsDeleted = false,
                            Name = "Asset Disposal",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("e69ef054-5347-453d-916a-278b8ffe2b39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(982),
                            IsDeleted = false,
                            Name = "Invoicing",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("1a26e27d-abb2-4674-8988-564a27081938"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(983),
                            IsDeleted = false,
                            Name = "Process Payments",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("de7491f3-12f1-4513-b563-189631e4c00c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(984),
                            IsDeleted = false,
                            Name = "Cash Advance and Cash Advance Retirement",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("a9d7600a-705f-41be-95cb-d2d945f70350"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(985),
                            IsDeleted = false,
                            Name = "Reimbursements",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("8a07b7ab-ce94-4291-886a-076aef15b100"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(986),
                            IsDeleted = false,
                            Name = "Investor Notes Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("d5df90aa-a927-47e4-92cd-f3b29d9aee7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(988),
                            IsDeleted = false,
                            Name = "STAFF DISCIPLINARY ISSUES",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("38a52b85-3104-42bc-b87b-2ead579bc1e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(989),
                            IsDeleted = false,
                            Name = "TOTAL REWARDS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("ad50608f-b4b6-4625-a694-8a71216bf983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(990),
                            IsDeleted = false,
                            Name = "STAFF FILE",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("76cd1c57-e4ae-45c9-9c69-4540af1acff4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(992),
                            IsDeleted = false,
                            Name = "PERFORMANCE APPRAISAL",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("dec3bcd9-d866-423c-b63f-10485169f020"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(994),
                            IsDeleted = false,
                            Name = "HMO MANAGEMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("62695e71-e631-42a4-b16b-43e37333ad2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1000),
                            IsDeleted = false,
                            Name = "TALENT ACQUISITION AND ORGANIZATIONAL DEVELOPMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("e754aa94-71e7-4648-ac93-e804a36c8646"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1002),
                            IsDeleted = false,
                            Name = "STATUTORY DEDUCTIONS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("71a2faa4-0e2c-40d3-b48b-355d6e2c86f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1003),
                            IsDeleted = false,
                            Name = "Staff and Visitors Identification",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("225fbdb6-76e6-4432-9882-ee141b5f4a1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1005),
                            IsDeleted = false,
                            Name = "Staff Sign-in/attendance management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("aeac6469-45e9-487f-8551-e8a18585fbc8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1006),
                            IsDeleted = false,
                            Name = "Keys Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("5d0890f8-f552-44e0-b33a-58b2562e96d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1007),
                            IsDeleted = false,
                            Name = "Scrutiny of all entrants",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("1038b9bc-6113-4dbe-a606-50f19211352d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1010),
                            IsDeleted = false,
                            Name = "Cold Room Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("42a306f8-4d9a-4b87-bb51-02944364a395"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1011),
                            IsDeleted = false,
                            Name = "Dispensed goods Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("a181f618-75f7-4aa3-98b3-63bef82be0a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1012),
                            IsDeleted = false,
                            Name = "Goods received register",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("17d6ae1f-1c1f-4776-8127-75bf15596106"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1013),
                            IsDeleted = false,
                            Name = "Community Relationships and Development",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("e8411080-3194-490e-97d5-06fa26c07f51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1015),
                            IsDeleted = false,
                            Name = "Procurement of Supplies and Inventory Update",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("761506d9-9be1-42e2-8f55-b4a5cba061b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1016),
                            IsDeleted = false,
                            Name = "Store inventory management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("36396cdc-05bd-4da5-825a-496aea6f9a18"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1017),
                            IsDeleted = false,
                            Name = "Requisition Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("7e6b6f61-f5fb-46a6-9337-4b885ec869e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1018),
                            IsDeleted = false,
                            Name = "Store key management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("23749953-4a62-46b7-b964-e2f50dc5c5a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1021),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("94727655-c406-479e-869e-e5d8f308b37d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1023),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("df19dd08-0e33-4a0e-93ce-40560fd10773"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1024),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("a969e633-f043-4d6c-a7ba-e135b935da9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1025),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("96cdfa8e-69d0-41bb-9cdf-b6ed0d12a5c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1026),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("14a6533a-4671-415a-833c-7097880717db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1027),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("593dbdde-4db7-49e7-b575-325b46270024"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1028),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("a96e1190-0769-4a8e-bf0d-a8964ade9a7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1030),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("b51c804c-0942-4c4f-aba2-95e3fd5bb3ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1032),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("fe5a6067-ab60-47f6-b887-5597cbf24e9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1033),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("39e340a5-0989-4c32-b9ed-6eb73c646b33"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1034),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("61bd7de5-fd0f-4948-a555-2443bea328d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1036),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("6df6f19e-a0c0-4fe6-b5b9-8b3285403ebb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1037),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("16f4c5f2-ba9c-41fa-b179-b71fc71f6e5f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1038),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("fa79711c-62e2-456d-bbc9-1f7cbea00c67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1039),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("16cd638b-91a1-43c1-88fa-f129513e8626"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1040),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("7a93ef5d-3b0a-4332-bafe-d547f3ae2be3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1043),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("d90b8034-7c9d-4204-960f-bbef04f0d5b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1044),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("74eb8c61-e577-45fc-a6cc-6641716e6b7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1045),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("53fc4b2e-fa0b-44ab-a9ff-e51aac332b5f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1047),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("3d53a0e3-fb76-43c3-bed6-fa168edfe690"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1048),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("fbe9570f-bba8-4afb-8b9b-8c4f29fa5f65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1049),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("9ae54c62-675a-49fa-b17e-896ff187d257"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1050),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("0c491360-1a45-43dd-bca5-0b9fb0e5c8ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1051),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("61428c1f-5ee5-4628-bd94-427084b9346f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1054),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("353507f0-6391-4f8a-98a9-57d9ee9f981a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1055),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("e3fafba0-9378-4074-9f04-f5a32d9c9142"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1056),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("668586af-674b-4363-9351-9323338b0d32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1057),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("f47415c4-6ec8-4336-9827-f80f13bb7725"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1059),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("a6ae17b4-a311-493d-be41-6ac6e350e78f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1060),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("3a7c2619-820f-49ab-b3e8-089e33b2246e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1061),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("139c61f9-2f66-40d2-81f4-3daa46c7c03c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1062),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("369c300a-f2c6-4e51-97f5-09701f8191dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1065),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("ffdd92a4-daff-442e-969f-a9dc20f850d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1066),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("f2d33a04-e11e-44b9-8f4d-c176df8b9557"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1067),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("ae847a49-3c3d-4115-8650-b0c529b4776c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1069),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("7b84c81e-43a1-4e70-b3a7-a58da1387429"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1070),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("c4f2aa6b-9713-491c-9c44-4f26874800c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1071),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("b96d48db-2f9b-4aa1-961e-13105dbaa266"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1072),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("28f16bbd-2606-4ab6-a791-4b401e891d41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1073),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("5f6bf1b3-8957-4d02-b43c-f436f633f957"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1081),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("34d891d7-3881-490c-a9d4-88b88c21170f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1082),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("cc98e489-679c-4846-b8aa-7bc4ccc439fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1083),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("fcc0dd62-55bd-4a8f-b5c2-04cd48ed5382"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1084),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("590d2474-538a-4067-aaa6-1ed5b9d1075f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1086),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("0bdefe34-bb6d-48cd-9a05-969ed20e3959"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1087),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("a815dc8e-ed80-41a8-a1aa-20751dbe3a62"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1088),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("7bcc25f0-559e-4d7f-b2e0-2cbc9fe5f936"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1089),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("943b5924-cf34-43e7-aae4-970cd518e0e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1092),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("7313850a-28f3-4d78-9fc4-7b40f0847481"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1093),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("c89aeda9-9da7-4900-a4de-f390036a5cc3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1094),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("2d26aa53-6ee2-4c4a-a8ac-0cd8509a7349"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1096),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("7f38aad2-74e6-47a4-9282-4d02a33d39ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1097),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("9810dc7d-82a3-409e-a4a3-1a42d60a6a34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1098),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("671f405e-9872-4d97-b44c-eb8c6e4d11fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1099),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("abaa35e6-de8c-4ebf-9914-974b0588dcb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1100),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("2c15751b-5104-4d8f-b948-c2fb88720917"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1103),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("14d1ac94-9d3c-4d7b-8e0d-d9ca7fb2d673"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1104),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("0ff3c17c-fb6f-401d-b1ff-4d4ed479dc9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1105),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("4d7d8927-af8c-4eb1-906c-9a5c3d69b1ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1107),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("a2aad4d6-d828-4715-8166-3cacafc1365f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1108),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("007a3a35-83ab-4f96-8a25-7d953aaf1ddc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1109),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("8ddb4a5a-8190-489a-986d-9dcc4479d14c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1110),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("084eceaa-9ec1-42d2-b9f9-5e2b42ae647f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1111),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("98e70fb4-79ae-4b94-b550-914b6c76acb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1114),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("13455a40-4c15-46c0-aa06-12d5b8d7a986"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1115),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("9ad54b2d-bfaf-415a-bec6-11f8655012d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1116),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("99b61ea3-fc8d-4b3d-b320-7ecf68abcc31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1118),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("6a16cc48-dd64-4e9a-a650-9f544f6251b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1119),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("52c5438c-cf6d-444a-9263-028daf760344"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1120),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("505ae3be-7884-4a13-8097-401900250f5d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1121),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("b96b82de-fe58-47a8-9cd3-a8942e7f89cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1122),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("9237e57d-f9cf-4d45-b2f5-990bffab25e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1125),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("0db1fb14-23b4-4007-a9dd-348285f7c6f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1126),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("2dbe7921-da0e-4f3a-acc8-1f068ba451ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1127),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("36b90f0a-6090-45d4-9b59-88fc3afe9777"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1128),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("285de071-21ed-4215-b4fc-0a0211290208"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1129),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("7f0dd29b-740d-4396-be86-995d4c619238"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1131),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("3dfa6d46-e8a2-490b-906c-fa0cee7f13ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1132),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("b6d89099-e2db-4405-b09a-58b88dbd3ce1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1133),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("2c8d3409-7665-4ca3-ac34-01fd1222e547"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1136),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("dc9c7b66-e52f-42fb-af32-6c9aec4c80c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1137),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("147823b0-8516-4fcc-8a3a-bb264d13d189"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1138),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("eff515b2-60c0-47f4-ac28-8433ab988826"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1139),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("b57c14ba-b03c-428a-b714-cb95b2854b50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1140),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("18c8f77f-19e3-4929-bb8e-089037be1ddd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1142),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("2550f622-eb4b-4789-8092-fc5b8b3888bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1143),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("1f712a76-5f9b-4bd6-8ea1-7e5012ce83e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1144),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("0de05654-93ff-4540-b482-b0f4d673ad7d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1147),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("81a28f2f-5b13-45b1-a30d-8142d098c709"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1148),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("04f8f348-df54-4554-88ba-a4472731869f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1149),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("de3f21c9-5364-49d7-8109-a88234e70246"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1150),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("9398a4e1-fa5b-499f-ae75-cc7fc6f898e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1151),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("bea31820-93aa-48df-98aa-da890a3befb0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1152),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("50479706-c88e-46b9-8a64-294e1f6ab1a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1159),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("0be3aa97-296e-4961-961a-738b97066404"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1160),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("984a656d-e7df-47bc-954a-38bd661b6879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1165),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("8dfed196-f9d5-4582-960c-f618abbf0366"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1166),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("90d17b08-1a9e-4be9-91dd-870a3d9b7c6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1167),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("e1775f2c-3b2c-4ffe-9d57-4796da1f298d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1168),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("1658e4b4-df7e-4860-9756-cb8332bdb681"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1169),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("1ffa7266-e6ac-4500-a1bc-144659142e80"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1170),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("7f522e00-090c-46ea-bd34-c7578e5629b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1172),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("330f9725-094c-40ff-9055-fcfd1dffd7bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1173),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("9347770e-338d-4cfd-9265-17b0210a9eaa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1175),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("80fc1976-8cfe-414b-93fa-99a0179ee9c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1177),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("52711d07-ea7b-49e6-8d37-003bb4648315"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1178),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("ffa7dabd-a9cc-49dc-9320-13cdd6a1b9c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1179),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("d934a0fd-49cf-4dfb-bb9b-c9e5637e098e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1180),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("8624099d-0273-4b43-bfff-0ab6bcc48432"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1181),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("b80f7860-f44b-4241-a676-a35518e13864"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1183),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("b6d22162-1389-4d04-85a4-cfc4db5f96f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1184),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("8ac88e85-54ef-48a3-9766-e7c3f0497e03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1186),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("a33cfe58-a631-4330-b00a-c3f325cd5d6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1188),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("80c3817b-033a-4207-9980-5d48fb9269fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1189),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("98bc0853-6467-445e-9fb1-6201c0e9a6e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1190),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("7ef2aa33-119c-4363-9cc8-1e18a0d3516d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1191),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("365fa74c-f4bd-40fc-9993-8a6c7be3c751"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1192),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("febeeea2-35b9-4293-bf81-9a96d0a274c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1193),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("8852e207-a577-42fe-b45b-df52abd792fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1195),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("93e502e3-69b2-4262-a143-354c536aba28"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1197),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("b8a1fb0d-2f9e-4545-ad69-15dcf648cf7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1198),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("1ded6d4e-0408-4b4f-945d-196d7f6a8ca6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1199),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("4d982e94-dc12-4a61-b270-663145194a24"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1201),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("6fba9d98-f380-4443-bb3d-2c51aeac58f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1202),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("19e56dd6-44ae-400b-9d96-f662009fb75d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1204),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("1aa03ec3-f5ce-4150-95ba-44ee249561e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1205),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("d4275788-a64a-4fd4-8881-728564af0d6a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1206),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("9f58791a-b4df-42df-b6ad-09be98b86071"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1209),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("9e39a7f2-8b24-4682-ad20-0c5e3a693572"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1210),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("474b1418-7648-4f73-b208-294d67334635"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1211),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("fe571d64-9ea9-4516-b21e-d25955bea4eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1212),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("12d34805-21a1-4073-8cea-1586a914f19c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1213),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("5ea67636-e7d0-4b81-af3c-f57bc2d6e11c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1215),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("5e83772e-b260-4729-9684-ba0abaaa7542"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1216),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("98a010e4-e2fc-4143-bc9a-7ccd211118bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1217),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("aa602652-6fef-4656-bf28-d16bf4e3dfcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1219),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("d2bf776b-70dd-4124-974a-e5771910fad6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1220),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("55b47aba-bb2c-4273-8f94-d491b666a2dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1222),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("65a2f45e-c1f6-4ba8-83cc-870bd1cfe72d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1223),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("1a002ae4-3334-4ea6-983d-eb4e8871a3c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1224),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("d4265bbc-d8d5-4392-b1e5-cd30cd1787ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1225),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("e0e5878e-ead1-4b81-a5a4-837e6b9a7137"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1226),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("4f6d3308-cb42-4228-bed2-c9509672d21b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1227),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("54490b98-dd1b-4471-b656-c985a27f8c64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1230),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("631ab1c3-9054-4744-9b77-804f99bd99bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1231),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("a42a9584-c85f-4c50-8700-a422e493e994"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1232),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("df568727-6021-4b11-b5a7-f8f9f4476a50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1233),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("e5442c84-9b23-4bd9-90a5-2524e5c45596"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1240),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("c22622b0-bdc3-404c-bd78-0aff23d28728"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1241),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("d79dd68a-0f0c-46f2-8e9f-6035bfe8a3b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1242),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("60c2d914-24f8-4bcd-b6d6-d9f18e4f28c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1243),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("b866eb1a-d36c-456f-8fd8-5f91468b3f35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1246),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("73eea2ee-cd18-4562-bbb0-c420fadd392b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1247),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("dd445b70-e67d-4cf2-9a00-92d63585027c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1248),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("01ca53a1-af3e-4e48-8a5b-f2d4048cb307"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1249),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("f9cceb82-bf60-4a4d-8f62-b6c6fd62e578"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1250),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("69c004d4-2ea8-4be5-a8a0-a9c69a761950"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1252),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("a98b4097-22c3-4066-9e16-8a7dc7293150"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1253),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("b565d737-6bde-4f4b-92c9-4bc0f0b08792"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1254),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("cbb8459d-451b-47f2-890c-138b3b0f66e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1257),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("b7cbd97a-edf8-45bf-a07b-0b37f62dc76c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1258),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("00c01285-4340-4533-9460-35e479786c84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1259),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("ad27577f-5956-4bce-a8d2-7658a19c2969"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1260),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("5aec8878-6d16-42f1-8a5a-95fe307a4e97"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1261),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("7c5a6800-ef70-4d2a-b948-42ee33912977"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1263),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("052e051b-e971-4b7b-92f9-31598ede965f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1264),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("5d6b35fa-37c5-49ab-9065-1a7ef9d6a8c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1265),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("8a948df4-f08b-4fee-85b4-4a5f0c76039b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1267),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("81387e7f-a240-4486-8d95-b552c2155064"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1269),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("2a19d8e0-e2b4-4503-a0ec-cf68abad25e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1270),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("6b5139a5-20ff-4c4c-9596-f59629a4caae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1271),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("e139c624-7a76-4de2-8c75-1d40890037fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1272),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("542ab193-b7fb-4949-951d-38d1e8cea744"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1273),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("06931a3d-f4e5-4c50-a3d0-d88451a58220"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1275),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("a0a33cb1-9e4b-41c8-a901-5df5830da5da"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1276),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("259ef333-8b7f-4d03-b333-f3a1b5c7102b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1278),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("a1056f8e-e311-4682-9656-f36ea642a0cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1279),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("3ceb25ba-d59c-436c-a24f-5bd06ac44f51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1281),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("e4f5b557-4097-4a84-8905-41c70c3c276e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1282),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("7a759ccc-6b05-47c9-9ceb-043d259c0148"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1283),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("1083f513-e710-46e2-b30b-b220febb2a6a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1284),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("7ade3fd5-9ef2-4ff2-82c3-8575defc0a48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1285),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("05667c83-d7e1-4376-b980-c3cb08aebd9c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1286),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("d52f1a20-267e-41f6-8522-e8354703a98a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1289),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("1e54ccac-8a29-4a9f-9c31-4ad59061d784"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1290),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("ed9e9a30-dccd-47d4-b5e1-44eb084d8b4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1291),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("1549b1c6-c4d5-400b-9e81-ea455e987751"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1292),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("47782cee-cfaf-438f-85b8-b8240ae970bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1294),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("9ab18709-2d3f-4972-b08a-eeefa0deb02a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1295),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("67eb4656-b356-41f9-83a6-863abed0a0a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1296),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("cc748907-86e0-45dc-ad12-66fef78405d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1297),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("009e75ee-4691-4696-80b0-1e1355f645b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1300),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("642a398c-3f67-4d55-8b3f-b44be186b143"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1301),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("f0f7ed16-fd31-4cf7-b646-230a8606d732"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1302),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("99d803d7-ee18-40ee-87a1-17c1fa456a9f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1303),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("996289de-ec00-47dd-bacb-f420f947d740"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1305),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("6b1324eb-02cc-41e1-9580-fb30d83a73fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1306),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("6c79ce7e-61d3-445e-a15f-c72e5e5b8f5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1307),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("4215af50-fc1c-4723-8f0a-72829745473c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1308),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("dbd92482-af9b-4196-8667-69f27fc95e5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1310),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("f1beac4e-f011-42b7-a44f-43ea461066f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1317),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("a660a35f-1891-4448-a819-1e382d5da593"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1318),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("7d8d9dde-d52a-46f0-b379-4fbafd72059f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1319),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("f29fa9ce-d076-4cbd-a70f-242473d03077"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1320),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("9c642995-36f5-4c6b-be2a-ac911ecf89da"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1322),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("8759e2d9-0997-4592-a71d-077e52a98d55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1323),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("f6d8b776-acd0-43b5-a532-981990e9e82f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1324),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("6e68a1ff-059f-4573-b8ac-02db056c6be6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1326),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("e13a8552-e3dc-45ad-87dd-7dfc51c43d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1327),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("a68afc9b-7147-4db0-b6cd-a5153ea55a75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1329),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("49875823-5d69-46cf-a116-9bd7b4d91126"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1330),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("101a1355-b596-4bc4-99c1-7f45c7e3905a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1331),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("14ed09cd-dbb6-489f-b048-0e2bfbeca82a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1332),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("a8b400cb-69a5-4591-8ac6-007af5b4a1e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1333),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("9af3e723-9b56-49fb-9c05-2637a5a3c533"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1334),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("6092b91e-7fa6-4659-8faf-b8c4c4663c29"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1337),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("cd4496f2-fd10-43b7-b485-a8a6b88a6b5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1338),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("c4064ed1-4136-4999-80c7-7026976d33a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1339),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("6de84626-327e-4deb-a6b1-582c44bf2066"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1340),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("24271f1c-fa90-470f-b04d-bea2d17da7a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1342),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("536a193b-d4a8-4fce-94f6-a62a0ce8fbe1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1343),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("7cb9ef74-63ce-4917-845e-be68620f01ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1344),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("a4a73795-8f96-495a-a53f-0d28b50ca590"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1345),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("09063cd1-bf09-4169-bb8d-286c5b40f68b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1348),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("853594e4-8e88-4a13-b50f-b1044d2bf291"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1349),
                            IsDeleted = false,
                            Name = "Agile Delivery Process",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("bbd57d66-5a92-4370-b099-4ffebdc5e80d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1350),
                            IsDeleted = false,
                            Name = "DEVOPs Operations (Deployment to Production)",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("a38080e4-1742-46e9-ae28-4db767227394"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1351),
                            IsDeleted = false,
                            Name = "Functional Testing – User Acceptance Test",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("81811827-bddc-4973-a659-ca0e40449870"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(1352),
                            IsDeleted = false,
                            Name = "Post Go Live Support",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("RiskControlSelfAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskControlSelfAssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("RiskControlSelfAssessmentId", "Id")
                        .IsUnique();

                    b.ToTable("RiskControlSelfAssessmentUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ActionResolutionDate")
                        .HasColumnType("date");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("ActionManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountImpacted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GrossLossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetLoss")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal>("RecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<DateTime>("RecoveryDate")
                        .HasColumnType("date");

                    b.Property<string>("RecoveryDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RecoveryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalRecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("LossManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RecoveryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RecoveryType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("64c5f5ee-ff08-4c03-914b-57c7e01b391e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 359, DateTimeKind.Utc).AddTicks(9484),
                            IsDeleted = false,
                            Name = "recovery1"
                        },
                        new
                        {
                            Id = new Guid("c359ee33-8b9f-4543-8750-2738d0ea9ae1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 359, DateTimeKind.Utc).AddTicks(9488),
                            IsDeleted = false,
                            Name = "recovery2"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RiskDriver", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(955),
                            IsDeleted = false,
                            Name = "People"
                        },
                        new
                        {
                            Id = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(959),
                            IsDeleted = false,
                            Name = "Process"
                        },
                        new
                        {
                            Id = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(961),
                            IsDeleted = false,
                            Name = "Systems"
                        },
                        new
                        {
                            Id = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(963),
                            IsDeleted = false,
                            Name = "ExternalEvents"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8251),
                            IsDeleted = false,
                            Name = "Skills",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8255),
                            IsDeleted = false,
                            Name = "Motivation",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8264),
                            IsDeleted = false,
                            Name = "Capacity",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8267),
                            IsDeleted = false,
                            Name = "Industrial Action",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8269),
                            IsDeleted = false,
                            Name = "Process complexity",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8271),
                            IsDeleted = false,
                            Name = "Change management",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("269387bf-03b1-4b60-95fc-a62977783334"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8273),
                            IsDeleted = false,
                            Name = "Quality of controls",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8275),
                            IsDeleted = false,
                            Name = "Roles and responsibilities",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8277),
                            IsDeleted = false,
                            Name = "Adequacy of procedures",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8278),
                            IsDeleted = false,
                            Name = "System adequacy",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8282),
                            IsDeleted = false,
                            Name = "System availability",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("2094ab76-2766-4a88-9a45-fd5444570151"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8284),
                            IsDeleted = false,
                            Name = "System security",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("96912526-6283-4f3c-9079-769b5d08f06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8286),
                            IsDeleted = false,
                            Name = "System Complexity",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("00a54610-0522-4313-ac74-d39f550ff600"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8288),
                            IsDeleted = false,
                            Name = "Data protection",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8290),
                            IsDeleted = false,
                            Name = "Outsourcing",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8292),
                            IsDeleted = false,
                            Name = "Regulatory",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8294),
                            IsDeleted = false,
                            Name = "Legal",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8296),
                            IsDeleted = false,
                            Name = "Social, and natural environment",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8299),
                            IsDeleted = false,
                            Name = "Client / customer relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 360, DateTimeKind.Utc).AddTicks(8301),
                            IsDeleted = false,
                            Name = "Third-party Relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverCategoryId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae5e3411-7beb-4913-ba90-0935724b3539"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3245),
                            IsDeleted = false,
                            Name = "Staff selection (poor educational levels etc)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("227555ec-d64f-401a-8c98-1aa41ccd6044"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3249),
                            IsDeleted = false,
                            Name = "Inadequate skills development (e.g. training)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("e8ec62c7-f1d6-4c6d-9c17-4f9aee20fd06"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3255),
                            IsDeleted = false,
                            Name = "Key man retention",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("2cd0b6c0-e442-4d64-b1f6-2427e815d198"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3256),
                            IsDeleted = false,
                            Name = "Lack of management oversight",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("04c34c3e-4146-4bc9-b43f-da10c791b1dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3258),
                            IsDeleted = false,
                            Name = "Lack of staff experience in relation to performed tasks",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("c8489240-ffb8-4e4b-ad92-f8d58f428ff7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3259),
                            IsDeleted = false,
                            Name = "Negligence of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("bcaa3aa7-ab81-417f-9df4-e45e3016859f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3266),
                            IsDeleted = false,
                            Name = "Performance failure of Support unit",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("ca9e72d8-c517-469c-a6c3-1a3b40e32aeb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3267),
                            IsDeleted = false,
                            Name = "Inadequate staff compensation (basic salaries, bonuses, reward-system for vigilance etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("ca65a426-3f42-487d-ac5f-2eafd81c6b35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3269),
                            IsDeleted = false,
                            Name = "Working Atmosphere (level of stress, social climate, interpersonal relationships, malicious Intent)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("a98a4e3c-4ce6-4272-a295-fef0883723a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3270),
                            IsDeleted = false,
                            Name = "Workload perception (lack of clearly stated goals and objectives etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("2808320f-64fb-4292-bb10-9403da98657d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3273),
                            IsDeleted = false,
                            Name = "Corruption / Criminal Intent",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("bd1a5ac6-20cf-48bb-a0e3-0915a76c7c60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3274),
                            IsDeleted = false,
                            Name = "Staff shortages within unit (lack of capacity in unit)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("da795484-b6a2-4f9f-a99f-78b05ac198b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3275),
                            IsDeleted = false,
                            Name = "Staff shortages within support units (lack of capacity in supporting units)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("765485cf-5e53-410d-82bd-a110e2545a27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3277),
                            IsDeleted = false,
                            Name = "Disagreement on issues of mutual interest",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("09772053-e2b7-4e2c-901f-d3f3fe352197"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3278),
                            IsDeleted = false,
                            Name = "Failure to consult organised labour on HR policies",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("5f6ec099-41dc-451a-bbd5-c1eefd63cc4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3279),
                            IsDeleted = false,
                            Name = "Complexity of policies / procedures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("f1e8b49a-acb3-4177-84bb-0da29aa083a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3281),
                            IsDeleted = false,
                            Name = "Complexity of client agreements",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("929cc41c-c12b-416a-8cd1-1ae6486e9e6d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3282),
                            IsDeleted = false,
                            Name = "Process inappropriate for geographic / physical location",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("245bc06d-7866-46be-840f-0e00f73db803"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3285),
                            IsDeleted = false,
                            Name = "Automated process failures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("6deeb7b4-2cfc-4b1d-8f4b-9d2a9b2c9892"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3286),
                            IsDeleted = false,
                            Name = "Introduction of new processes and procedures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("e6dea446-a767-47bf-bc91-873df23f1520"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3287),
                            IsDeleted = false,
                            Name = "Internal communication failures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("cddfaad3-62ae-4be5-882f-df2d53ff1b74"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3289),
                            IsDeleted = false,
                            Name = "Lack of documented guidelines for new processes / services developed",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("fa168c62-8d6e-4c47-af10-b8cb610d28a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3290),
                            IsDeleted = false,
                            Name = "Rate of change / diversification of products / services",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("10fe1e14-3ce4-4cb4-b46f-a196d73aff9b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3291),
                            IsDeleted = false,
                            Name = "Inadequate controls in place (specific / pervasive / monitoring)",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("d810107e-eb24-4e8f-aa3b-5ec7e6c5df93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3293),
                            IsDeleted = false,
                            Name = "Lack of reporting of control weaknesses / failures",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("5b51cc79-58b2-48ec-a19e-95de2dba6b30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3294),
                            IsDeleted = false,
                            Name = "Failure of automated controls",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("08817af1-f9fd-48a5-8a02-044f1bfea9a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3297),
                            IsDeleted = false,
                            Name = "Management ability to override controls or processes",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("85330b3a-132a-423c-8a30-6cd94af8d628"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3298),
                            IsDeleted = false,
                            Name = "Inadequate clarity of authority (ultimate decision maker) and reporting lines",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("5d70d063-760d-4972-85c8-3fde96448747"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3299),
                            IsDeleted = false,
                            Name = "Inadequate delegation of power (scope, limits, communication, reporting etc)",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("19e2647c-7204-4a2c-8581-12ca0e0c338b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3301),
                            IsDeleted = false,
                            Name = "Inadequate definition of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("6e3631d3-cd68-435b-af52-8497c7147993"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3303),
                            IsDeleted = false,
                            Name = "Inadequate segregation of duties",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("69c34c28-d544-4e0e-8f47-58e89e9d09e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3305),
                            IsDeleted = false,
                            Name = "Lack of formal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("55de245c-f0ad-47f2-9b64-7ff447141400"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3306),
                            IsDeleted = false,
                            Name = "Inadequate / incomplete procedure (Internal communication failure)",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("8ac5977c-4e3e-44a4-9c3b-c6dcc9531092"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3308),
                            IsDeleted = false,
                            Name = "Lack of access to internal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("409c9305-1476-49ab-b6fe-0dcb114bb52a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3311),
                            IsDeleted = false,
                            Name = "Lack of SLA's between internal units",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("84a7e13c-d9cd-434a-a794-b7b62eae0ac0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3312),
                            IsDeleted = false,
                            Name = "Non adherence to processes and procedures",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("c5e7c7b3-13bd-4216-9cdf-b40f455371fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3313),
                            IsDeleted = false,
                            Name = "System inadequate for nature of required tasks",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("929a9035-2233-439b-a299-1d0c09cafa4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3315),
                            IsDeleted = false,
                            Name = "System inadequate for volume of activities (speed, storage etc)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("3dee5472-fbc8-4690-bc4f-c29fa1c62313"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3317),
                            IsDeleted = false,
                            Name = "Inadequate technical or functional documentation (user guides)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("8d3d233a-552d-4982-a663-67385959ae70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3318),
                            IsDeleted = false,
                            Name = "IT helpdesk inefficiencies",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("0dd8f1f4-961a-4708-bcf6-876613ac2375"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3319),
                            IsDeleted = false,
                            Name = "Technological obsolescence",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("589254d3-66de-479b-9fac-7d33ff5ce452"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3320),
                            IsDeleted = false,
                            Name = "Software failure (Software / data corruption etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("030e8a3c-fe7b-4ee2-9350-0a15963f2192"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3324),
                            IsDeleted = false,
                            Name = "Hardware failure (Failure of wearing parts etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("07a3cb34-9618-43a0-ad58-232dd04d6021"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3325),
                            IsDeleted = false,
                            Name = "System unavailable due to extended period of power outage",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("70824d25-07b7-4f51-b42f-0c0348245973"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3326),
                            IsDeleted = false,
                            Name = "Other Equipment failure (Failure of other assets/ equipments other than IT related equipments etc.)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("d3476261-7135-48d5-8af9-456ecff840d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3328),
                            IsDeleted = false,
                            Name = "Inadequate security of user profiles (passwords etc)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("0f7449ae-9885-41d3-8963-d5ecd65f01a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3329),
                            IsDeleted = false,
                            Name = "Inadequate security over critical data areas",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("cdcdb634-f6ee-4f59-9f09-00a6298c8e26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3330),
                            IsDeleted = false,
                            Name = "Inadequate logical system control checks (e.g. log monitoring)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("c92e3db3-2d42-433f-81d0-433e7395138b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3332),
                            IsDeleted = false,
                            Name = "Inadequate synergy between disparate systems with common users",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("a2c2be94-5755-409a-81c8-a3a5a3c970ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3333),
                            IsDeleted = false,
                            Name = "Poor systems user interface",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("10cdd80e-44c3-4a1f-b5e8-bcd32db2fcb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3335),
                            IsDeleted = false,
                            Name = "Inadequate system / data backups",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("1de5a7cd-8de4-4f9a-bac4-03de7829b14a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3337),
                            IsDeleted = false,
                            Name = "Virus / Intrusion attacks",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("fe386b98-fd7c-4f50-affe-2ee5ac9ef99b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3338),
                            IsDeleted = false,
                            Name = "Lack of formalization of relationship with outsourcer (duties, deliverables etc)",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("d84c5796-5a93-4d63-a655-b6594f0ed7c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3339),
                            IsDeleted = false,
                            Name = "Performance failure of outsourced vendor / service provider",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("47be8d8c-0eec-47e0-b287-cbd6aa477e4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3340),
                            IsDeleted = false,
                            Name = "Regulatory compliance breaches",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("03a39da2-5e88-47e6-8f6c-23a28539616f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3341),
                            IsDeleted = false,
                            Name = "Government discretion to impose will and decisions without prior notice.",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("8a1c9d81-9462-4c65-95e4-82b3b833df65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3343),
                            IsDeleted = false,
                            Name = "Ambiguity in Regulations",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("c35184bf-0061-4bde-8239-09727c1af309"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3344),
                            IsDeleted = false,
                            Name = "Inadequate response to legal / contractual disputes",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("c506210c-ce60-4283-86c8-e87fc01c30c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3346),
                            IsDeleted = false,
                            Name = "Inadequate pre-agreement investigations",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("90435e08-82b4-4fbd-b4f3-6e467342fef6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3348),
                            IsDeleted = false,
                            Name = "Inadequate legal structures",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("93b1ea77-7da6-4663-bc5d-e87e0ef7e718"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3353),
                            IsDeleted = false,
                            Name = "Natural disasters (Fire, floods, etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("57eafabf-c64b-4b25-8c32-1dafcffc1074"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3355),
                            IsDeleted = false,
                            Name = "External attacks (burglary, robberies, vandalism etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("d3f5e33f-0dcc-4407-99d0-744e09777886"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3356),
                            IsDeleted = false,
                            Name = "Political or social unrest",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("788ae75f-f88c-4a65-a165-a7bf6f842992"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3357),
                            IsDeleted = false,
                            Name = "Unethical Social and Business Environment",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("5eee78b1-9d20-48a2-8485-85eaca369012"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3358),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by the client",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("6fda4b6e-acee-43a0-ad51-f0002baf720f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3360),
                            IsDeleted = false,
                            Name = "Client/Counterparty Failures",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("04c60fb6-22a3-4f2e-a10f-83bee219ca0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 361, DateTimeKind.Utc).AddTicks(3365),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by third-parties",
                            RiskDriverCategoryId = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RiskEffectCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("267a9ba1-5b6a-4486-8dc9-f5ac4d9f28ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 351, DateTimeKind.Utc).AddTicks(8547),
                            IsDeleted = false,
                            Name = "Legal Liability"
                        },
                        new
                        {
                            Id = new Guid("6b157e2c-6582-4eb9-99d5-ea35c09f80e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 351, DateTimeKind.Utc).AddTicks(8549),
                            IsDeleted = false,
                            Name = "Regulatory Action"
                        },
                        new
                        {
                            Id = new Guid("d9f83779-c496-47af-9d27-c103c3147881"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 351, DateTimeKind.Utc).AddTicks(8550),
                            IsDeleted = false,
                            Name = "Loss or Damage to Assets"
                        },
                        new
                        {
                            Id = new Guid("5ed375a6-59ce-4dbd-b55e-af5b050fe4b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 351, DateTimeKind.Utc).AddTicks(8551),
                            IsDeleted = false,
                            Name = "Restitution"
                        },
                        new
                        {
                            Id = new Guid("f43458eb-32f9-41bb-b59e-9d1b3d910ec3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 351, DateTimeKind.Utc).AddTicks(8558),
                            IsDeleted = false,
                            Name = "Loss of Recourse"
                        },
                        new
                        {
                            Id = new Guid("96f1658e-b151-49d9-bcdc-e7856b605d21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 351, DateTimeKind.Utc).AddTicks(8559),
                            IsDeleted = false,
                            Name = "Write-down"
                        },
                        new
                        {
                            Id = new Guid("f132aecf-3f1a-49fe-841f-e8df5486c639"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 351, DateTimeKind.Utc).AddTicks(8559),
                            IsDeleted = false,
                            Name = "Outsourcing / Vendor Costs"
                        },
                        new
                        {
                            Id = new Guid("6bea0c77-e816-493b-a4ee-4376d0f440a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 351, DateTimeKind.Utc).AddTicks(8560),
                            IsDeleted = false,
                            Name = "Reputational Loss"
                        },
                        new
                        {
                            Id = new Guid("b150d311-aeb2-4fd1-b088-787895242e50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 351, DateTimeKind.Utc).AddTicks(8561),
                            IsDeleted = false,
                            Name = "Reduced operational capacity"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EffectCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EffectDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EffectType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RationaleForGrossLossValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EffectCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEffectManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssesmentStatus")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfIdentification")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfOccurence")
                        .HasColumnType("date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("EstimatedLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportedByUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskEventDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("BusinessEntityId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UnitId");

                    b.ToTable("RiskEvent", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoundaryEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RiskDriverDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskDriverSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EventCategoryId");

                    b.HasIndex("EventSubCategoryId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("RiskDriverCategoryId");

                    b.HasIndex("RiskDriverId");

                    b.HasIndex("RiskDriverSubCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEventManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId", "Name")
                        .IsUnique();

                    b.ToTable("Unit", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4016),
                            DepartmentId = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("085af12a-41d1-4516-adc4-7e6aba212354"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4021),
                            DepartmentId = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4024),
                            DepartmentId = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            IsDeleted = false,
                            Name = "Securities Operations"
                        },
                        new
                        {
                            Id = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4031),
                            DepartmentId = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4033),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4035),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4038),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4040),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("556d5367-6794-4355-974f-e2ebb6447695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4043),
                            DepartmentId = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4045),
                            DepartmentId = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6b2c5f66-56fe-4a29-9393-5a8b7623d880"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4046),
                            DepartmentId = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("c8ba310f-753d-4317-bce6-1559fb079142"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4050),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4052),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("840c5c87-0155-4c39-85f4-f3736f04e540"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4054),
                            DepartmentId = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("3f4ee577-f743-4614-adda-5bd4e641c85c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4056),
                            DepartmentId = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("a7f38bb3-596e-486d-b7ef-3e30b893a622"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4058),
                            DepartmentId = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("dda976b6-ac1f-42ed-a9cf-860ab77826ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4060),
                            DepartmentId = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4063),
                            DepartmentId = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4064),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4068),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f849e3eb-bc9e-46f7-9d8e-45912925298d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4070),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("2108a385-5b39-4953-97e7-216523683078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4072),
                            DepartmentId = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4074),
                            DepartmentId = new Guid("2b4752e0-89e3-45ab-b4d6-f3809bd9c015"),
                            IsDeleted = false,
                            Name = "ARM Securities"
                        },
                        new
                        {
                            Id = new Guid("4082fe29-5966-476e-951f-c44e306ca50f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4075),
                            DepartmentId = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("575a8a92-112f-4752-a875-24999b3f69ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4077),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4080),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("0aacc5ae-ea42-41e1-98c9-9b28d3628d08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4081),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("bfe9d961-8677-4fe2-9727-65f633759353"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4085),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("eaa2f32a-bd71-4b87-a692-6b7eae9f560f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4086),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4088),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("0845fb19-2120-461d-b291-74e1aafa9adb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4090),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4092),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4095),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4098),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4105),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4109),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4112),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4113),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4116),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("941c57d3-66c5-4083-85b9-20bf746b0def"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4118),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4119),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("80245081-74bc-4124-87f5-d6008b28706b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4121),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4123),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a16649cf-8b89-4027-9628-8af108db66fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4126),
                            DepartmentId = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4128),
                            DepartmentId = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e3eaede4-d14c-4c91-b986-f19350038ab4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4130),
                            DepartmentId = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4131),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4133),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("bae03f16-d1e7-410b-ad67-46bfe376c873"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4135),
                            DepartmentId = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("a6dc58d2-3ca3-442c-a2f2-74a3e2f861e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4137),
                            DepartmentId = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("6944d275-92d3-400f-bf70-00f6d9a271ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4139),
                            DepartmentId = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("67552124-7cee-4f19-8e6c-4b9598f1510f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4142),
                            DepartmentId = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4143),
                            DepartmentId = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4145),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4147),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("201b2b9b-55a4-49eb-82b7-05afb9110eae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4148),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("209cfd77-d2b6-4264-963c-bd02558837e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4150),
                            DepartmentId = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("d421d758-faec-4fc4-bab7-9f022d03698d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4152),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Business Development"
                        },
                        new
                        {
                            Id = new Guid("eb42b40b-bfd0-443b-b03f-956ab9d03db3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4154),
                            DepartmentId = new Guid("2214335d-9ca8-4ac9-8fe1-352deda923bf"),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("d1904219-86a4-44a5-85a0-754ff2dcadc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4157),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Retail Sales"
                        },
                        new
                        {
                            Id = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4158),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Operations Settlement"
                        },
                        new
                        {
                            Id = new Guid("81c6034f-0951-4de7-a51b-f4471168c94d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4160),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Customer Onboarding & Data Mgt Team"
                        },
                        new
                        {
                            Id = new Guid("bb208834-9b69-4f5b-a283-54c0fd69cf45"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4162),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Relationship Manager"
                        },
                        new
                        {
                            Id = new Guid("268d2016-a662-4c85-a3b2-5d4cfeeb33ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4164),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Account Executives"
                        },
                        new
                        {
                            Id = new Guid("07d965be-1bd6-40df-bfe9-9679b6a4a3c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4165),
                            DepartmentId = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4167),
                            DepartmentId = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("9ec38d97-5e77-4410-90fd-30c179766021"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4169),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4172),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4173),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4175),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4177),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4178),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("fb274136-84fe-430d-bab9-6647909a1a48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4180),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("d638462f-bde3-4555-889b-2af892201b07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4182),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("e1671ffd-98d2-4063-b883-310378ac972a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4183),
                            DepartmentId = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4186),
                            DepartmentId = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("eaaafeef-5b77-4370-bd8f-21fd1b9e1b94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4193),
                            DepartmentId = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4194),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4196),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("156818e3-1ea6-42b0-a785-7dfaac6f5371"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4198),
                            DepartmentId = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("e60519ac-2af8-40be-94ed-2218e244d1d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4199),
                            DepartmentId = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("19331c05-77f0-4f49-bb90-2af3a78a7793"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4201),
                            DepartmentId = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("9fb66e98-951d-462e-a559-4f19a955bd5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4202),
                            DepartmentId = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4205),
                            DepartmentId = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4207),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4209),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f4c145fb-e830-4fa2-ba1d-77963b39eccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4211),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("598f6cac-69ce-47bb-8be4-f0697c1eb47e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4212),
                            DepartmentId = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("b79352c2-c526-46ce-91fc-c94915ea6ce3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4214),
                            DepartmentId = new Guid("1777e6a2-05bc-4322-81f0-10a205779214"),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("55b730f9-4550-4829-a479-9fc651b7946f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4215),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury Operations"
                        },
                        new
                        {
                            Id = new Guid("a3f65993-988f-49aa-9268-ae88d2472739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4217),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury Sales"
                        },
                        new
                        {
                            Id = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4220),
                            DepartmentId = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("05652a26-461c-4c78-be42-f212fc5fd083"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4222),
                            DepartmentId = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("54578f13-6ee3-418d-aede-e77041ef4878"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4224),
                            DepartmentId = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4226),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4228),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("16bedab4-1eb0-484a-9845-e1581085f146"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4230),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4231),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4233),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4236),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("90cd9708-b7b4-4203-ba98-6ce8c66e623e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4237),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8f3b081b-f835-4577-aa13-9aefd6559760"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4239),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("bb28a222-8895-4def-a8a2-1320ad8eb17b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4241),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("ada4d1eb-bcaf-40b1-9790-82c54a225fc3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4242),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("e35aaace-aeba-48df-867c-750aef56d05f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4244),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4246),
                            DepartmentId = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4247),
                            DepartmentId = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db3aeece-97b4-42b0-bf58-0f02b87ae4cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4250),
                            DepartmentId = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4252),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4254),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("f60b1ae5-e26f-41bc-a5f3-814f19bdaf0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4255),
                            DepartmentId = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("dcea9d1b-56d2-47b3-901e-1e6b8a6365d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4257),
                            DepartmentId = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("7fc65d4a-e0ad-4274-b1ba-c447f49cd208"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4259),
                            DepartmentId = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("e3ccc14e-8d7b-4817-a4c2-8d7eca698d72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4260),
                            DepartmentId = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4262),
                            DepartmentId = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4265),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4266),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d09befe1-8e69-4e76-9735-88597aeb09a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4268),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("cb66fa72-3399-4483-9766-bf35f2033862"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4270),
                            DepartmentId = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("44fe054d-83dd-41da-b90a-a53631af453d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4276),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d33101c-f8c2-44f0-8774-5eda11b05df3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4278),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4280),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4282),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("ad83f6ba-ea3b-4d12-a50a-5f00899e3f0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4285),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("3bc7f31c-9502-492b-8a0d-4204be7a5614"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4287),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4288),
                            DepartmentId = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4290),
                            DepartmentId = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("36e6ae73-2270-40ea-ae16-64d610c1e5b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4292),
                            DepartmentId = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4293),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4295),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("087015b4-acdb-4487-a687-0f084390f387"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4296),
                            DepartmentId = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2289ecd3-d422-42e9-95d1-aa91425d1c0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4300),
                            DepartmentId = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("9a3f56c3-6249-46eb-880d-01b01cbe7078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4301),
                            DepartmentId = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7979d030-e342-426c-b1e6-6ce2ba29cb20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4303),
                            DepartmentId = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("9f4432a0-9002-4553-997d-633869423d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4305),
                            DepartmentId = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4306),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("e4789074-ab43-463f-b18f-42606e28db63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4308),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d79f8f8d-8fe1-4ff4-94f0-2550f51d8186"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4310),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("ea600662-5dbb-4ad6-8200-cc3b2cf39a10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4311),
                            DepartmentId = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("1df86816-2842-4941-8710-36822d6240e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4314),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4316),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4318),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4319),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("eb862f6f-9693-4a7a-b2b8-df539e26a8c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4321),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("be3396b5-e02e-48ac-ae55-d64dad1cbd76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4322),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4324),
                            DepartmentId = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4325),
                            DepartmentId = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8581332b-8d77-4f1c-8a3b-79a996ff575f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4328),
                            DepartmentId = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4331),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4332),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4334),
                            DepartmentId = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("850b308d-bef3-41ad-b812-413b868e7621"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4335),
                            DepartmentId = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4337),
                            DepartmentId = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4339),
                            DepartmentId = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4340),
                            DepartmentId = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4343),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("a470f202-ca90-4fc9-8617-358311885a1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4345),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("30306755-5207-4d72-9c62-359afa8a5f0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4346),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4349),
                            DepartmentId = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4351),
                            DepartmentId = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("0c3dc3f2-d704-4d25-9177-46bde182bf5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4352),
                            DepartmentId = new Guid("865be81a-ebe9-4c50-b5b9-9c07c28b1d9f"),
                            IsDeleted = false,
                            Name = "Company Secretariat"
                        },
                        new
                        {
                            Id = new Guid("856f2fcf-81ba-4ff8-84e5-f61b0acb9128"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4358),
                            DepartmentId = new Guid("37d376e3-5e1f-42a7-9d77-e63f07ca4475"),
                            IsDeleted = false,
                            Name = "Data and Insights"
                        },
                        new
                        {
                            Id = new Guid("b625ff03-0916-4369-882d-0ffcd322660d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4360),
                            DepartmentId = new Guid("252cf529-9e73-4257-a718-d9cf51251ae0"),
                            IsDeleted = false,
                            Name = "Environmental, Social and Governance"
                        },
                        new
                        {
                            Id = new Guid("3ff75ac7-8e21-4e8a-8895-a77a4dfb5dee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4363),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("5e3f8a3a-4451-4153-8871-eaf7f24aa0e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4365),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("789c6900-e5a3-44d4-9e6e-f165c0f94650"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4366),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4369),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("2abce038-72a5-4fd5-9cfc-deef8348f4d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4370),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("38bf0e6d-58f3-47f8-8324-4938c42ac62b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4372),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("7d22672e-a552-4944-a418-d7678717c193"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4374),
                            DepartmentId = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4375),
                            DepartmentId = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("ad196f3c-1065-439f-a8d4-4a88a6933949"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4379),
                            DepartmentId = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4381),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4382),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2570f9e3-7c71-41de-9a32-0981e29c14b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4384),
                            DepartmentId = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("bec6c783-ba3c-4180-9d8a-052ce433f695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4385),
                            DepartmentId = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("33cdd2bc-364b-4975-a2ba-3f40cecca022"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4387),
                            DepartmentId = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("5efbbf5f-3081-4492-9ec4-b8880b3eb06e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4389),
                            DepartmentId = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4390),
                            DepartmentId = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4393),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4395),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6194902-48f8-4bed-bb0d-0aae5b24df4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4396),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("bedd46ce-899c-4c9d-a098-bb49c3633b35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4398),
                            DepartmentId = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("9e089a8d-603a-4c72-a278-0aeb843f9015"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4399),
                            DepartmentId = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4914b69b-1b5e-499a-8350-9fcf5b2e4dca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4401),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("185e0a8b-5aa5-43e5-8828-edeae97cd121"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4403),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("2d544b75-9bda-4aff-a212-a2998fc28cfa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4405),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("2470d7cf-0bea-49c7-a2c7-04c9fa36ade6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4408),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("30c9c38f-23b7-4694-acd9-bac0da70eb4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4409),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("cc9fd72b-9a83-43f9-b28f-f8376af33ac0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4411),
                            DepartmentId = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("8618dc34-8edc-471a-8bab-e7d8b0670462"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4413),
                            DepartmentId = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("fa110f66-701d-43b3-9cea-35ca0aaeece1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4414),
                            DepartmentId = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("a9e024ce-d1e7-42c6-b833-73bb43471c8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4416),
                            DepartmentId = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("db1294f5-ada3-42c3-bc59-cd554818e099"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4418),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("64e5f632-d1a0-4ed0-b133-629f6c5d05c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4419),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("4771bfd1-bcba-463a-84ed-f6e8a53f207a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4422),
                            DepartmentId = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("659a83bc-cee9-4939-8669-d2c5617b7845"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4424),
                            DepartmentId = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("1e382c5d-6b22-43a6-9ce9-521244c1f555"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4426),
                            DepartmentId = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("ad6a7903-fb1b-4bf2-a55c-2d06f83e7707"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4427),
                            DepartmentId = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("8a454ad0-80d6-4ded-a89e-c5e9023357ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4429),
                            DepartmentId = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("12fc7195-2c3f-4bca-88b4-beef3f234d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4430),
                            DepartmentId = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("491cdc51-64aa-4f6b-b5ba-b036b0174852"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4432),
                            DepartmentId = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("d6733360-b4e1-4b88-9cbb-364cf2c3fd9c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4433),
                            DepartmentId = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("5d296ac9-f9f9-4f69-bb40-0f8b616a6d0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4436),
                            DepartmentId = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("35a7256f-7c2a-45ea-8cbb-2e7509b1cd21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4443),
                            DepartmentId = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("3d1ba0a1-ce2d-4806-b60e-4002c054f341"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4445),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("5b77ef60-1c4a-474a-a320-30b120509229"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4446),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4448),
                            DepartmentId = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4450),
                            DepartmentId = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4451),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4453),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("8eb2aa8b-3cd7-41b1-9628-436aaace8df5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4456),
                            DepartmentId = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("79f64fe8-0a3e-4f2a-b499-8f48e6ea37e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4457),
                            DepartmentId = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("2f7f4b7b-25de-490c-9db4-5ecbb9265268"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4459),
                            DepartmentId = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7c0261cb-0d3e-496d-aa86-9cf5f37da1ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4461),
                            DepartmentId = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4462),
                            DepartmentId = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4464),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4465),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("757ecc97-7a10-420e-b919-2ac7aa557b3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4467),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("19704b51-99bb-439f-a4db-6603c6089a58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4470),
                            DepartmentId = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4472),
                            DepartmentId = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("5a96a0a8-8d71-45dc-9736-befceefbecb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4474),
                            DepartmentId = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4475),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4477),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4479),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4480),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4482),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4485),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("329d8cac-d18b-4a9b-bd38-8535e19d2b60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4486),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("e0df9434-41f4-454a-a02b-45d644b4d08d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4488),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("83d63b3c-f20b-4e30-8384-6d603fd67bd4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4490),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6f9b36b-1d78-475e-b7e0-ffdd9f6e45e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4491),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("b88ebfeb-5f91-4718-aa00-ec6ef714f50e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4493),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4494),
                            DepartmentId = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("003ed424-1724-44b1-bcb1-924abb94e338"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4497),
                            DepartmentId = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("5a64f00c-b288-46b3-aa77-ecc4d35b212d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4500),
                            DepartmentId = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4502),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4503),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a39f7dfe-55bb-433d-aabd-70476e81a9f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4505),
                            DepartmentId = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6c300c5e-fba6-467e-952f-4bb3d1d15ea4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4506),
                            DepartmentId = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("b8bc161a-36be-433c-b9b2-2502b40786de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4508),
                            DepartmentId = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("36998696-f319-43d4-bcbf-61b52d0556bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4510),
                            DepartmentId = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4511),
                            DepartmentId = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4514),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4516),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("b0c9d7c8-a875-4f67-b386-d3475c0b2585"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4517),
                            DepartmentId = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("10f06e8a-0531-458a-9131-3d1820112a49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4524),
                            DepartmentId = new Guid("840c2b0e-4146-41fb-a771-ede34bd0d915"),
                            IsDeleted = false,
                            Name = "ARMHIIL"
                        },
                        new
                        {
                            Id = new Guid("1fe23b5b-08a7-450f-9f19-19c41aff6037"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 362, DateTimeKind.Utc).AddTicks(4526),
                            DepartmentId = new Guid("b0b881eb-8beb-412e-8b63-ebfb5fbe0c0a"),
                            IsDeleted = false,
                            Name = "ARM Capital"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Infrastructure.Data.Email", b =>
                {
                    b.Property<Guid>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CC")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMessageSent")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("EmailId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("EmailId"));

                    b.ToTable("Email", (string)null);
                });

            modelBuilder.Entity("AuditPlanningMemoAuditExecutionAuditPlanningMemoPlanningTimeline", b =>
                {
                    b.Property<Guid>("AuditPlanningMemoAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditPlanningMemoAuditExecutionId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditPlanningMemoAuditExecutionId", "AuditPlanningMemoAuditExecutionId1");

                    b.HasIndex("AuditPlanningMemoAuditExecutionId1");

                    b.ToTable("AuditPlanningMemoAuditExecutionAuditPlanningMemoPlanningTimeline");
                });

            modelBuilder.Entity("AuditProgramAuditExecutionCommenceEngagementAuditexecution", b =>
                {
                    b.Property<Guid>("AuditProgramAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommenceEngagementAuditexecutionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditProgramAuditExecutionId", "CommenceEngagementAuditexecutionsId");

                    b.HasIndex("CommenceEngagementAuditexecutionsId");

                    b.ToTable("AuditProgramAuditExecutionCommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionOwnerUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionToPreventReoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionToResolve")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("WorkerPaperId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkerPaperId")
                        .IsUnique();

                    b.ToTable("AuditFindings");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExceptionsNoted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssueRating")
                        .HasColumnType("int");

                    b.Property<string>("IssueSummary")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Reoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReviewResult")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AuditProgramId")
                        .IsUnique();

                    b.ToTable("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.SessionManagement.SessionTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LockDuration")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserName");

                    b.Property<int>("NumberOfTry")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionTracker", (string)null);
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0dee81f-cc57-42c4-9b41-1b5902c93466"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8806),
                            Email = "chukwuebuka.obieri@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chukwuebuka Obieri",
                            Unit = "Risk Management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("a1d449b8-53ad-446e-9046-94aa98f23580"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8811),
                            Email = "iwasam.elemi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Iwasam Elemi",
                            Unit = "Risk Management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("cd3f2464-b395-4f1b-966d-8b4618e8c275"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8813),
                            Email = "nehizena.ibhawoh@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Nehizena Ibhawoh",
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("6b41eead-228c-42e4-9e69-0df2717ecb12"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8819),
                            Email = "olabisi.adesina@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olabisi Adesina",
                            Unit = "Legal",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("a9a24ca0-d813-4d66-bfcb-fa15660c8405"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8826),
                            Email = "ediagbonya.osayomwanbo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ediagbonya Osayomwanbo",
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784")
                        },
                        new
                        {
                            Id = new Guid("50e6fa08-d248-46da-9164-8a72fd31f20d"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8827),
                            Email = "james.ewah@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "James Ewah",
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784")
                        },
                        new
                        {
                            Id = new Guid("5245caed-7075-4288-8810-ccb157838ebb"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8828),
                            Email = "olayemi.toye@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olayemi Toye",
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("b3f38f85-f7aa-43bd-b904-27cafd589eb8"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8830),
                            Email = "phoebe.ohiembor@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Phoebe Ohiembor",
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("2def2113-2f5c-43be-85d0-4d044ef780a1"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8831),
                            Email = "ethan.okwara@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ethan Okwara",
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("cfd0d040-1e56-4335-bdfb-9f59c0367553"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8832),
                            Email = "ubi.torsam@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ubi Torsam",
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("63aa3693-5293-41ea-a2b8-08110558fdda"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8834),
                            Email = "stephen.igwenwanne@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Stephen Igwenwanne",
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b")
                        },
                        new
                        {
                            Id = new Guid("83f51668-083e-4897-bd38-64fd64805b51"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8837),
                            Email = "ndubuisi.anya@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ndubuisi Anya",
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b")
                        },
                        new
                        {
                            Id = new Guid("b00b0fe5-af4f-4ed8-8a0f-8cbb2f29cf01"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8840),
                            Email = "hassan.adeObafemi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hassan AdeObafemi",
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("d66131a0-0a20-4e44-83ee-88c53ee71662"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8841),
                            Email = "david.akinboade@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "David Akinboade",
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("9d9a0948-6d1e-43e9-968b-934d8a3bf0ec"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8843),
                            Email = "eddy.ayikimi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Eddy Ayikimi",
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("797195d3-0474-455c-a75a-58887622b461"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8844),
                            Email = "akpesiri.kodu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Akpesiri Kodu",
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("2be433d8-2973-43e8-af19-a4340db4a591"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8846),
                            Email = "adeleye.adewusi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Adeleye Adewusi",
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e")
                        },
                        new
                        {
                            Id = new Guid("ed892892-398e-4153-8207-88d8a553ea4e"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8847),
                            Email = "olatunde.samuel@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olatunde Samuel",
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e")
                        },
                        new
                        {
                            Id = new Guid("c7e5df4e-f295-4780-be08-7cc2a65965e8"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8850),
                            Email = "bimbo.moses@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bimbo Moses",
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("ee61a5aa-f6cc-49bc-92e1-185d42fb46a2"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8852),
                            Email = "aminat.ashafa@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Aminat Ashafa",
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("3896a0dd-5b5a-4274-8b09-d8ac722c6479"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8854),
                            Email = "oluwaferanmi.olorunleke@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwaferanmi Olorunleke",
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("69cc0e66-2812-4a04-80c9-3f14aef0d2ba"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8855),
                            Email = "folarinde.ayenuwa@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Folarinde Ayenuwa",
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("f0804499-1938-4755-920c-f3df580b20d3"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8857),
                            Email = "ibukun.ajose@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ibukun Ajose",
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805")
                        },
                        new
                        {
                            Id = new Guid("e4014e4e-0e28-4982-bced-0786d6e53970"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8858),
                            Email = "kevian.kevin@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kevian Kevin",
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805")
                        },
                        new
                        {
                            Id = new Guid("a83b61e7-3306-45ac-8c86-065529ab21c2"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8861),
                            Email = "raymond.akorah@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Raymond Akorah",
                            Unit = "ARM Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("e6cac5be-01a7-4ce9-96f2-ce09c5e783c7"),
                            Business = "ARM Digital Financial Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8863),
                            Email = "ina.alogwu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ina Alogwu",
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("a0f267d9-faac-4fbc-89b1-d0b37dc1ccba"),
                            Business = "ARM Digital Financial Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8864),
                            Email = "folaranmi.adefila@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Folaranmi Adefila",
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("75604c5a-9572-475a-ab4b-91a628afc7af"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8867),
                            Email = "oritsegbemi.agbajor@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oritsegbemi Agbajor",
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083")
                        },
                        new
                        {
                            Id = new Guid("d5fde961-3f6d-42e6-b11f-1d85738412bd"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8868),
                            Email = "chidinma.mbakwe@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chidinma Mbakwe",
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083")
                        },
                        new
                        {
                            Id = new Guid("2a3f9cc3-e703-4f79-87ca-7d93361e8fd4"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8870),
                            Email = "olugbenga.ajigbotafe@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olugbenga Ajigbotafe",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("3df4ebfb-0adb-4e69-b2e0-77b675ec6c1b"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8872),
                            Email = "joy.oyekan@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Joy Oyekan",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("44296609-df47-477e-9694-b0c0448d3c7f"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8873),
                            Email = "oluwabunmi.abiodun-wright@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwabunmi Abiodun-Wright",
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("0649522a-f0a6-4853-964a-ac5446d2b21b"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8874),
                            Email = "ezekiel.solomon@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ezekiel Solomon",
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("25f8ce7e-e9a6-4794-935e-3fdd6ee0298d"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8876),
                            Email = "judith.okeke@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Judith Okeke",
                            Unit = "Trading & Brokerage",
                            UnitId = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7")
                        },
                        new
                        {
                            Id = new Guid("c8999052-c940-4c53-9464-0f3ac02a2b3f"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8877),
                            Email = "carol.ariyibi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Carol Ariyibi",
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621")
                        },
                        new
                        {
                            Id = new Guid("c8d419c3-b10d-472d-8a69-76dd979f6cac"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8880),
                            Email = "olaoluwa.omolayole@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olaoluwa Omolayole",
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621")
                        },
                        new
                        {
                            Id = new Guid("d419e465-e847-47cb-be2a-2050367d5f3a"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8881),
                            Email = "jacqueline.adefeso@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jacqueline Adefeso",
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9")
                        },
                        new
                        {
                            Id = new Guid("31fc29fa-cc4b-4c49-b011-6cdcd1076feb"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8887),
                            Email = "moradeke.odugbesan@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Moradeke Odugbesan",
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9")
                        },
                        new
                        {
                            Id = new Guid("fcd4b0f3-82e5-4ced-8350-8c3a326b7a67"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8889),
                            Email = "dare.shobajo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Dare Shobajo",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("9b906f12-1138-4a93-9cac-a68fa9410afa"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8891),
                            Email = "moshood.hassan@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Moshood Hassan",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("62ba59dd-4ec0-43b1-b431-fbc062be7a29"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8893),
                            Email = "vwede.edah@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Vwede Edah",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("d2630470-daf5-4916-b477-b967d1f38083"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8894),
                            Email = "opeyemi.babasola@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Opeyemi Babasola",
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("b079f24a-1469-46db-8419-cfbc6c4948aa"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8895),
                            Email = "doyinsola.ola@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Doyinsola Ola",
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507")
                        },
                        new
                        {
                            Id = new Guid("5eb626f2-841e-4918-97bb-5476dddd9a24"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8898),
                            Email = "rasheed.adebola@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rasheed Adebola",
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507")
                        },
                        new
                        {
                            Id = new Guid("9878e3da-67e6-4e58-8a36-a19e722d4612"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8899),
                            Email = "gozie.alozieuwa@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gozie Alozieuwa",
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("33eb5cef-e154-478d-94f2-92a4f4fda45a"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8900),
                            Email = "lincoln.ogigai@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lincoln Ogigai",
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("a0d6f181-4d33-4fcb-b54a-e123ab825932"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8905),
                            Email = "oyinkan.aregbesola@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oyinkan Aregbesola",
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d")
                        },
                        new
                        {
                            Id = new Guid("c84fdbff-4eaf-4153-818f-2936ebec3426"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8906),
                            Email = "moyosore.taiwo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Moyosore Taiwo",
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d")
                        },
                        new
                        {
                            Id = new Guid("56501565-10bf-492e-8c70-4803eb1162cf"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8909),
                            Email = "jobalo.oshinkalu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jobalo Oshinkalu",
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d")
                        },
                        new
                        {
                            Id = new Guid("9983f762-0cd8-442c-b931-5f6c8a48234d"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8910),
                            Email = "oyedele.oyinbojuni@armharith.com",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oyedele Oyinbojuni",
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d")
                        },
                        new
                        {
                            Id = new Guid("e75266dd-b4ce-4ef7-97a0-0188edf1bbb7"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8912),
                            Email = "isaac.elakhe@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Isaac Elakhe",
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("77581a2e-8f40-4eac-9861-a33b3bba9262"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8914),
                            Email = "oladupe.oshinuga@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oladupe Oshinuga",
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("f53e508a-643b-4fbe-9d5f-979678a789b8"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8916),
                            Email = "adetayo.adebiyi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Adetayo Adebiyi",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("350890e7-16fb-4b5e-b75e-1fc3f6024a76"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8918),
                            Email = "oluwatobi.oyebiyi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwatobi Oyebiyi",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("7cdf6cb2-7d14-4952-bf4b-363a6621b2f2"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8919),
                            Email = "itunu.olatunde-folaji@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Itunu Olatunde-Folaji",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("e40d47e4-d2c6-4f7b-9a0e-355a281486d4"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8920),
                            Email = "roselina.ajah@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Roselina Ajah",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("fd95df9f-8c55-4990-8296-ffa8d4da629f"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8921),
                            Email = "abayomi.apoeso@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Abayomi Apoeso",
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("d604f416-b59b-45fa-8def-7cc45710804a"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8923),
                            Email = "faith.sani@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Faith Sani",
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("b1f27a7a-ea1e-428c-b710-dee265f76f61"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8924),
                            Email = "mounir.bouba@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Mounir Bouba",
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("e24f1910-b248-42d6-8e17-1d41154665bc"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8927),
                            Email = "chukwufumnanya.chizea@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chukwufumnanya Chizea",
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("8017a4e3-7dee-492d-8caa-f64c4d61a134"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8929),
                            Email = "raphael.emenyonu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Raphael Emenyonu",
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3")
                        },
                        new
                        {
                            Id = new Guid("2490bf36-7ae3-4bad-a191-db7c25457430"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8930),
                            Email = "hamed.omotayo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hamed Omotayo",
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3")
                        },
                        new
                        {
                            Id = new Guid("62870dc1-fd3c-4715-a1d0-482725736412"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8931),
                            Email = "anuoluwapo.sebanjo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Anuoluwapo Sebanjo",
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("6630c85c-2340-404e-aded-155924aa0658"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8933),
                            Email = "philip.aikinomiora @arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Philip Aikinomiora",
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("10fa3c26-e246-45d1-994a-db306a156965"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8935),
                            Email = "gbeminiyi.onipede@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gbeminiyi Onipede",
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb")
                        },
                        new
                        {
                            Id = new Guid("4c5844f8-73ce-4316-acf4-e042ec0d1a83"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8936),
                            Email = "olukayode.fajuyagbe@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olukayode Fajuyagbe",
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb")
                        },
                        new
                        {
                            Id = new Guid("dd11c850-cde7-4801-8115-36527d35d6e0"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8938),
                            Email = "opeyemi.oshinyemi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Opeyemi Oshinyemi",
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("0e0598fd-cc7d-4a33-89fe-1c47423fd1de"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8941),
                            Email = "james.agu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "James Agu",
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("b9626272-ee25-4a94-bb20-2b0507b2c87d"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8942),
                            Email = "olawale.bakir@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olawale Bakir",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("3445612c-3cae-4466-8dac-4a01fd71e4fb"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8943),
                            Email = "barakat.olusanya@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Barakat Olusanya",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("6860d40b-35eb-41dd-abe1-91ddefb12b9c"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8945),
                            Email = "gbenga.sonubi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gbenga Sonubi",
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("eeaa820b-584e-455d-9f2e-780a47116d07"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8946),
                            Email = "kareem.bashir@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kareem Bashir",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("8d41f30a-76e4-4c40-adea-649db3c37145"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8947),
                            Email = "patrick.ayele@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Patrick Ayele",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("6a603adb-71dd-49e4-bae7-3619fe6d9861"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8949),
                            Email = "oluyemi.omodayo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluyemi Omodayo",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("47abce6e-f72d-4ced-a829-1e640e932fb3"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8950),
                            Email = "oluwatosin.adeboyejo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwatosin Adeboyejo",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("1efef69e-ad07-4814-88ab-67ef46a6d4ad"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8953),
                            Email = "elizabeth.alloy@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Elizabeth Alloy",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("6fcae103-4e83-4ca8-b863-21023e84049f"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8954),
                            Email = "stephanie.gber@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Stephanie Gber",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("ab5630de-19ce-4e79-9c50-91c431ad9aa9"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8955),
                            Email = "temitope.akinola@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Temitope Akinola",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("0e500401-7d4f-4488-bf33-cdc6e7fcaa87"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8958),
                            Email = "valerie.okosun@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Valerie Okosun",
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76")
                        },
                        new
                        {
                            Id = new Guid("b102a913-ed26-44e0-8382-e5e6edd5fad0"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8963),
                            Email = "kingsley.ottah@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kingsley Ottah",
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76")
                        },
                        new
                        {
                            Id = new Guid("7d07581d-96d8-4c33-adda-04a484f3ac32"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8964),
                            Email = "ramond.akorah@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ramond Akorah",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("1e73ec46-e892-4245-a43c-e1074642ce09"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8966),
                            Email = "oluwatosin.afolayan@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwatosin Afolayan",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("5cc11851-3105-437f-b689-3f5048ccb22b"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8967),
                            Email = "evelyn.nwogu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Evelyn Nwogu",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("7423ced1-b9a0-45ad-af35-c62a153228f5"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8969),
                            Email = "babatunde.osho@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Babatunde Osho",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("cdd5aacf-f3e7-49cf-956b-5ec03c5977d8"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8971),
                            Email = "augustine.chukwu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Augustine Chukwu",
                            Unit = "Information Security",
                            UnitId = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb")
                        },
                        new
                        {
                            Id = new Guid("f93004c3-4c47-4e76-a3b7-cd552e9a9984"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8972),
                            Email = "kiadum.nwakoh@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kiadum Nwakoh",
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("bc202d8a-dfcf-4188-9862-e8aae9877f65"),
                            Business = "ARM TRUSTEES",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8973),
                            Email = "emmanuella.anaza@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Emmanuella Anaza",
                            Unit = "Financial Control",
                            UnitId = new Guid("90cd9708-b7b4-4203-ba98-6ce8c66e623e")
                        },
                        new
                        {
                            Id = new Guid("04d8cb89-4e0b-4c37-8e5c-38a156c72906"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8974),
                            Email = "sandra.onwordi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sandra Onwordi",
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76")
                        },
                        new
                        {
                            Id = new Guid("6e5bd435-40c9-4e53-a7a4-59e2e2e23fe6"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8976),
                            Email = "oluwatomilola.oduntan@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwatomilola Oduntan",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("8c1f6bba-e198-4866-b5d4-af3b5e12f3a6"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8977),
                            Email = "ogugua.emamoke@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ogugua Emamoke",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("f44c4d4d-83bc-460f-83c5-da5c68a45efe"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8978),
                            Email = "abiola.itakpe@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Abiola Itakpe",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("02fb3e87-01e7-4158-a8d4-6ca77d5660c3"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8981),
                            Email = "chidinma.akosa@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chidinma Akosa",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("1f106f3b-e647-4908-9bc9-860c23c62530"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8982),
                            Email = "ifeoma.ofili@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ifeoma Ofili",
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287")
                        },
                        new
                        {
                            Id = new Guid("c6b937fe-c20b-40ea-af01-69da5b7865d7"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8983),
                            Email = "ademola.adebisi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ademola Adebisi",
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287")
                        },
                        new
                        {
                            Id = new Guid("fd0181db-e548-4341-9bd9-a072c0068414"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8984),
                            Email = "victoria.itrechio@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Victoria Itrechio",
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287")
                        },
                        new
                        {
                            Id = new Guid("9d6cbf9f-2c85-4077-bea5-f52376a3f861"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8985),
                            Email = "adebayo.fagbola@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Adebayo Fagbola",
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("59b6d223-e058-40e0-b029-9cea5c488d34"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8987),
                            Email = "maryann.kakulu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Maryann Kakulu",
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("72527d32-d7ad-44d8-85f2-4c3704d0c177"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8988),
                            Email = "babatunde.abimbola@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Babatunde Abimbola",
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("9175ddb2-12d7-40fc-aa67-f18b75c9f890"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8989),
                            Email = "kai.orga@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kai Orga",
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("9dcdbfb0-8be5-456a-97d4-e2ae34ad8592"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8992),
                            Email = "moronke.bamgbala@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Moronke Bamgbala",
                            Unit = "ARM Trustees",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("16a0a939-0417-4d09-a88f-e0db61261007"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8993),
                            Email = "uche.azubuike@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Uche Azubuike",
                            Unit = "RFL",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("c1db64ca-91cc-4be5-af1b-a0904dd1c233"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8994),
                            Email = "Wilfird.korsaga@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Wilfird Korsaga",
                            Unit = "AAFML",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("ed75369a-5632-4835-bc9f-19c5ffaf23e4"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8996),
                            Email = "yusuf.agbolahan@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Yusuf Agbolahan",
                            Unit = "Investment Banking",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("2c64ea7c-5cfd-40d2-a173-e46c24406158"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8997),
                            Email = "rachel.moreoshodi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rachel Moreoshodi",
                            Unit = "ARMHIIL",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("05d26c10-1c9f-4e8f-96e5-981b4f366e7e"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8998),
                            Email = "damilare.mesimo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Damilare Mmesimo",
                            Unit = "DFS",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("6eff4393-9adf-4a4a-9c49-d7ceb9c439c0"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(8999),
                            Email = "funmilayo.adeyemi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Funmilayo Adeyemi",
                            Unit = "DFS",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("01f0a549-b09a-4e37-a784-00f997545ed2"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9001),
                            Email = "jobalo.oshikanlu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jobalo Oshikanlu",
                            Unit = "ARMHIIL",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("e61cddb9-da2c-46cd-a35c-829948213fea"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9003),
                            Email = "toni.timi-oyefolu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Toni Timi-Oyefolu",
                            Unit = "ARMIM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("9f79a914-1de1-4051-ac75-ca9a6890082c"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9004),
                            Email = "jumoke.ogundare@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jumoke Ogundare",
                            Unit = "ARM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("61c0793a-b20b-41ea-bad8-1234b990f098"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9005),
                            Email = "wale.odutola@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Wale Odutola",
                            Unit = "ARM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("462cff08-1748-4237-a209-ddc2455d6469"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9007),
                            Email = "osahon.ogiemudia@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Osahon Ogiemudia",
                            Unit = "ARM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("f4b8855c-b589-41a8-b523-89640a8ace3c"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9008),
                            Email = "chijioke.iteghete@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chijioke Iteghete",
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("82dcacc7-d923-4992-915c-a78e48dcfe81"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9009),
                            Email = "ayodele.oluleye@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ayodele Oluleye",
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("a251de92-f947-431e-b7df-14b0c5a2fee7"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9011),
                            Email = "adepeju.sangotade@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Adepeju Sangotade",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5fc7091f-8ad3-41b5-b8fc-abf43a8f3e43"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9013),
                            Email = "anuoluwapo.senbanjo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Anuoluwapo Senbanjo",
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("42102558-3dd9-4d29-a2a5-9ce9beeaad4e"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9015),
                            Email = "walter.agbongbohielu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Walter Agbongbohielu",
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("45f9f65e-c160-49e5-ab73-016c6d49e3c5"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9017),
                            Email = "olufisayo.bassey@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olufisayo Bassey",
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("be476d38-c961-45fe-bb52-8b52787b6a5f"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9018),
                            Email = "opeyemi.oshiyemi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Opeyemi Oshiyemi",
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("4576b60c-97cd-4b70-8fee-d0bd0622825d"),
                            Business = "ARM SharedService",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9019),
                            Email = "tobi.babalola@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tobi Babalola",
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("3ce96f86-d485-41ad-9a4e-7ee7aaf3db48"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9020),
                            Email = "oluwatosin.oluyemi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwatosin Oluyemi",
                            Unit = "Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("a1320f8c-bba9-42d0-96aa-d44c21f9b0d4"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9021),
                            Email = "tosin.adesope@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tosin Adesope",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("db65c6f0-e0e1-49c6-ae8a-d96c7ccecc98"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9023),
                            Email = "tobby.tobby@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tobby Moses Tobby",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("e5ac8e82-be43-49ca-906b-ae23058e489d"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9029),
                            Email = "olayinka.oyewole@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olayinka Oyewole",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("564f25d2-44a3-4ad7-be94-0c33bb0fee5d"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9032),
                            Email = "ifeanyi.esogwa@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ifeanyi Esogwa",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("ec9f7e1c-9f8b-45c1-9569-4c0725a281e6"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9033),
                            Email = "victor.arowolo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Victor Arowolo",
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("b62d6fc3-9c4a-49e4-b2d9-7ce7e90d766e"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9035),
                            Email = "oluwaferanmi.adedokun@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwaferanmi Adedokun",
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("26e3f85e-0c70-40c9-b003-756c3cdda2c5"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9036),
                            Email = "oyenike.oluwa@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oyenike Oluwa",
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("4ee7a8ee-36eb-4140-95bf-5b3ff0ba49b4"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9037),
                            Email = "rosemary.francis@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rosemary Francis",
                            Unit = "Operations Settlement",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("2fa86575-659d-4915-a207-3ccc48ee4959"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9038),
                            Email = "busola.alakija@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Busola Alakija",
                            Unit = "Operations Settlement",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("0d704fed-5a8e-4937-9c6f-3e90a8a370f2"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9039),
                            Email = "augustina.osagie@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Augustina Osagie",
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("e5134c0d-affb-4b89-9948-92299ad7ef53"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9041),
                            Email = "emmanuel.peter@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Emmanuel Peter",
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("5c70707f-d10d-41c9-a7f1-f21cea7d7cce"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9043),
                            Email = "toluwalase.ajediti@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Toluwalase Ajediti",
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("f1b64625-4d32-49c8-b7fb-a4cf58435f10"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9045),
                            Email = "oluseyi.omoleye@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluseyi Omoleye",
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("9eed900f-141a-4cf3-b861-0ee86ef3c7a8"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9046),
                            Email = "thompson.shedara@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Thompson Shedara",
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("4f33ce90-bed9-479f-b608-544a32d64097"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9047),
                            Email = "oladupe.dare@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oladupe Dare",
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("6f7c2301-2483-4258-997b-4f5ccaebd242"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9048),
                            Email = "martins.onemolease@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Martins Onemolease",
                            Unit = "Fund Amin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("110086eb-7ef6-4680-89d7-5d221eb2d96b"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9049),
                            Email = "ifeoluwa.okunoye@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ifeoluwani Okunoye",
                            Unit = "Fund Amin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("b8baa45e-250b-495d-b76a-c30be0963b5d"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9051),
                            Email = "hassan.balogun@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hassan Balogun",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("b1975bd9-4b62-48a0-a470-afa08af58dd5"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9052),
                            Email = "chioma.opara@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chioma Opara",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("d7d9b297-187c-4605-9b68-1b1b608330f3"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9054),
                            Email = "ibrahim.owolabi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ibrahim Owolabi",
                            Unit = "Treasury",
                            UnitId = new Guid("d638462f-bde3-4555-889b-2af892201b07")
                        },
                        new
                        {
                            Id = new Guid("067e0aab-e684-43b1-b71f-7292b4160885"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9056),
                            Email = "oluwakemi.onipede@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwakemi Onipede",
                            Unit = "Treasury",
                            UnitId = new Guid("d638462f-bde3-4555-889b-2af892201b07")
                        },
                        new
                        {
                            Id = new Guid("2b61d903-239c-42f3-ab44-81941affaa94"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9057),
                            Email = "covenant.ukachi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Covenant Ukachi",
                            Unit = "Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("71b0736d-c724-4ad3-9f4d-ce2d70c70110"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9059),
                            Email = "bukunmi.chuka@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bukunmi Chuka",
                            Unit = "Registrars",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("c287fae3-045e-4c7e-97d4-a2df9d20e679"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9060),
                            Email = "bridget.odubela@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bridget Odubela",
                            Unit = "Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("e0d7efbb-26f7-4fb0-82e2-f379784dfbf0"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9062),
                            Email = "amara.nwafor@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Amara Nwafor",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("6d3f4416-c744-4f1d-abdd-ee7516c532ab"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9063),
                            Email = "chisom.okeke@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chisom Okeke",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5ddf101c-c609-4d3e-a284-c0783bd92f90"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9064),
                            Email = "ifeyinwa.amadi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ifeyinwa Amadi",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("169b7db2-96c3-47e7-8992-e42e3d986e49"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9067),
                            Email = "victoria.makama@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Victoria Makama",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("0f09f44b-594f-4278-b6fd-dbf01ecb9d59"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9068),
                            Email = "dolapo.fashina@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Dolapo Fashina",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5b88abdc-eccd-4a9b-bf2b-12d945f3b352"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9069),
                            Email = "oluwabunmi.ayeni@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Oluwabunmi Ayeni",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("924cc621-af9f-4764-8624-b2c8ad2cc902"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9071),
                            Email = "eno.udoh@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Eno Udoh",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("abfae5b3-0902-4d1f-8f28-d6fd97c77825"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9072),
                            Email = "busola.akerele@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Busola Akerele",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("4ee003cf-01fb-46b9-b29d-88fdc647cb48"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9074),
                            Email = "inemesit.anani@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Inemesit Anani",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("7faf5e34-aff1-4f10-879e-fa451b57a38e"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9075),
                            Email = "adedolapo.oyeleke@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Adedolapo Oyeleke",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("2eca357d-fc76-4d24-9fe4-7277da6a454e"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9076),
                            Email = "simisola.famous-cole@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Simisola Famous-Cole",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("c6f535e9-b435-4cf4-931e-ee8be362f2bd"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9079),
                            Email = "rukayat.adepitan@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rukayat Adepitan",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("54fd1268-63c5-49b5-b9e2-7816d7ae9aa0"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9080),
                            Email = "deborah.dubukumah@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Deborah Dubukumah",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("413f5a4c-ed9a-40f0-9c37-e5727723eab6"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9081),
                            Email = "damilola.akinlade@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Damilola Akinlade",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("9962095a-dcdd-47ed-b02c-fc90a2996ade"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9082),
                            Email = "yetunde.adio@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Yetunde Adio",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("2a7ace96-131b-4dee-9319-075f28615d4a"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9084),
                            Email = "shulammite.wokwereze@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Shulammite Wokwereze",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("deee2d08-0d01-42ab-9834-06a7982bdb50"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9085),
                            Email = "bukola.abdulakeem@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bukola Abdulakeem",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("239baced-9ef1-4804-955f-3974cf899e56"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9086),
                            Email = "lebechi.ndukwe@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lebechi Ndukwe",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5b91c4cb-3b6f-487e-83a8-4e4ef95c4168"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9087),
                            Email = "esther.onumaegbu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Esther Onumaegbu",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("8a2b8299-5388-474c-82ad-2bd994ca3167"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9090),
                            Email = "godwin.ebie@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Godwin Ebie",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("4b2e6d72-d810-469b-87a0-0b91165038e5"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9095),
                            Email = "faith.ojo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Faith Ojo",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("a7023241-be84-4c2a-a626-a3af19927c44"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9097),
                            Email = "veronica.oluigbo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Veronica Oluigbo",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("50fdacc6-b946-40a1-b446-346d6517ec9d"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9098),
                            Email = "anike.olalere@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Anike Olalere",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("c0a82db3-e619-4fc4-88d4-e239b53bcf38"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9099),
                            Email = "chukwuebuka.agbo@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chukwuebuka Agbo",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("73c628ef-b6b4-439b-88b6-98c02b65a03b"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9101),
                            Email = "chinonso.iwuozor@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Chinonso Iwuozor",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("2b597d94-ab92-4bdb-8c01-13cc6715fe56"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9102),
                            Email = "jane.david-abia@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jane David-Abia",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("544477d6-a50e-4314-ab41-2cc007ddef72"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9103),
                            Email = "olufunke.sipe@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olufunke Sipe",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("375f9bb5-ee65-466c-a06d-1acba55830dc"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9106),
                            Email = "moyosore.ibitoye@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Moyosore Ibitoye",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("e5638bf4-d64c-4647-961f-b816588afb66"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9107),
                            Email = "victoria.chukwu@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Victoria Chukwu",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("d27782b3-e325-4243-a854-c7b5b4ddd2c8"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9108),
                            Email = "evelyn.osindeinde@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Evelyn Osindeinde",
                            Unit = "Customer Experience",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("04c718c1-4153-4b79-b971-656a23b21f71"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9109),
                            Email = "adaeze.ukah@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Adaeze Ukah",
                            Unit = "Customer Experience",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("b87a6a5c-0d4e-4fa7-9473-5ebae7247245"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9111),
                            Email = "taiwo.odumuyiwa@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Taiwo Odumuyiwa",
                            Unit = "Customer Experience",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("5c6833aa-dae1-468d-abfa-9916aebd99b2"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9112),
                            Email = "adepeju-lola.sangotade@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Adepeju-Lola Sangotade",
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("1723ff6a-bb4a-4a3e-8826-8cbfea5db80c"),
                            Business = "ARM Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9113),
                            Email = "enoma.osazee@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Enoma Osazee",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("68d1e0b6-be99-4247-83ce-1326f9f14329"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9114),
                            Email = "amaka.nnotum@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Amaka Nnotum",
                            Unit = "Financial Control",
                            UnitId = new Guid("fb274136-84fe-430d-bab9-6647909a1a48")
                        },
                        new
                        {
                            Id = new Guid("89704746-0f14-48fd-94ea-d08d0e981c29"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9118),
                            Email = "ayomide.ojeniyi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ayomide Ojeniyi",
                            Unit = "Securities Operations",
                            UnitId = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb")
                        },
                        new
                        {
                            Id = new Guid("1a203a4f-3ced-4a4a-a6fc-5ba6d5935da3"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9119),
                            Email = "lawrence.olusina@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lawrence Olusina",
                            Unit = "Securities Operations",
                            UnitId = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb")
                        },
                        new
                        {
                            Id = new Guid("b16a6c2b-25f3-4bce-ae7c-46234a6ebafe"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9120),
                            Email = "ilerioluwa.akinosun@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ilerioluwa Akinosun",
                            Unit = "Securities Operations",
                            UnitId = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb")
                        },
                        new
                        {
                            Id = new Guid("d6053e8a-9060-4696-82d8-63c838bf4ebc"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9122),
                            Email = "olashile.abowaba@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Olashile Abowaba",
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("ff1ac976-e8a3-4b38-b9f1-c88db12dbda2"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9123),
                            Email = "ifeoluwa.obigbemi@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ifeoluwa Obigbemi",
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("276ca27e-81f4-41df-aa87-f444b4722b5c"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 368, DateTimeKind.Utc).AddTicks(9124),
                            Email = "gift.aizebeoje@arm.com.ng",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gift Aizebeoje",
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d667eed-04db-481c-9ae0-1c7e614e4507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1419),
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1423),
                            IsDeleted = false,
                            Name = "UnitHead"
                        },
                        new
                        {
                            Id = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1429),
                            IsDeleted = false,
                            Name = "RiskChampion"
                        },
                        new
                        {
                            Id = new Guid("a8cac012-b665-481a-8028-90ed1c4226f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1431),
                            IsDeleted = false,
                            Name = "Staff"
                        },
                        new
                        {
                            Id = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1432),
                            IsDeleted = false,
                            Name = "OtherComplianceUser"
                        },
                        new
                        {
                            Id = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1434),
                            IsDeleted = false,
                            Name = "ComplianceOfficer"
                        },
                        new
                        {
                            Id = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1435),
                            IsDeleted = false,
                            Name = "HROfficer"
                        },
                        new
                        {
                            Id = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1437),
                            IsDeleted = false,
                            Name = "FINCON"
                        },
                        new
                        {
                            Id = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1438),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1439),
                            IsDeleted = false,
                            Name = "InternalAuditOfficer"
                        },
                        new
                        {
                            Id = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1442),
                            IsDeleted = false,
                            Name = "InternalAuditSupervisor"
                        },
                        new
                        {
                            Id = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1443),
                            IsDeleted = false,
                            Name = "InternalControlOfficer"
                        },
                        new
                        {
                            Id = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1445),
                            IsDeleted = false,
                            Name = "InternalControlSupervisor"
                        },
                        new
                        {
                            Id = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1446),
                            IsDeleted = false,
                            Name = "InternalAuditManagerConcern"
                        },
                        new
                        {
                            Id = new Guid("e20991e8-6233-4635-8829-4ee12bf7004d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1447),
                            IsDeleted = false,
                            Name = "InternalAuditExecutiveManagerConcern"
                        },
                        new
                        {
                            Id = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1448),
                            IsDeleted = false,
                            Name = "InternalControlCallOverOfficer"
                        },
                        new
                        {
                            Id = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1450),
                            IsDeleted = false,
                            Name = "InternalControlCallOverSupervisor"
                        },
                        new
                        {
                            Id = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1451),
                            IsDeleted = false,
                            Name = "OperationControlOfficer"
                        },
                        new
                        {
                            Id = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1453),
                            IsDeleted = false,
                            Name = "OperationControlSupervisor"
                        },
                        new
                        {
                            Id = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1455),
                            IsDeleted = false,
                            Name = "InternalAuditee"
                        },
                        new
                        {
                            Id = new Guid("e4495bcf-454a-4f04-92e2-9cb02605db3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 3, 24, 0, 26, 36, 369, DateTimeKind.Utc).AddTicks(1456),
                            IsDeleted = false,
                            Name = "SuperAdmin"
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRoleMap", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoleMap", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("744e925b-6aa7-45fa-824c-0b505a04e20a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("744e925b-6aa7-45fa-824c-0b505a04e20a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("b241d596-f089-434b-a94c-16114c0a4b4b"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("5074d70a-7471-46a7-8064-605b9710ac74"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("5074d70a-7471-46a7-8064-605b9710ac74"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("5074d70a-7471-46a7-8064-605b9710ac74"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("068e132d-97ae-4ebe-88a1-2787c944be70"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("068e132d-97ae-4ebe-88a1-2787c944be70"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("aa8b94de-4efb-48ed-95f2-3efb1e980555"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("aa8b94de-4efb-48ed-95f2-3efb1e980555"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("53d973cc-d395-4789-8b8f-f394b2dd0b2f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("4ed59e86-27c2-4270-bc10-060676cec0a0"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("18d63e3e-1940-4f80-8c69-29bcc9392b80"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("c6492702-c4f5-4099-b360-be3d0f37180b"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("82d94cb6-6e22-476b-b8a2-a6c996636c73"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("82d94cb6-6e22-476b-b8a2-a6c996636c73"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("59a83afc-7720-4f57-bbea-80d8358f9b0d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("8e4a4569-dbae-4cec-a86b-d43bf743955e"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("3fc9a856-df88-4bc8-88b1-cf4b65f3928d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("7b13db39-3b27-4ddf-822e-c96a0514434e"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("fd313524-5a4f-4667-b2f9-219b64558435"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("a17fba1c-a1c8-47c1-b0fd-577aa740757a"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("8c5d8d3e-587b-4ad7-8333-5ff668390cf3"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("8c5d8d3e-587b-4ad7-8333-5ff668390cf3"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("86de4f7d-fe4c-4a54-a0bc-a894883424c5"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6")
                        },
                        new
                        {
                            UserId = new Guid("98fc4263-5311-4a1b-8889-aaf3541781e3"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("98fc4263-5311-4a1b-8889-aaf3541781e3"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6")
                        },
                        new
                        {
                            UserId = new Guid("219903d2-54d5-42e2-9916-1bd7420e1cc1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("eac59325-3b9c-4701-ac63-b4dc55d65872"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("eac59325-3b9c-4701-ac63-b4dc55d65872"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4")
                        },
                        new
                        {
                            UserId = new Guid("5438428c-8c2b-48bd-b1d1-2382c488ca9a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("5438428c-8c2b-48bd-b1d1-2382c488ca9a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("5438428c-8c2b-48bd-b1d1-2382c488ca9a"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4")
                        },
                        new
                        {
                            UserId = new Guid("ebcf8632-14fe-4c88-9684-93f01986a209"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("ebcf8632-14fe-4c88-9684-93f01986a209"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6")
                        },
                        new
                        {
                            UserId = new Guid("0668bb60-8c7a-4392-9a92-d1ec04924a48"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("39eab3e1-ec3c-4e46-b220-72f24a1a9b6a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("f0a8aaf4-89ae-4a13-bb10-e6f5104646bd"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("68b49eca-2285-46d4-8449-4cf78a8a730d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("be485a1a-1e6b-452d-a797-dd2dfe5a6902"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("62db3f26-b6bd-4a06-9a89-dc93c249c73d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("62db3f26-b6bd-4a06-9a89-dc93c249c73d"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("9435698f-d64b-413a-b334-f476bd3ed548"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("9435698f-d64b-413a-b334-f476bd3ed548"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("9e27a329-52f7-4004-8a1a-090ddcac29d0"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("9e27a329-52f7-4004-8a1a-090ddcac29d0"),
                            RoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8")
                        },
                        new
                        {
                            UserId = new Guid("04a192db-f039-49c7-bbc9-f7d7b4085ecd"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("04a192db-f039-49c7-bbc9-f7d7b4085ecd"),
                            RoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2")
                        },
                        new
                        {
                            UserId = new Guid("3d1dd8c9-46df-47d6-bfe5-e6707937301c"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("663cc78c-a538-4ca0-84a3-7d182e8c2292"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("663cc78c-a538-4ca0-84a3-7d182e8c2292"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("d8ed93b7-a3da-4745-ba17-486a11fe10df"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("703c42fa-406c-453c-b3cf-a2fb3ad354a1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("703c42fa-406c-453c-b3cf-a2fb3ad354a1"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("b64e0d40-6f17-4e47-a0be-6674b9b2ac18"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("5e902748-0188-405d-8a9b-cb3e22098d1b"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("5e902748-0188-405d-8a9b-cb3e22098d1b"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("00fecf89-bb70-4e62-a76b-cd1794d6a21f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980")
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6")
                        },
                        new
                        {
                            UserId = new Guid("6209fd2d-95d0-4927-9ada-460ecd424e54"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("3720bdd2-8bf3-4f07-80e1-89e087e7347d"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("73355329-e14d-4c0f-9836-ebf962a9298f"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("984b9023-c774-4e90-a16e-3af0aad05a3c"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("984b9023-c774-4e90-a16e-3af0aad05a3c"),
                            RoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c")
                        },
                        new
                        {
                            UserId = new Guid("57cda194-4fae-482d-a09f-43c397d373d1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("16473b29-42ad-4763-b1ef-11f0e02b3bca"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("0c0245d8-95bd-4c59-8518-2e6ec44685fc"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("7e265aed-6c39-4043-92b0-28f64a9c099d"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("dc3c4bd1-3d0a-4275-86a0-54d0a058b6df"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("dc3c4bd1-3d0a-4275-86a0-54d0a058b6df"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("dc3c4bd1-3d0a-4275-86a0-54d0a058b6df"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6")
                        },
                        new
                        {
                            UserId = new Guid("f19317cd-ef8b-425d-abcd-ee6f3f9bc2a8"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("8024d065-906b-4708-821c-1a2eb3aacae1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("8024d065-906b-4708-821c-1a2eb3aacae1"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("8024d065-906b-4708-821c-1a2eb3aacae1"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6")
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c")
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6")
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e")
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a")
                        },
                        new
                        {
                            UserId = new Guid("b57ffb70-5d09-4349-bbad-54eecfa9fbae"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("b57ffb70-5d09-4349-bbad-54eecfa9fbae"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a")
                        },
                        new
                        {
                            UserId = new Guid("b57ffb70-5d09-4349-bbad-54eecfa9fbae"),
                            RoleId = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e")
                        },
                        new
                        {
                            UserId = new Guid("53cc8c36-4366-45cc-b329-8d42b48ff515"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("53cc8c36-4366-45cc-b329-8d42b48ff515"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("0b0fdcae-d8af-4505-88b4-88e42f5e43ab"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("0b0fdcae-d8af-4505-88b4-88e42f5e43ab"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("15e02e42-4ad1-4f38-b074-10c9cdac4767"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("15e02e42-4ad1-4f38-b074-10c9cdac4767"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980")
                        },
                        new
                        {
                            UserId = new Guid("15e02e42-4ad1-4f38-b074-10c9cdac4767"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("0c093023-fb37-4f46-ada0-849afaae7f99"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("00670a0d-dbb5-4b9d-b7c1-ec77ced4f63b"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("d700564f-1a2f-4396-8f6f-e769eb6e7af8"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("404f4298-bfca-4709-b9d4-652509d7f604"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("d70df12b-96fd-46b2-ba74-7898b8cf828f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("1f3a321c-a151-400b-a619-dcebde93c73f"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("a8292054-64b5-48ee-8269-81c84c18f424"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("b15d21ae-9e86-4380-924d-d06662ce1e0e"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("414dc8d2-233b-443f-b7da-181aa1cadb3f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("414dc8d2-233b-443f-b7da-181aa1cadb3f"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c")
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c")
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("a33da7fb-c2d8-43ea-a5af-48df82c586a7"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            UserId = new Guid("d74a1b81-b74f-4cda-a602-c6d46c4d61e9"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("ea045141-2b65-497c-8b97-6ca1ecd8885e"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("ac871e3a-fb51-427a-83a3-54d3ccd726c0"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("ac871e3a-fb51-427a-83a3-54d3ccd726c0"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4")
                        },
                        new
                        {
                            UserId = new Guid("eeb105a0-8b43-4528-95ef-90c4efce1ee7"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("517580ef-82c5-43eb-aeb7-2a82eb2e8546"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("57c976a7-a9e0-4f31-bec1-99d5d290996e"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("57c976a7-a9e0-4f31-bec1-99d5d290996e"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6")
                        },
                        new
                        {
                            UserId = new Guid("ce6623a1-3821-460e-88c2-e5082838840e"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("ce6623a1-3821-460e-88c2-e5082838840e"),
                            RoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1")
                        },
                        new
                        {
                            UserId = new Guid("453e760b-1dee-4706-b2ea-f06826f46bac"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("6de1a7fc-b57e-4283-8e46-edea9631ce32"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1")
                        },
                        new
                        {
                            UserId = new Guid("6de1a7fc-b57e-4283-8e46-edea9631ce32"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6")
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", "ComplianceDepartment")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", "ComplianceRegulator")
                        .WithMany("ComplianceRules")
                        .HasForeignKey("ComplianceRegulatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceRegulator");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", "ComplianceRule")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("ComplianceRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceRule");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlAction", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InternalControl.InternalControlModel", "InternalControl")
                        .WithMany("Actions")
                        .HasForeignKey("InternalControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlActionOwner", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InternalControl.InternalControlAction", "InternalControlAction")
                        .WithMany("InternalControlActionOwners")
                        .HasForeignKey("InternalControlActionlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalControlAction");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOverReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InternalControl.InternalControlCallOver", "CallOver")
                        .WithMany("Reports")
                        .HasForeignKey("CallOverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallOver");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHILL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AssessmentOfDigitalInitiativeList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany()
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditAnnouncementMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("AuditFinding")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditPlanningMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("RFL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMCapitalRating", "ARMCapitalAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", "ARMHillAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMResearch", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", "ARMTAMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", "DigitalFinancialServiceAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("Citation")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithMany()
                        .HasForeignKey("AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMCapitalRating", "ComplianceARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", "ComplianceDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", "ComplianceBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", "ComplianceBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingResearch", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Customerexperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany()
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", "ConsolidatedAuditFinding")
                        .WithMany("ActionDetail")
                        .HasForeignKey("ConsolidatedAuditFindingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("EngagementLetterAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterAuditExecutionDuration")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterReportDistributionList")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessARMCapitalRating", "FinancialARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", "FinancialDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", "FinancialBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", "FinancialHillReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingResearch", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithMany("InformationRequirementAuditExecution")
                        .HasForeignKey("CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("InternalAuditRating")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithMany()
                        .HasForeignKey("CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithMany()
                        .HasForeignKey("ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernARMAgribusiness")
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMCapitalRating", "ManagementConcernARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitDFSRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitDFSRating", "ManagementConcernDFSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMCapitalRating", "ManagementConcernARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernARMSecurity")
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceDFSRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceDFSRating", "ManagementConcernDFSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ManagementResponse")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ObservationList")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapitalRating", "OperationARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", "OperationBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", "OperationDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", "OperationBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingResearch", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CorporateStrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDetailfindings", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ReportDetailfindings")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDistributionList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("DistributionList")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapitalRating", "StrategyARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", "StrategyBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", "StrategyDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", "StrategyBusinessRatingARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingResearch", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CorporateStrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", "ProductRiskAssessment")
                        .WithMany("ProductAssessRisks")
                        .HasForeignKey("ProductRiskAssementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductRiskAssessment");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BIAUnitProcessDetails")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", "BIAUnitProcessDetails")
                        .WithMany("BusinessUnitsToRunProcess")
                        .HasForeignKey("BIAUnitProcessDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", "BusinessImpactAnalysis")
                        .WithMany("BusinessImpactAnalysisUnits")
                        .HasForeignKey("BusinessImpactAnalysisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysis");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BusinessImpactAnalysisUnitLogs")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", "BusinessEntity")
                        .WithMany("Departments")
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessEntity");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", "RiskEventType")
                        .WithMany("RiskEventTypeCategories")
                        .HasForeignKey("RiskEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventType");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", "RiskEventTypeCategory")
                        .WithMany("RiskEventTypeSubCategories")
                        .HasForeignKey("RiskEventTypeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventTypeCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", "RiskControlSelfAssessmentUnit")
                        .WithOne("DocumentRSCAProcess")
                        .HasForeignKey("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "RiskControlSelfAssessmentUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessmentUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRSCAProcess")
                        .WithMany("DocumentRSCAProcessLogs")
                        .HasForeignKey("DocumentRSCAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRSCAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRCSAProcess")
                        .WithMany("ProcessInherentRiskControls")
                        .HasForeignKey("DocumentRCSAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRCSAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany("RSCAProcess")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", "RiskControlSelfAssessment")
                        .WithMany("RiskControlSelfAssessmentUnits")
                        .HasForeignKey("RiskControlSelfAssessmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessment");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", "RiskDriver")
                        .WithMany("RiskDriverCategories")
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriver");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", "RiskDriverCategory")
                        .WithMany("RiskDriverSubCategories")
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriverCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", null)
                        .WithMany()
                        .HasForeignKey("EffectCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", null)
                        .WithMany()
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", null)
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", null)
                        .WithMany()
                        .HasForeignKey("EventCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", null)
                        .WithMany()
                        .HasForeignKey("EventSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", null)
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Department", "Department")
                        .WithMany("Units")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AuditPlanningMemoAuditExecutionAuditPlanningMemoPlanningTimeline", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoPlanningTimeline", null)
                        .WithMany()
                        .HasForeignKey("AuditPlanningMemoAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", null)
                        .WithMany()
                        .HasForeignKey("AuditPlanningMemoAuditExecutionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuditProgramAuditExecutionCommenceEngagementAuditexecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", null)
                        .WithMany()
                        .HasForeignKey("AuditProgramAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", null)
                        .WithMany()
                        .HasForeignKey("CommenceEngagementAuditexecutionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.HasOne("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "WorkPaper")
                        .WithOne("AuditFindings")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", "WorkerPaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", "AuditProgramAuditExecution")
                        .WithOne("workPaper")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "AuditProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRoleMap", b =>
                {
                    b.HasOne("GrcApi.Modules.Shared.UserRole", "Role")
                        .WithMany("UserRoleMap")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrcApi.Modules.Shared.User", "User")
                        .WithMany("UserRoleMap")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");

                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Navigation("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlAction", b =>
                {
                    b.Navigation("InternalControlActionOwners");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOver", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlModel", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFL")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMCapital")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Navigation("workPaper")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Navigation("AuditAnnouncementMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("AuditPlanningMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution")
                        .IsRequired();

                    b.Navigation("InformationRequirementAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("Customerexperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Navigation("ActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHILL")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Navigation("EngagementLetterAuditExecutionDuration");

                    b.Navigation("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Navigation("AuditFinding");

                    b.Navigation("Citation");

                    b.Navigation("DistributionList");

                    b.Navigation("InternalAuditRating");

                    b.Navigation("ManagementResponse");

                    b.Navigation("ObservationList");

                    b.Navigation("ReportDetailfindings");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("CorporateStrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("CorporateStrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Navigation("ProductAssessRisks");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Navigation("BusinessUnitsToRunProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Navigation("BusinessImpactAnalysisUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("BusinessImpactAnalysisUnitLogs");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Navigation("RiskEventTypeCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Navigation("RiskEventTypeSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Navigation("DocumentRSCAProcessLogs");

                    b.Navigation("ProcessInherentRiskControls");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Navigation("RiskControlSelfAssessmentUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Navigation("DocumentRSCAProcess")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Navigation("RiskDriverCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Navigation("RiskDriverSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Navigation("RSCAProcess");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Navigation("AuditFindings")
                        .IsRequired();
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.Navigation("UserRoleMap");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Navigation("UserRoleMap");
                });
#pragma warning restore 612, 618
        }
    }
}
