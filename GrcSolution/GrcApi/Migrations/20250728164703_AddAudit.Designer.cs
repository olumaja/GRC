// <auto-generated />
using System;
using Arm.GrcApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrcApi.Migrations
{
    [DbContext(typeof(GrcToolDbContext))]
    [Migration("20250728164703_AddAudit")]
    partial class AddAudit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Arm.GrcApi.Modules.AntivirusAssessment.AntivirusAssessmentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AntivirusStatus")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AssessmentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InactiveSensorsStatus")
                        .HasColumnType("int");

                    b.Property<int>("InfosecFeedbackStatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProposeEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReducedFunctionalityModeStatus")
                        .HasColumnType("int");

                    b.Property<string>("RequesterEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TitleOfAssessment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AntivirusAssessmentModel");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.AntivirusAssessment.InactiveSensors", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Action")
                        .HasColumnType("int");

                    b.Property<string>("ActionOwnerComment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AntivirusAssessmentModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastSeenOnCrowdStrike")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastSeenOnManageEngine")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoggedOnUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MACAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SystemProductName")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AntivirusAssessmentModelId");

                    b.ToTable("InactiveSensors");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.AntivirusAssessment.ReducedFunctionalityMode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Action")
                        .HasColumnType("int");

                    b.Property<string>("ActionOwnerComment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AntivirusAssessmentModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComputerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastSeenOnCrowdStrike")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastSeenOnManageEngine")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoggedOnUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MACAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SystemVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AntivirusAssessmentModelId");

                    b.ToTable("ReducedFunctionalityMode");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessPhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CTO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfManagerOrMD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RCNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceBusines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8fda6fb-0e8a-4621-bae1-16f26d40f345"),
                            BusinessName = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 165, DateTimeKind.Local).AddTicks(8342),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c767a782-a495-4b96-988c-22e8e16c33d9"),
                            BusinessName = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 165, DateTimeKind.Local).AddTicks(8349),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("70c25108-c4c7-4221-b444-2a98bddbba7b"),
                            BusinessName = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 165, DateTimeKind.Local).AddTicks(8356),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("803dcb0e-6a10-4e3b-9c73-35f1c7c4a265"),
                            BusinessName = "ARM Capital Partner",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 165, DateTimeKind.Local).AddTicks(8358),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessId");

                    b.HasIndex("ComplianceDepartmentId");

                    b.ToTable("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("AttachmentCount")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirmToSubmit")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LevelStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameOfReport");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReportStatus")
                        .HasColumnType("int");

                    b.Property<int>("ResponseStatus")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceCalendar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceDepartment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9443293c-a893-41de-8317-264444c8bbc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3865),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("4c9b0a56-52dc-4b33-af2b-5c999308a0ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3873),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("4f52f84c-20cf-459e-8c9c-48d7072f30c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3874),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("da0bcbe0-9dad-4f4a-822f-3c0f9005cae8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3876),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("8f9dfe1b-0ca1-4722-b2a1-09609ee3bb0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3877),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2f10b305-b9da-4801-9188-133c042b276a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3878),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("d969cbf1-7f32-40bf-9e68-74f71a2d23d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3880),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("ebde322f-5df1-4af1-aeb8-870df4c58b3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3881),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("9686c1aa-690e-4efb-a6f0-e48c838ec238"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3882),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("766dfecd-8db0-4cc4-981e-43ae1f9f9265"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3883),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("c08f04f7-5e1c-42f9-8247-cb902cd62f49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3885),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("469e97db-72af-49ed-84dd-c11d425263cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3886),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("a8e77619-5129-4a88-b234-386f64840215"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3887),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("30c73a8b-1b74-4732-802d-e97b7ea2a404"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3888),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("037b9ff2-504e-404f-b329-8dffcc2c5e94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3890),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("113da9be-b174-48a0-98cf-7573f8f344f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3891),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("dc1ab4ae-db59-420b-aade-49c9c0225b21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3892),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("86b47b0a-c3e1-45b6-97ef-5dead8955745"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3894),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("4108d577-9409-498b-9822-bbdd9f9b1e6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3895),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("581ed77e-2e05-42fd-8b92-d001a96909a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3896),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("732911ea-38e8-4104-a9c9-8101c7ec2748"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3897),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("7cc52d32-76d1-4537-b418-7418d09f28f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3898),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("0b760d1e-9eb3-4758-93d8-beade293f5d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3899),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("48cc7b70-9efa-4125-b448-6a957d2041f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3900),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("51c62493-240a-4122-8ac8-ee1fe16e3ee2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3902),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8acebf76-21e6-4e74-9f8c-b0d1db9f3753"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3903),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("aa8efd00-7cc1-4fa6-b9e0-b24e06e8a0a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3904),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("f2b1a942-b22c-4c66-9929-513ba1867053"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3905),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("fad581c6-2f33-46de-b1c4-25d3873f23f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3906),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("a50412b5-65ff-4002-8da4-a45c5bf4bf2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3907),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("3d7857e6-8875-477f-a962-247326e2c92d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3908),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("dfc65214-67c8-47eb-aeeb-3146ae489e60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3910),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("eefa7c57-98b1-44f8-aba7-549399321114"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3912),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4fae7da7-6ddd-48d0-9400-1126815fb4d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3913),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("1e534470-a920-457d-b5d3-ca8882de81ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3914),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1c2370db-3244-4bf2-9b56-57d98bb3b5e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3915),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("1b5cbd9d-3a11-4ae2-8350-f208d37bcbb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3916),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("413c704d-af7b-4b17-bd98-9eea7b16ff03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3917),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("9e94023e-ce76-490c-8f1f-e46f4117b1a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3919),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d071e04-9a34-4c6b-aaa0-ef9f11470990"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3920),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("8ef60bcb-a795-4141-bab6-38e5863e14a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3921),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("c3de97f2-ef7c-40ad-94ef-f88738c71c07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3930),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("1ac36092-da7b-4b32-bdac-a97fc23164cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3931),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4e7f8112-d6bf-4619-b41e-236fba1eb541"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3933),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("93427ce2-6640-44ed-a078-320ac73e4dc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3934),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("9ae1d479-e587-4d46-95ba-b8e72851fc75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3935),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("199f9de0-d08b-47eb-a96a-5b2526eb31ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3936),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("022aa7d5-7c0a-4fb3-9c8d-ff2278b289fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3937),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("3ddc0333-f27a-4ced-9599-6ef1ee92c3c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3938),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("affceba9-38dc-4e5f-afb0-8b2d9edf5efa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3940),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("97c9b380-ad8f-4f41-944b-dc37b82fe85f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3941),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("5e885e75-f8b3-4b3a-9017-b2e7a1122d83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3942),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2fd39529-b005-4293-8b8f-12ed3ff87807"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3943),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("7165d5c6-dc08-4471-99b9-4c60dd76ec8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3944),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("a66bea4e-f461-476f-9af7-61a91c69af99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3945),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("55772580-4c93-435d-8c31-685b80b9bd3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3946),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("dd059d83-0706-425f-aa33-c8d32294f7b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3947),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("58662c2e-5a9c-43f8-8d42-fc2e93a50eb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3948),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("040acaf6-ccdc-4302-bae9-95bbe7175fa7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3949),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("f155216a-9fc1-4d29-ac25-060c116d0e1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3950),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("9d10fb74-ed81-42ec-a109-072ca0ddfde3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3952),
                            IsDeleted = false,
                            Name = "Securities Operations "
                        },
                        new
                        {
                            Id = new Guid("f0748176-df02-49af-8565-520f9c59c9a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3953),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("5203f4dc-ab02-4dc8-85b1-b293ff9ffcbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3954),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("82355662-28d3-45c9-bbf4-51be40c368d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3955),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("80921fb2-5762-4149-98a1-7a990efb2428"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3956),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("da9c707e-ff33-455b-973e-ff2928d41aca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3957),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("ca9277c7-59d1-4f5f-adbf-bd036440e602"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3958),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("e98b0111-935c-41ba-bfed-00ae9ce3814f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3960),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("193306a0-16ce-4c4b-99a1-8765a8032cac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3961),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("f8360ffe-e1be-4d14-99a8-db3a2e840f41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3962),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("9cb7a2c2-4d91-47c1-9c6f-17540afa0c44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 166, DateTimeKind.Local).AddTicks(3963),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegulatorTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulator");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20b7b8e7-ebfb-4e30-a35c-ef0cc4878188"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8316),
                            IsDeleted = false,
                            RegulatorTitle = "LABOUR ACT"
                        },
                        new
                        {
                            Id = new Guid("3454dc14-648d-4c68-8279-0b82585618ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8326),
                            IsDeleted = false,
                            RegulatorTitle = "PENSION REFORM ACT 2004"
                        },
                        new
                        {
                            Id = new Guid("885c060b-eea9-4d86-b163-f28c60e66736"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8328),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES AND ALLIED MATTERS ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("a28cac7e-cbe2-4950-83ad-cbadc060c86c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8330),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHOLDING TAX) REGULATIONS 1977"
                        },
                        new
                        {
                            Id = new Guid("c83f0df5-a41b-4296-a185-14b423473122"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8332),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("92508225-4b55-4fd1-b32c-e069d107a554"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8333),
                            IsDeleted = false,
                            RegulatorTitle = "EMPLOYEES COMPENSATION ACT"
                        },
                        new
                        {
                            Id = new Guid("1ad9ae19-60ce-4712-84dc-fe55e1b88c3b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8341),
                            IsDeleted = false,
                            RegulatorTitle = "FINANCIAL REPORTINNG COUNCIL OF NIGERIA ACT 2011"
                        },
                        new
                        {
                            Id = new Guid("f3eab0ba-f3fd-4e89-8716-ab23699e1159"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8343),
                            IsDeleted = false,
                            RegulatorTitle = "INVESTMENT & SECURITIES ACT 2007"
                        },
                        new
                        {
                            Id = new Guid("9171c80a-d862-4254-b6e7-a488124a2979"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8345),
                            IsDeleted = false,
                            RegulatorTitle = "NATIONAL YOUTH SERVICE CORPS ACT"
                        },
                        new
                        {
                            Id = new Guid("1b244041-2bfb-4158-8251-6599f66d3302"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8346),
                            IsDeleted = false,
                            RegulatorTitle = "PAY AS YOU EARN (PAYE)"
                        },
                        new
                        {
                            Id = new Guid("c5dae39f-b49d-4a24-86f4-e83544fc5e47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8348),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHHOLDING TAX REGULATION) 1997"
                        },
                        new
                        {
                            Id = new Guid("57c7047e-c1c5-4323-9b26-72d8560499f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8351),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("2163d6c4-f924-4698-839f-654ec59e7284"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8352),
                            IsDeleted = false,
                            RegulatorTitle = "VALUE ADDED TAX LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("bf3b070f-2883-40ea-b573-cecabbeb77f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8354),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON MINIMUM REQUIREMENTS FOR OPENING BRANCHES"
                        },
                        new
                        {
                            Id = new Guid("43cf07e6-8956-4b21-9b13-4d931e6a77b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8357),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON PAYMENT OF ACCRUED PRE-PENSION REFORM BENEFITS MAY 2011"
                        },
                        new
                        {
                            Id = new Guid("59138bb0-e094-48eb-b5ec-4cd2aa3f9db3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8359),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON REQUIREMENTS FOR PFAs WITH FUNDS UNDER MANAGEMENT OF N100 BILLION & ABOVE AND NEW REQUIREMENTS FOR APPOINTMENTS TO BOARD AND TOP MANAGEMENT POSITIONS OF ALL PFAs"
                        },
                        new
                        {
                            Id = new Guid("10de3a4e-49f8-4e67-a513-6219d087e747"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8361),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON SERVICE DELIVERY BY PENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("189a4456-930e-4a59-b721-b698d448775c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8362),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON STANDARDIZATION OF ANNUAL TOTAL EMOLUMENTS FOR THE COMPUTATION OF RETIREMENT BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("191ca6ae-a827-4b40-8798-af53ff64e14f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8364),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON THE IMPORTANCE OF TRAINING FOR STAFF OF PENSION FUND OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("17488d81-13f9-4cf1-bfb9-931191142061"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8365),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF CORPORATE GOVERNANCE"
                        },
                        new
                        {
                            Id = new Guid("bf3c448d-5602-4aa9-b94e-3e36cdcb337b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8367),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF ETHICS & BUSINESS PRACTICES"
                        },
                        new
                        {
                            Id = new Guid("12418cf1-0592-49ac-96b2-eb27bf63ca96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8368),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINE FOR APPOINTMENT TO BOARD AND TOP MANAGEMENT POSITIONS IN PFAs AND PFCs"
                        },
                        new
                        {
                            Id = new Guid("3e58ddd8-da9b-47b5-800c-f97a606c438f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8371),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR CROSS BOARDER ARRANGEMENTS UNDER PENSION REFORM ACT"
                        },
                        new
                        {
                            Id = new Guid("9b6f45a5-744b-43eb-aaf5-5dcc65974fa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8373),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR LIFE INSURANCE POLICY FOR EMPLOYEES"
                        },
                        new
                        {
                            Id = new Guid("f3e71ebf-7fcf-4af3-90ed-332de74e9601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8375),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR RISK MANAGEMENT FRAMEWORK FOR LICENSED OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("596f7f2e-0e82-46ff-b11e-7b8a27e03983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8376),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE ADMINISTRATION OF STATE FUNDS DEDUCTED AT SOURCE UNDER THE CONTRIBUTORY PENSION SCHEME"
                        },
                        new
                        {
                            Id = new Guid("ed229bfb-b639-401f-95f8-a267adceefff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8378),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND ADMINISTRATORS AND CUSTODIANS FOR EXISTING PENSION SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("2a93b173-23a6-4530-b447-98b1ce499bf7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8380),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND CUSTODIANS FOR STATE GOVERNMENT AND RETIREE FUNDS"
                        },
                        new
                        {
                            Id = new Guid("91525b64-1cb5-42e9-82eb-034ed057d7e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8381),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION FUND CUSTODIANS"
                        },
                        new
                        {
                            Id = new Guid("30c07d3f-8f36-41de-87e9-bc1071d434d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8383),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION TRANSITIONAL ARRANGEMENT DEPARTMENTS"
                        },
                        new
                        {
                            Id = new Guid("9deda427-c40d-4e08-9cba-227444dedbde"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8386),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PFAS"
                        },
                        new
                        {
                            Id = new Guid("a55cdcc2-aef2-40bb-97ed-97ed0cd31909"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8388),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE PUBLICATION OF RATES OF RETURN ON RSA FUNDS BYPENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("27688539-e496-4a50-89a8-8b842aeacfd9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8389),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE TRANSFER OF NSITF CONTRIBUTIONS INTO EMPLOYEES RETIREMENT SAVINGS ACCOUNT"
                        },
                        new
                        {
                            Id = new Guid("6abca7e0-03cf-40f8-831e-1f3503322e42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8391),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR TRANSITIONAL CONTRIBUTIONS FUND"
                        },
                        new
                        {
                            Id = new Guid("21c301ca-73a5-4def-800b-27987416b42c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8393),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON DIRECT REAL ESTATE INVESTMENTS BY CLOSED PENSION FUND ADMINISTRATORS AND APPROVED EXISTING SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("0902e170-5fc5-49ca-9e31-9da612ed2547"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8394),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON FUND ACCOUNTING"
                        },
                        new
                        {
                            Id = new Guid("63d58047-074e-439a-b244-b50a2d216c88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8396),
                            IsDeleted = false,
                            RegulatorTitle = "INCLUSION OF GROUP LIFE INSURANCE POLICY FOR EMPLOYEES: FURTHER STEPS TO IMPROVE COMPLIANCE"
                        },
                        new
                        {
                            Id = new Guid("3d03d9e4-4026-41f4-98e0-ee15d5d37907"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8397),
                            IsDeleted = false,
                            RegulatorTitle = "MINIMUM INFORMATION TO BE POSTED ON A PFAs WEBSITE"
                        },
                        new
                        {
                            Id = new Guid("5c923578-67d4-4e86-ae34-a28036056a7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8400),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATION ON INVESTMENT OF PENSION FUND ASSETS"
                        },
                        new
                        {
                            Id = new Guid("66ad68b7-2f5e-4be4-9f7c-e30695022ded"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8402),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR AUDITING PENSION FUNDS"
                        },
                        new
                        {
                            Id = new Guid("e7563613-5933-4c0a-bded-728e3e2b9835"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8410),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR THE ADMINISTRATION OF RETIREMENT AND TERMINAL BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("53e6317c-f579-4ca4-a6dd-77dce9473d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8412),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS ON COMPLIANCE OFFICERS"
                        },
                        new
                        {
                            Id = new Guid("594b2f82-13d1-4a70-b45a-47b85daffb8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8413),
                            IsDeleted = false,
                            RegulatorTitle = "SECURITIES AND EXCHANGE COMMISSION RULES AND REGULATIONS 2013"
                        },
                        new
                        {
                            Id = new Guid("d72c7077-df45-4f41-95b2-b1f48a25de30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 168, DateTimeKind.Local).AddTicks(8415),
                            IsDeleted = false,
                            RegulatorTitle = "WHISTLE BLOWING GUIDELINES FOR PENSIONS"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulatoryPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessEntity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComplianceLevel")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initiator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeansOfPaymentAmount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentAttachmentCount")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Regulator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulatoryPayment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRegulatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deadline")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Heading")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuesOrFillingOrReturn")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Penalty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Responsibilities")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceRegulatorId");

                    b.ToTable("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("ComplianceRuleId");

                    b.ToTable("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.ComplianceStatutoryPayment.ComplianceStatutoryPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessEntity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CashRemittanceStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComplianceLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initiator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayingUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentFrequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatutoryPayment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubmissionToStatutoryBody")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceStatutoryPayment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.CASPLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Application")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObjectIdentifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleStaff")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceDevice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("CASPLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.DAMLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigurationDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationObject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationIpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaliciousReputation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NATIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NATPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourcePort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserAuthorized")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("DAMLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.DLPLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionTaken")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DLPPolicy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DLPRuleAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DLPRuleMatch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponsibleStaff")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("DLPLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.EDRLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionTakenByUs")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileHash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Severity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Technique")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("EDRLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.FIMLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigurationDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationObject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationIpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaliciousReputation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NATIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NATPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourcePort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("FIMLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.IncidentManagementLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwnerComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("ActionOwnerCommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwnerEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AssetDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfClosure")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfReporting")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfActionTaken")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DescriptionOfIncident")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("IncidentTag")
                        .HasColumnType("int");

                    b.Property<string>("InfoSecRecommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("InfoSecStaffCommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InfoSecStaffEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InfoSecStaffName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LessonLearnt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecommendationToPreventFutureReoccurence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportingStaff")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportingStaffComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("ReportingStaffCommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportingStaffEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportingUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RootCause")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("SecurityArea")
                        .HasColumnType("int");

                    b.Property<string>("SecurityAreas")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SecurityIncident")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfAsset")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IncidentManagementLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.LogManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwnerRemarks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionOwnerUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionownerEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionownerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessJustification")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAlertGenerated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InfoSecRemarks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent1DayToProposedEndDate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent1WkToProposedEndDate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent3DaysToProposedEndDate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSentOnTheProposedEndDate")
                        .HasColumnType("bit");

                    b.Property<int>("LogType")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProposeEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserApprovalObtained")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.PAMLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorrectiveActionCarriedOut")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatecarriedOut")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IncidentDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("PAMLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.SIEMLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigurationDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationObject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationIpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaliciousReputation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NATIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NATPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourcePort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("SIEMLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.Annexture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Annexture");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac45486e-8579-468f-9fbb-24daa710db3c"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7604),
                            IsDeleted = false,
                            Name = "A.5.1 Policies for Information Security"
                        },
                        new
                        {
                            Id = new Guid("0c26b54f-b650-428f-b6c6-d6f62d82ae80"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7628),
                            IsDeleted = false,
                            Name = "A.5.2 Information Security Roles and Responsibilities"
                        },
                        new
                        {
                            Id = new Guid("5c34e4cb-19a7-4a6e-9d37-f1ee65f5a710"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7631),
                            IsDeleted = false,
                            Name = "A.5.3 Segregation of Duties"
                        },
                        new
                        {
                            Id = new Guid("b71927b2-e397-4cd0-a5eb-7e95036e152f"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7633),
                            IsDeleted = false,
                            Name = "A.5.4 Management Responsibilities"
                        },
                        new
                        {
                            Id = new Guid("81d5ccc7-3b5e-4e6f-8233-47a6e89f933b"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7635),
                            IsDeleted = false,
                            Name = "A.5.5 Contact with Authorities"
                        },
                        new
                        {
                            Id = new Guid("0efb757a-d37e-46e2-a1e3-e995500b0255"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7636),
                            IsDeleted = false,
                            Name = "A.5.6 Contact with Special Interest Groups"
                        },
                        new
                        {
                            Id = new Guid("a0398302-909b-4f2e-86d9-a87fab47c232"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7638),
                            IsDeleted = false,
                            Name = "A.5.7 Threat Intelligence"
                        },
                        new
                        {
                            Id = new Guid("67c69b44-7ef6-46c4-990a-716a479441a3"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7639),
                            IsDeleted = false,
                            Name = "A.5.8 Information Security in Project Management"
                        },
                        new
                        {
                            Id = new Guid("5d71e6f1-cb9f-40d5-97b6-9a4ba0a7c255"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7646),
                            IsDeleted = false,
                            Name = "A.5.9 Inventory of Information and Other Associated Assets"
                        },
                        new
                        {
                            Id = new Guid("edb9018b-b2ec-4d1f-aafd-178ff76a19e9"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7650),
                            IsDeleted = false,
                            Name = "A.5.10 Acceptable Use of Information and Other Associated Assets"
                        },
                        new
                        {
                            Id = new Guid("5518d071-3f94-45aa-b5fe-b873fa145835"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7652),
                            IsDeleted = false,
                            Name = "A.5.11 Return of Assets"
                        },
                        new
                        {
                            Id = new Guid("b0b76105-a212-4fe3-8a17-8bf9f6ce54ea"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7653),
                            IsDeleted = false,
                            Name = "A.5.12 Classification of Information"
                        },
                        new
                        {
                            Id = new Guid("cb4e42a6-c4fc-4c37-a6f8-959c47034d2b"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7655),
                            IsDeleted = false,
                            Name = "A.5.13 Labelling of Information"
                        },
                        new
                        {
                            Id = new Guid("c12f9698-cdde-40ad-a114-df0c70fc39b9"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7656),
                            IsDeleted = false,
                            Name = "A.5.14 Information Transfer"
                        },
                        new
                        {
                            Id = new Guid("342f41af-3ac2-48d8-8981-cd1fb8426085"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7658),
                            IsDeleted = false,
                            Name = "A.5.15 Access Control"
                        },
                        new
                        {
                            Id = new Guid("8062c03b-d329-48fa-910f-0c89823e4aac"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7659),
                            IsDeleted = false,
                            Name = "A.5.16 Identity Management"
                        },
                        new
                        {
                            Id = new Guid("74d88139-6018-45dc-902c-abab66797e14"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7661),
                            IsDeleted = false,
                            Name = "A.5.17 Authentication Information"
                        },
                        new
                        {
                            Id = new Guid("b02c6548-62f9-4c4e-a80c-e5b14c2950cd"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7668),
                            IsDeleted = false,
                            Name = "A.5.18 Access Rights"
                        },
                        new
                        {
                            Id = new Guid("c442387d-36a6-4227-b17b-e229912c2a79"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7680),
                            IsDeleted = false,
                            Name = "A.5.19 Information Security in Supplier Relationships"
                        },
                        new
                        {
                            Id = new Guid("bafef079-1a53-46af-b955-3e8b77a0569f"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7682),
                            IsDeleted = false,
                            Name = "A.5.20 Addressing Information Security within Supplier Agreements"
                        },
                        new
                        {
                            Id = new Guid("0365fade-3c4d-4e5e-85bf-a4e23cc249d1"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7683),
                            IsDeleted = false,
                            Name = "A.5.21 Managing Information Security in the ICT Supply Chain"
                        },
                        new
                        {
                            Id = new Guid("d0d0b293-09a2-4ccf-bcbf-9bde376b8067"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7685),
                            IsDeleted = false,
                            Name = "A.5.22 Monitoring, Review, and Change Management of Supplier Services"
                        },
                        new
                        {
                            Id = new Guid("5586f93b-ab8c-4af8-aa08-2ab7e578a6a5"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7686),
                            IsDeleted = false,
                            Name = "A.5.24 Information Security Incident Management Planning and Preparation"
                        },
                        new
                        {
                            Id = new Guid("a3d07ed3-2622-4310-9685-a6dae9755759"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7688),
                            IsDeleted = false,
                            Name = "A.5.25 Assessment and Decision on Information Security Events"
                        },
                        new
                        {
                            Id = new Guid("23594615-35e3-44ce-8f15-a6d7e5354a87"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7690),
                            IsDeleted = false,
                            Name = "A.5.26 Response to Information Security Incidents"
                        },
                        new
                        {
                            Id = new Guid("1a22f98d-725d-44a3-a728-5c42a8c387df"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7693),
                            IsDeleted = false,
                            Name = "A.5.27 Learning from Information Security Incidents"
                        },
                        new
                        {
                            Id = new Guid("7d243537-ff5e-4eed-99b4-1e510bb9a17b"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7695),
                            IsDeleted = false,
                            Name = "A.5.28 Collection of Evidence"
                        },
                        new
                        {
                            Id = new Guid("3fbd8208-357a-406e-b06b-eb5e167c1c11"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7696),
                            IsDeleted = false,
                            Name = "A.5.29 Information Security during Disruption"
                        },
                        new
                        {
                            Id = new Guid("5651fd80-618b-4707-9a31-25dbe2700e22"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7698),
                            IsDeleted = false,
                            Name = "A.5.30 ICT Readiness for Business Continuity"
                        },
                        new
                        {
                            Id = new Guid("ad82bbee-2e64-4e90-833e-0c19cedc0528"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7704),
                            IsDeleted = false,
                            Name = "A.5.31 Legal, Statutory, Regulatory, and Contractual Requirements"
                        },
                        new
                        {
                            Id = new Guid("18a961fc-826e-435f-97e7-642f6975a317"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7705),
                            IsDeleted = false,
                            Name = "A.5.32 Intellectual Property Rights"
                        },
                        new
                        {
                            Id = new Guid("c62df7de-cc2d-4c1a-a61c-d9964d0ce9f4"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7707),
                            IsDeleted = false,
                            Name = "A.5.33 Protection of Records"
                        },
                        new
                        {
                            Id = new Guid("2d1208b2-edfd-4742-87b3-6aa9de11531d"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7708),
                            IsDeleted = false,
                            Name = "A.5.34 Privacy and Protection of PII"
                        },
                        new
                        {
                            Id = new Guid("d5750f4c-ad57-49ab-8c2f-0d66e597f831"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7712),
                            IsDeleted = false,
                            Name = "A.5.35 Independent Review of Information Security"
                        },
                        new
                        {
                            Id = new Guid("72765e26-2f71-401d-b459-95a5d4c0011c"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7713),
                            IsDeleted = false,
                            Name = "A.5.36 Compliance with Policies, Rules, and Standards for Information Security"
                        },
                        new
                        {
                            Id = new Guid("9130c0b2-5654-49b5-86b1-e1c9c635e53f"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7715),
                            IsDeleted = false,
                            Name = "A.5.37 Documented Operating Procedures"
                        },
                        new
                        {
                            Id = new Guid("031f02f1-12c7-4a3c-b778-f3e80e0a6168"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7716),
                            IsDeleted = false,
                            Name = "A.6.1 Screening"
                        },
                        new
                        {
                            Id = new Guid("c30eec80-8844-4364-bcb8-57065459ccd5"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7718),
                            IsDeleted = false,
                            Name = "A.6.2 Terms and Conditions of Employment"
                        },
                        new
                        {
                            Id = new Guid("fa79fc03-3f54-4686-b8cd-e352f9eb0391"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7719),
                            IsDeleted = false,
                            Name = "A.6.3 Information Security Awareness, Education, and Training"
                        },
                        new
                        {
                            Id = new Guid("440f05b0-7c7f-4e55-ad1a-3d5afb85be0f"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7720),
                            IsDeleted = false,
                            Name = "A.6.4 Disciplinary Process"
                        },
                        new
                        {
                            Id = new Guid("13beb7a5-0a04-4320-b13c-814153c43060"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7722),
                            IsDeleted = false,
                            Name = "A.6.5 Responsibilities after Termination or Change of Employment"
                        },
                        new
                        {
                            Id = new Guid("62f637bf-01be-4b55-b6de-447d6579b16b"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7725),
                            IsDeleted = false,
                            Name = "A.6.6 Confidentiality or Non-disclosure Agreements"
                        },
                        new
                        {
                            Id = new Guid("3bfa46d2-256a-4089-a0da-92836626653a"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7727),
                            IsDeleted = false,
                            Name = "A.6.7 Remote Working"
                        },
                        new
                        {
                            Id = new Guid("f5b9d0d2-39f3-4009-9228-db2f674a1c55"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7728),
                            IsDeleted = false,
                            Name = "A.6.8 Information Security Event Reporting"
                        },
                        new
                        {
                            Id = new Guid("9fa14c05-dc41-477b-afca-84520caaf2a9"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7729),
                            IsDeleted = false,
                            Name = "A.7.1 Physical Security Perimeters"
                        },
                        new
                        {
                            Id = new Guid("8e56bdd4-20c9-4fce-bfb0-6e4f5ea5e438"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7731),
                            IsDeleted = false,
                            Name = "A.7.2 Physical Entry"
                        },
                        new
                        {
                            Id = new Guid("b68a412e-0f52-4fb9-b6b0-52a34471cba8"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7732),
                            IsDeleted = false,
                            Name = "A.7.3 Securing Offices, Rooms, and Facilities"
                        },
                        new
                        {
                            Id = new Guid("91af5609-eeac-44b8-97d9-c9c169c2ccfa"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7734),
                            IsDeleted = false,
                            Name = "A.7.4 Physical Security Monitoring"
                        },
                        new
                        {
                            Id = new Guid("24de8a04-cb07-419b-b455-f3e3be4990b1"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7735),
                            IsDeleted = false,
                            Name = "A.7.5 Protecting Against Physical and Environmental Threats"
                        },
                        new
                        {
                            Id = new Guid("e53917d5-f5a2-4623-aff2-79828197d43c"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7738),
                            IsDeleted = false,
                            Name = "A.7.6 Working in Secure Areas"
                        },
                        new
                        {
                            Id = new Guid("e11dfe71-1b18-41ec-95b2-ffe1258b369b"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7740),
                            IsDeleted = false,
                            Name = "A.7.7 Clear Desk and Clear Screen"
                        },
                        new
                        {
                            Id = new Guid("d77e0731-e007-4c62-a3ed-a748b06b328e"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7741),
                            IsDeleted = false,
                            Name = "A.7.8 Equipment Siting and Protection"
                        },
                        new
                        {
                            Id = new Guid("c38f4b0d-8f41-4e92-aa98-6a84dd1d2251"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7743),
                            IsDeleted = false,
                            Name = "A.7.9 Security of Assets Off-Premises"
                        },
                        new
                        {
                            Id = new Guid("e53ca697-dba5-4c5d-913f-fe5a987d57f3"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7745),
                            IsDeleted = false,
                            Name = "A.7.10 Storage Media"
                        },
                        new
                        {
                            Id = new Guid("647fff81-e207-49b4-b2a3-a577803af7e6"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7746),
                            IsDeleted = false,
                            Name = "A.7.11 Supporting Utilities"
                        },
                        new
                        {
                            Id = new Guid("30cfc72f-7377-400b-96e8-2494597e30ab"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7756),
                            IsDeleted = false,
                            Name = "A.7.12 Cabling Security"
                        },
                        new
                        {
                            Id = new Guid("a4086ebc-44e7-48ce-83c3-c8633fe84346"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7757),
                            IsDeleted = false,
                            Name = "A.7.13 Equipment Maintenance"
                        },
                        new
                        {
                            Id = new Guid("197185f0-3071-4a92-bbe8-eb7efb69fdde"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7761),
                            IsDeleted = false,
                            Name = "A.7.14 Secure Disposal or Re-use of Equipment"
                        },
                        new
                        {
                            Id = new Guid("8fd5eec3-a904-42ab-adac-a6b8f51d9f05"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7762),
                            IsDeleted = false,
                            Name = "A.8.1 User Endpoint Devices"
                        },
                        new
                        {
                            Id = new Guid("aa9aa89a-0f17-43c6-a841-ffa783ce58c8"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7764),
                            IsDeleted = false,
                            Name = "A.8.2 Privileged Access Rights"
                        },
                        new
                        {
                            Id = new Guid("34b0e48a-d2bb-4521-841c-a888b5eead61"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7765),
                            IsDeleted = false,
                            Name = "A.8.3 Information Access Restriction"
                        },
                        new
                        {
                            Id = new Guid("3f2ec051-1aaf-45de-807f-e1fcb9a521cf"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7766),
                            IsDeleted = false,
                            Name = "A.8.4 Access to Source Code"
                        },
                        new
                        {
                            Id = new Guid("a21b993c-546a-40ea-a6fe-27fb722d5446"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7768),
                            IsDeleted = false,
                            Name = "A.8.5 Secure Authentication"
                        },
                        new
                        {
                            Id = new Guid("cc1092d4-8f57-468d-89f7-7179216cad94"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7770),
                            IsDeleted = false,
                            Name = "A.8.6 Capacity Management"
                        },
                        new
                        {
                            Id = new Guid("8078b936-021d-4a76-b706-8e1cd46dd4e1"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7771),
                            IsDeleted = false,
                            Name = "A.8.7 Protection Against Malware"
                        },
                        new
                        {
                            Id = new Guid("a2f90c6e-e710-4740-adae-4e2f980a308a"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7774),
                            IsDeleted = false,
                            Name = "A.8.8 Management of Technical Vulnerabilities"
                        },
                        new
                        {
                            Id = new Guid("d56c6d2a-22d9-4d67-b343-1eb067aa0efc"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7776),
                            IsDeleted = false,
                            Name = "A.8.9 Configuration Management"
                        },
                        new
                        {
                            Id = new Guid("7ba55426-ab74-42b8-bbd9-7af8d76bb55f"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7777),
                            IsDeleted = false,
                            Name = "A.8.10 Information Deletion"
                        },
                        new
                        {
                            Id = new Guid("22445818-ef3b-4ae6-aa17-42b39703502b"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7779),
                            IsDeleted = false,
                            Name = "A.8.11 Data Masking"
                        },
                        new
                        {
                            Id = new Guid("60e73b34-b4e5-4c40-bd19-a9d70fb86bc2"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7780),
                            IsDeleted = false,
                            Name = "A.8.12 Data Leakage Prevention"
                        },
                        new
                        {
                            Id = new Guid("e02e3770-8207-48d5-afeb-81fcee41f8ee"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7782),
                            IsDeleted = false,
                            Name = "A.8.13 Information Backup"
                        },
                        new
                        {
                            Id = new Guid("b0b58706-b882-4afd-90a6-4e50050ce6ac"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7783),
                            IsDeleted = false,
                            Name = "A.8.14 Redundancy of Information Processing Facilities"
                        },
                        new
                        {
                            Id = new Guid("eccea2eb-cfd2-4486-b045-5d0ed5069b4c"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7785),
                            IsDeleted = false,
                            Name = "A.8.15 Logging"
                        },
                        new
                        {
                            Id = new Guid("631c7930-0f74-41a9-b609-6c23acdc5e18"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7788),
                            IsDeleted = false,
                            Name = "A.8.16 Monitoring Activities"
                        },
                        new
                        {
                            Id = new Guid("ab878cdc-0a61-4815-90f9-dc7844d1935a"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7790),
                            IsDeleted = false,
                            Name = "A.8.17 Clock Synchronization"
                        },
                        new
                        {
                            Id = new Guid("5e6a0550-8440-4a8e-af9d-8ebaeef7befe"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7791),
                            IsDeleted = false,
                            Name = "A.8.18 Use of Privileged Utility Programs"
                        },
                        new
                        {
                            Id = new Guid("c3a6c745-bec9-4b52-8c37-6c1c2196d9fb"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7792),
                            IsDeleted = false,
                            Name = "A.8.19 Installation of Software on Operational Systems"
                        },
                        new
                        {
                            Id = new Guid("f8a2ce43-ec8e-4f30-a732-b313ae441940"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7794),
                            IsDeleted = false,
                            Name = "A.8.20 Network Security"
                        },
                        new
                        {
                            Id = new Guid("abdba944-bc56-4bb3-b780-5f0be5ab50bf"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7795),
                            IsDeleted = false,
                            Name = "A.8.21 Security of Network Services"
                        },
                        new
                        {
                            Id = new Guid("aee25f20-2267-4eb1-bcac-4d9ebc3764e0"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7797),
                            IsDeleted = false,
                            Name = "A.8.22 Segregation of Networks"
                        },
                        new
                        {
                            Id = new Guid("5df02208-099c-4916-b0c4-adc8870725ca"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7798),
                            IsDeleted = false,
                            Name = "A.8.23 Web Filtering"
                        },
                        new
                        {
                            Id = new Guid("592aec8e-070c-4646-8974-33866e4e0221"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7802),
                            IsDeleted = false,
                            Name = "A.8.25 Secure Development Life Cycle"
                        },
                        new
                        {
                            Id = new Guid("3eb9f678-02df-4230-b57e-3bed61c6d4c2"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7804),
                            IsDeleted = false,
                            Name = "A.8.26 Application Security Requirements"
                        },
                        new
                        {
                            Id = new Guid("152d511d-f82e-4ae6-bc05-2fab7e568856"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7805),
                            IsDeleted = false,
                            Name = "A.8.27 Secure System Architecture and Engineering Principles"
                        },
                        new
                        {
                            Id = new Guid("0b9a3afb-c070-49aa-a0bd-59cf4cf7f5af"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7807),
                            IsDeleted = false,
                            Name = "A.8.28 Secure Coding"
                        },
                        new
                        {
                            Id = new Guid("c487c724-041e-4c8a-92b0-7fae9b744afc"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7812),
                            IsDeleted = false,
                            Name = "A.8.29 Security Testing in Development and Acceptance"
                        },
                        new
                        {
                            Id = new Guid("d9eecaeb-879b-4bef-8a97-87a54573a2cf"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7814),
                            IsDeleted = false,
                            Name = "A.8.30 Outsourced Development"
                        },
                        new
                        {
                            Id = new Guid("87fa2237-ef81-4ebc-9eea-4bb9b780e059"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7815),
                            IsDeleted = false,
                            Name = "A.8.31 Separation of Development, Test, and Production Environments"
                        },
                        new
                        {
                            Id = new Guid("2fd07e01-912d-4f6d-9a0e-60d529db65d6"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7817),
                            IsDeleted = false,
                            Name = "A.8.32 Change Management"
                        },
                        new
                        {
                            Id = new Guid("a1225816-8d4c-423d-b09e-837d471086e4"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7820),
                            IsDeleted = false,
                            Name = "A.8.33 Test Information"
                        },
                        new
                        {
                            Id = new Guid("11e035b2-088e-4602-beb8-84cbd50a5142"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 73, DateTimeKind.Local).AddTicks(7821),
                            IsDeleted = false,
                            Name = "A.8.34 Protection of Information Systems during Audit Testing"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.ExistingPrimaryControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InfosecRiskAssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InfosecRiskAssessmentId");

                    b.ToTable("ExistingPrimaryControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.ExistingPrimaryControlAnnexture", b =>
                {
                    b.Property<Guid>("AnnextureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExistingPrimaryControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("AnnextureId", "ExistingPrimaryControlId");

                    b.HasIndex("ExistingPrimaryControlId");

                    b.ToTable("ExistingPrimaryControlAnnexture");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.InfosecRiskAssessmentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AdditionalInformation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Asset")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AssetDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssetScore")
                        .HasColumnType("int");

                    b.Property<int>("AssetValue")
                        .HasColumnType("int");

                    b.Property<int?>("AvailabilityRating")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ConfidentialityRating")
                        .HasColumnType("int");

                    b.Property<string>("ControlEffective")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ImpactRating")
                        .HasColumnType("int");

                    b.Property<int?>("IntegrityRating")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LikehoodOfthreatOccuring")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Objective")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProposeClosureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RemediationStatus")
                        .HasColumnType("int");

                    b.Property<int>("ResidualRisk")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RiskAssessmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RiskOption")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RiskScore")
                        .HasColumnType("int");

                    b.Property<int>("RiskValue")
                        .HasColumnType("int");

                    b.Property<string>("Riskowner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Threat")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vulnerability")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VulnerabilityRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InfosecRiskAssessmentModel");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.NotifyISORiskAssessmentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMessageSent")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Objective")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("NotifyISORiskAssessmentModel");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.PlannedControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InfosecRiskAssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InfosecRiskAssessmentId");

                    b.ToTable("PlannedControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.PlannedControlAnnexture", b =>
                {
                    b.Property<Guid>("AnnextureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlannedControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("AnnextureId", "PlannedControlId");

                    b.HasIndex("PlannedControlId");

                    b.ToTable("PlannedControlAnnexture");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionToBeResolved")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlId");

                    b.ToTable("InternalControlAction");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlActionOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionOwnerStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalControlActionlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent12Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent24Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent36Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent48Hrs")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResponseTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlActionlId");

                    b.ToTable("InternalControlActionOwner");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("ExpectedUploadTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfReport")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("date");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeUploaded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InternalControlCallOver");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOverReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CallOverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReportDone")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfAttachments")
                        .HasColumnType("int");

                    b.Property<string>("ReportTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CallOverId");

                    b.ToTable("InternalControlCallOverReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlDashboard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActivityIntervals")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTaskCompleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDailyReminderSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMonthlyReminderSent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWeeklyReminderSent")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextNoficationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfTransactionsReviewed")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProposedCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("ToTrigger")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("InternalControlDashboard");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlExceptionTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityImpacted")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControlImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("ExceptionTrackerStatus")
                        .HasColumnType("int");

                    b.Property<string>("ImpactRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent12Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent24Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent36Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent48Hrs")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NatureOfException")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReasonForReject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleOfficerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SupervisorStatus")
                        .HasColumnType("int");

                    b.Property<int>("TransactionCount")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InternalControlExceptionTracker");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AttachmentCount")
                        .HasColumnType("int");

                    b.Property<string>("CollaboratorEmail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Collaborators")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueSummary")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NoOfActionOwners")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfCollaboration")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InternalControlModel");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.OperationControl.OperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionOwnerEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ActionOwnerResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionPoint")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalProcess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ExceptionCategory")
                        .HasColumnType("int");

                    b.Property<string>("ExceptionDescription")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsApprovedAsException")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsApprovedAsObservation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExceptionForActionOwner")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExceptionReAssignBySupervisor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent1")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent3")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationActivity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReAssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReAssignedOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReassignOfficerEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequestedEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResolutionStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionCallOverType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AAFML")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RFL")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMCapitalAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMCapital")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ARMCapitalEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMHILL")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHILLEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMHoldingCompany")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TreasurySales")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMIM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ARMRegisterar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BDOrIMRetail")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FundAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Fundaccount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IMUnit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OperationControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OperationSetlement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RetailOperations")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InvestmentBanking")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("StockBroking")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCustomerExperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseDataAnalytic");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InfoSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMTAM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommercialTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrivateTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AssessmentOfDigitalInitiativeList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("AssessmentOfDigitalInitiativeList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditScoped")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("CommenceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsAuditAnnouncementMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PreviousFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PreviousTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recipient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecipientUnitEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Salutation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SalutationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("WorkApproach")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditAnnouncementMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlDesignOrEffectively")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOrRecurring")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Rating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("AuditFindingAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditPlanningMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("BusinessDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImplementationPlan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Policies")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PriorAuditObservation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RegulatoryConsideration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskIdentified")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeAndControlTesting")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StrategicObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SystemOverview")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditPlanningMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoPlanningTimeline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditPlanningMemoAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlannedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Responsibility")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tasks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditPlanningMemoPlanningTimeline");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditProgramCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FindingStatus")
                        .HasColumnType("int");

                    b.Property<string>("InformationRequired")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkPaperInitiated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReviewProcedure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RiskDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubProcess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkpaperStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessRFL");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldCoTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldingCompany");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMIMUnit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityInvestmentBanking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditUniverseARMSecurityInvestmentBanking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditUniverseARMSecurityResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteeCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteePrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEMCRated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManagementRated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OverAllComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("CitationAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId");

                    b.ToTable("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceARMCapitalId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("ComplianceHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceComplianceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceDataAnalyticRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceFinancialControlRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessRiskRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFindingRaised")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DetailedFindings")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("EngagementName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Evidence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ImpactRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Level1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Level2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ManagmentResponseAsAtTimeOfEngagement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OPRStatus")
                        .HasColumnType("int");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportingQuater")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("RevisedDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusLevel")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("WorkStream")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("ConsolidatedAuditFindingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityToAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("ConsolidatedAuditFindingId");

                    b.ToTable("ConsolidatedAuditFindingActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DigitalFinancialService")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmcRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("EMCConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditScope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BriefBackgroundObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BusinessOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("CommunicationProtocol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("KeyRisk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Mandate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibilityOfInternalAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ResponsibleExecutive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DurationAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DurationTiming")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterAuditExecutionDuration");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDistributionListBusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportDistributionListName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportDistributionListTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialARMCapitalId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialHillReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialHillReportingId")
                        .IsUnique();

                    b.ToTable("FinacialHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialAgribusinessReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("FinancialHillReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialReportingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("FinancialSecurityReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("FinancialTrusteeReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateProvided")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("InformationRequest")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool?>("InformationRequirementCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId");

                    b.ToTable("InformationRequirementAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PreviousRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("InternalAuditRatingReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AssessmentOfDigitalInitiative")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfIssue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DetailedFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutiveSummary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("GoodPractiseInclude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OtherImprovementArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OverAllManagementComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PotentialMaterialisedImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Scope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SignedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId");

                    b.ToTable("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId");

                    b.ToTable("ManagementConcernARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AAFML")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RFL")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMCapital")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMCapitalId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMHill")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMIM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ARMRegistrar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BDOrIMRetail")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FundAccount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FundAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IMUnit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OperationControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OperationSettlement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RetailOperation")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InvestmentBanking")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("StockBroking")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommercialTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrivateTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitDFSRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DigitalFinancialService")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernDFSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernDFSId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitDFSRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernDFS");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementConcernRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMCapitalId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceDFSRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernDFSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernDFSId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceDFSRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionPointToResolve")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ManagementResponseAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHoldingCompanyRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHoldingCompanyRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ObservationListAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationARMCapitalId")
                        .IsUnique();

                    b.ToTable("OperationARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessArmHolco");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("OperationDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("OperationHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMUnitRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("OperationSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceComplianceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceDataAnalyticRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceFinancialControlRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("OperationTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("RatedBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDetailfindings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfIssue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PotentialMaterialisedImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ReportDetailfindings");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDistributionList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ForAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ForDistribution")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyARMCapitalId")
                        .IsUnique();

                    b.ToTable("StrategyARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessArmHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("StrategyDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHillId")
                        .IsUnique();

                    b.ToTable("StrategyHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyImBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("StrategySharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceDataAnalytic");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AAFML")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFl")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAgribusinessAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMCapital")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHoldingCompany")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TreasurySale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinancialService")
                        .HasColumnType("int");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMIM")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMRegistrar")
                        .HasColumnType("int");

                    b.Property<int>("BDPWMIAMIMRetail")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FundAccount")
                        .HasColumnType("int");

                    b.Property<int>("FundAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IMUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationControl")
                        .HasColumnType("int");

                    b.Property<int>("OperationSettlement")
                        .HasColumnType("int");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("RetailOperation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMTAM")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastBusinessARMTAMAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHill")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastHillAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockBroking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSecurityAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("Corporatestrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Customerexperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmind")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSharedServiceAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("CommercialTrust")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrivateTrust")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastTrusteeAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductOwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProductRiskAssementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductRiskCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductRiskAssementId");

                    b.ToTable("ProductAssessRisk", (string)null);
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuestionOrRecomendation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReseasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductRiskAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.VulnerabilityManagement.InternalVulnerability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Action")
                        .HasColumnType("int");

                    b.Property<int>("ActionOwnerStatus")
                        .HasColumnType("int");

                    b.Property<string>("Classification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DNS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Impact")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NETBIOS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Port")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Proptocol")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReClassification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Solution")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Threat")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vulnerability")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VulnerabilityModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityModelId");

                    b.ToTable("InternalVulnerability");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.VulnerabilityManagement.VulnerabilityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AssessmentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InfosecFeedbackStatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProposeEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TitleOfAssessment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VulnerabilityStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VulnerabilityModel");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BusinessEntity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3421),
                            IsDeleted = false,
                            Name = "ARM Securities"
                        },
                        new
                        {
                            Id = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3437),
                            IsDeleted = false,
                            Name = "ARMIM"
                        },
                        new
                        {
                            Id = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3439),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3442),
                            IsDeleted = false,
                            Name = "ARM Trustees"
                        },
                        new
                        {
                            Id = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3444),
                            IsDeleted = false,
                            Name = "ARM Harith Infracstrure Investement Limited"
                        },
                        new
                        {
                            Id = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3446),
                            IsDeleted = false,
                            Name = "Shared Services"
                        },
                        new
                        {
                            Id = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3456),
                            IsDeleted = false,
                            Name = "ARM AgriBusiness"
                        },
                        new
                        {
                            Id = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3458),
                            IsDeleted = false,
                            Name = "Mixta Nigeria"
                        },
                        new
                        {
                            Id = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3460),
                            IsDeleted = false,
                            Name = "ARM Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("f93b6763-93d7-41d2-9a4c-4929d359b69c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3462),
                            IsDeleted = false,
                            Name = "ARM HIIL"
                        },
                        new
                        {
                            Id = new Guid("fee31ed7-4adf-4d03-8fd0-b3144b42865a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 137, DateTimeKind.Local).AddTicks(3464),
                            IsDeleted = false,
                            Name = "ARM Capital"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlternativeWorkarounds")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyNonElectronicVitalRecords")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationsUsedToRunProcess")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessProcessDescriptionSummary")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerExperience")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinancialImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyVendors")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumAllowableOutage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MinimumBusinessContinuityObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherProcessesOrPeople")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeakPeriod")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryRecoverStrategyAndSolution")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecoveryPointObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecoveryTimeObjective")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegulatoryOrLegal")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteWorking")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reputation")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdPartyImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BIAUnitProcessDetails", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BIAUnitProcessDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BIAUnitProcessDetailsId");

                    b.HasIndex("UnitId");

                    b.ToTable("BIAUnitProcessDetailsBusinessUnitToRunProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("BusinessImpactAnalysis", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessImpactAnalysisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisId");

                    b.HasIndex("UnitId");

                    b.ToTable("BusinessImpactAnalysisUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessImpactAnalysisUnitJson")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BusinessImpactAnalysisUnitLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessEntityId", "Name")
                        .IsUnique();

                    b.ToTable("Department", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5153),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5169),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5177),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5179),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5182),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5184),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5186),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5188),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5190),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5201),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5205),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5207),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5209),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5211),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5213),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5215),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5217),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("2b4752e0-89e3-45ab-b4d6-f3809bd9c015"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5219),
                            IsDeleted = false,
                            Name = "ARM Security"
                        },
                        new
                        {
                            Id = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5223),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5225),
                            IsDeleted = false,
                            Name = "Business Development"
                        },
                        new
                        {
                            Id = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5227),
                            IsDeleted = false,
                            Name = "Retail Sales"
                        },
                        new
                        {
                            Id = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5229),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5232),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5234),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5236),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5237),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5241),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5243),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5245),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5247),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5249),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5251),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5253),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5255),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5259),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5261),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("2214335d-9ca8-4ac9-8fe1-352deda923bf"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5264),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5266),
                            IsDeleted = false,
                            Name = "Operations Settlement"
                        },
                        new
                        {
                            Id = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5274),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5276),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5278),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5280),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5284),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5286),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5288),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5290),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5292),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5294),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5296),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5298),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5302),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5304),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5306),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5308),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("1777e6a2-05bc-4322-81f0-10a205779214"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5310),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("427b8268-2d8b-4686-b677-69de2a46a459"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5312),
                            IsDeleted = false,
                            Name = "Treasury Operations"
                        },
                        new
                        {
                            Id = new Guid("f663d307-7d4d-4261-9f7e-e8fe6645ba18"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5314),
                            IsDeleted = false,
                            Name = "Treasury Sales"
                        },
                        new
                        {
                            Id = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5316),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5320),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5322),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5324),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5326),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5328),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5330),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5332),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5335),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5338),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5340),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5342),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5344),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5346),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5348),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5350),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5352),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5356),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5357),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5359),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5368),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5372),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5374),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5376),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5378),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5381),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5383),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5385),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5387),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5389),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5391),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5393),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5395),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5398),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5400),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5402),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5404),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5407),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5409),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5411),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5413),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5417),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5419),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5422),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5424),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5426),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5428),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("865be81a-ebe9-4c50-b5b9-9c07c28b1d9f"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5430),
                            IsDeleted = false,
                            Name = "Company Secretariat"
                        },
                        new
                        {
                            Id = new Guid("252cf529-9e73-4257-a718-d9cf51251ae0"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5432),
                            IsDeleted = false,
                            Name = "Environmental, Social and Governance"
                        },
                        new
                        {
                            Id = new Guid("37d376e3-5e1f-42a7-9d77-e63f07ca4475"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5435),
                            IsDeleted = false,
                            Name = "Data and Insights"
                        },
                        new
                        {
                            Id = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5437),
                            IsDeleted = false,
                            Name = "ARM Agricbusiness Fund Manager Ltd"
                        },
                        new
                        {
                            Id = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5440),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5442),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5444),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5446),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5448),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5450),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5454),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5456),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5464),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5467),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5469),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5471),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5473),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5475),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5479),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5481),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5483),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5485),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5487),
                            IsDeleted = false,
                            Name = "Design & Construction"
                        },
                        new
                        {
                            Id = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5490),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5492),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5494),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5497),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5499),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5501),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5503),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5505),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5507),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5509),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5510),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5514),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5516),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5518),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5520),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5523),
                            IsDeleted = false,
                            Name = "Corporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5525),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5527),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5529),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5532),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5534),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5537),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5539),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5541),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5543),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5545),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5547),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5551),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5553),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5561),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5563),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5565),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5567),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5569),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5571),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5574),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5576),
                            IsDeleted = false,
                            Name = "Legal and Compliance"
                        },
                        new
                        {
                            Id = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5578),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("840c2b0e-4146-41fb-a771-ede34bd0d915"),
                            BusinessEntityId = new Guid("f93b6763-93d7-41d2-9a4c-4929d359b69c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5580),
                            IsDeleted = false,
                            Name = "ARM HIIL"
                        },
                        new
                        {
                            Id = new Guid("b0b881eb-8beb-412e-8b63-ebfb5fbe0c0a"),
                            BusinessEntityId = new Guid("fee31ed7-4adf-4d03-8fd0-b3144b42865a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 141, DateTimeKind.Local).AddTicks(5583),
                            IsDeleted = false,
                            Name = "ARM Capital"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Blob")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("RiskEventType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(3679),
                            IsDeleted = false,
                            Name = "Internal Fraud"
                        },
                        new
                        {
                            Id = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(3686),
                            IsDeleted = false,
                            Name = "External Fraud"
                        },
                        new
                        {
                            Id = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(3688),
                            IsDeleted = false,
                            Name = "Employment Practices and Workplace Safety"
                        },
                        new
                        {
                            Id = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(3690),
                            IsDeleted = false,
                            Name = "Clients, Products and Business Practices"
                        },
                        new
                        {
                            Id = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(3692),
                            IsDeleted = false,
                            Name = "Disasters and Other Events"
                        },
                        new
                        {
                            Id = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(3694),
                            IsDeleted = false,
                            Name = "Business Disruption and System Failures"
                        },
                        new
                        {
                            Id = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(3696),
                            IsDeleted = false,
                            Name = "Execution, Delivery and Process Management"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("NAME");

                    b.Property<Guid>("RiskEventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeId");

                    b.ToTable("RiskEventTypeCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1449),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1458),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1460),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("3429aad4-e734-44ac-919c-af9758979aab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1463),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1466),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1468),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1475),
                            IsDeleted = false,
                            Name = "Safe Environment",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1478),
                            IsDeleted = false,
                            Name = "Diversity and discrimination",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1480),
                            IsDeleted = false,
                            Name = "Employee relations",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1482),
                            IsDeleted = false,
                            Name = "Suitability, disclosure and fiduciary",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1484),
                            IsDeleted = false,
                            Name = "Improper business or market practices",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1487),
                            IsDeleted = false,
                            Name = "Product flaws",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1489),
                            IsDeleted = false,
                            Name = "Selection, sponsorship and exposure",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1491),
                            IsDeleted = false,
                            Name = "Consulting/Advisory Activities",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1495),
                            IsDeleted = false,
                            Name = "Mismanagement of classified company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("5e969527-3694-477a-8f17-40e53039966c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1497),
                            IsDeleted = false,
                            Name = "Misrepresentation of company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("635ca6d7-708f-4349-a483-ecf00679c489"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1499),
                            IsDeleted = false,
                            Name = "Poor Quality of Media Production",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1501),
                            IsDeleted = false,
                            Name = "Natural causes",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("611b88d4-5289-4da1-a78d-420f236257dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1503),
                            IsDeleted = false,
                            Name = "Accidents and public safety",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1505),
                            IsDeleted = false,
                            Name = "Retroactive effects and improper activities by third parties",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1507),
                            IsDeleted = false,
                            Name = "Human Acts",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1510),
                            IsDeleted = false,
                            Name = "Disputes with Regulatory Authorities or other Governmental Bodies",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1514),
                            IsDeleted = false,
                            Name = "Interruption in services provided by external providers",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1516),
                            IsDeleted = false,
                            Name = "Inadequacy Inefficiency Malfunction or Block of Technology Systems",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1518),
                            IsDeleted = false,
                            Name = "Transaction capture, execution and maintenance",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1520),
                            IsDeleted = false,
                            Name = "Monitoring and reporting",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("81f7e998-9b34-4092-8590-a551647de2c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1523),
                            IsDeleted = false,
                            Name = "Customer intake and documentation",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1525),
                            IsDeleted = false,
                            Name = "Customer account management",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1528),
                            IsDeleted = false,
                            Name = "Non-client counterparty breaches",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1530),
                            IsDeleted = false,
                            Name = "Vendors and suppliers",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(1534),
                            IsDeleted = false,
                            Name = "Other Process breakdown",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<Guid>("RiskEventTypeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeCategoryId");

                    b.ToTable("RiskEventTypeSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("758ce2c5-084d-4427-b230-39a1052fd243"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(965),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("d2b6ce94-1361-41cd-b1d6-d60d06bfa893"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(973),
                            IsDeleted = false,
                            Name = "Theft",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("0ba63882-6b0f-4bfa-8b0b-c5367a8e404d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(980),
                            IsDeleted = false,
                            Name = "Cash management shortages",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("56676d97-c501-4eb9-8529-6249508946fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(983),
                            IsDeleted = false,
                            Name = "Extortion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("dfaf67d3-343e-4994-8a9d-a830aa1ca973"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(984),
                            IsDeleted = false,
                            Name = "Embezzlement",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("8e465fbc-e065-4a61-90a0-b1b4901e943c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(986),
                            IsDeleted = false,
                            Name = "Forgery",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("d01578ab-f056-4542-939a-e241de4bf8fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(988),
                            IsDeleted = false,
                            Name = "Cash suppression",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("5deb3805-f62b-466c-b028-8848e727cd99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(990),
                            IsDeleted = false,
                            Name = "Cheque conversion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("15ee2432-df2d-4af6-8a58-c7ba2821877e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(992),
                            IsDeleted = false,
                            Name = "Manipulation of source documents",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("c03b0684-f17c-4ba8-a9cd-3d0ed46927eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(993),
                            IsDeleted = false,
                            Name = "Manipulation of customer accounts",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("fa96fabc-e61f-4c1d-82f6-9bacc1bfc3e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(997),
                            IsDeleted = false,
                            Name = "Teaming",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("184031ac-c443-4aae-b104-ab81c827060f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(999),
                            IsDeleted = false,
                            Name = "Illegal sales of securities from Clients portfolio",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("9c3e0333-7c74-4d66-bd16-30d9c30b3f0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1001),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("c3f13043-b77f-444b-95ac-6c3b96ee0ac8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1003),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("4e207da1-9156-4c82-a494-36a6f02b9c3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1004),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("a1abc28e-5a6f-4275-bfd8-472269182473"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1006),
                            IsDeleted = false,
                            Name = "Misappropriation of company assets",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("9a3ae9f6-ebfe-46d9-9611-b83364f7aafc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1008),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("ae8daa31-e9d9-4c89-91dc-fa93a28a5f06"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1009),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("6eca21af-14a9-4941-8458-4db08482b3a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1013),
                            IsDeleted = false,
                            Name = "Intentional mispricing of products",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("081d1e6d-b526-4dce-a8f2-920b299061c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1014),
                            IsDeleted = false,
                            Name = "Destruction of source documents",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("d7319d33-f474-4ed5-aeb3-fd9070b4ba53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1016),
                            IsDeleted = false,
                            Name = "Unauthorised income waivers",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("5de90738-c5b2-4898-a9d0-b15a6b00184a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1018),
                            IsDeleted = false,
                            Name = "Granting unauthorised credit",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("0a885c80-8c90-4bc1-880c-217ef0ade64b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1019),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("da1ae30e-45ae-4c72-a660-69ecac423b49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1021),
                            IsDeleted = false,
                            Name = "Cash theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("7c1bcc9a-495c-4310-839a-d0dde3a1f4a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1027),
                            IsDeleted = false,
                            Name = "Pool car theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("7f1f4dff-1b0e-4df1-81c6-f7d8a35274d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1030),
                            IsDeleted = false,
                            Name = "Cheque forgery",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("25b35ac0-c476-4d87-9b95-f72c736ce688"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1033),
                            IsDeleted = false,
                            Name = "Cheque fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("3bb8670b-cfeb-4ed8-8ecf-099e7d716fc4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1035),
                            IsDeleted = false,
                            Name = "Cheque kiting",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("f46de820-0711-4e1d-98b0-86547177fc70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1036),
                            IsDeleted = false,
                            Name = "Fake currency fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("db59c911-aef0-4724-aca3-adc71b226877"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1038),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("3a31359f-e7a5-4749-852d-464d681c23f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1040),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("83024303-16b3-4d3b-b994-2dd02adf0fdb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1041),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("2caaa926-7918-414c-9c8d-d1c03645c103"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1043),
                            IsDeleted = false,
                            Name = "Account take over / impersonation",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("d3e8d49f-37da-4dae-91c1-02bebaff38c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1045),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("0bc1baaf-7b68-49f0-869a-b3b14702133f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1048),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("e735495f-65f7-4fae-a586-f5b749f326dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1050),
                            IsDeleted = false,
                            Name = "Employee health and safety violations",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("9bcf55ab-f77e-4f02-a3ba-c79d9cf602b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1052),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("e4fbfc3c-a350-4452-a0bd-04e3182fe2a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1053),
                            IsDeleted = false,
                            Name = "Discrimination on account of religion, nationality, race",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("bea66040-b2a4-43a3-9d2d-b53f8dd509be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1055),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("0718af3a-2a36-49cb-bfc8-8e05929860a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1056),
                            IsDeleted = false,
                            Name = "Employee disputes and investigations",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("d952b025-c113-4349-bae2-ea22f8c35cc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1058),
                            IsDeleted = false,
                            Name = "Mistakes in the administration of employee compensation, benefits, or termination",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("7863e1e6-9ba4-408a-bebf-12564dc46545"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1059),
                            IsDeleted = false,
                            Name = "Organised labour activities",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("8984d9eb-9882-4555-af6d-2d9fa50cb752"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1063),
                            IsDeleted = false,
                            Name = "Fighting between staff",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("2e3f7c96-7f8f-465d-8f25-1fc48dd94977"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1064),
                            IsDeleted = false,
                            Name = "Fiduciary breaches and guideline violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("4254d797-464a-4b00-9f05-5900a5717606"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1066),
                            IsDeleted = false,
                            Name = "Customer suitability violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("d9782207-1684-4fb5-8885-c3a4a28679ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1068),
                            IsDeleted = false,
                            Name = "Disclosure / misuse of confidential client data",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("11e31c7d-03a2-435f-ae50-548bee756614"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1069),
                            IsDeleted = false,
                            Name = "Breach of regulatory guidelines on foreign exchange transactions / suspicious transactions",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("f67478d2-5344-4cbb-9652-6a73e4a0b2ab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1071),
                            IsDeleted = false,
                            Name = "Aggressive selling",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("6760d854-b409-40e4-a743-7a577a757c6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1072),
                            IsDeleted = false,
                            Name = "Account churning",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("a5cccd34-e53f-4a2a-8046-22c8c092cc18"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1074),
                            IsDeleted = false,
                            Name = "Unlicensed activities",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("b69eb56e-b4e7-478c-be10-8e3a1d2ccf79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1077),
                            IsDeleted = false,
                            Name = "Money laundering",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("dc394560-ab17-408f-9d91-fbff4237aade"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1079),
                            IsDeleted = false,
                            Name = "Tax non-remittance",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("ce299869-a95a-4fbc-b03f-bcf8aeca8ba3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1081),
                            IsDeleted = false,
                            Name = "Product defects (e.g. Marketing of unauthorised products)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("4ae9b94f-81b8-4790-9745-9f518da23cdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1082),
                            IsDeleted = false,
                            Name = "Model errors (e.g. product conception, methodology, or pricing errors)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("1ad2d043-2654-4011-b9db-747d6e885282"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1084),
                            IsDeleted = false,
                            Name = "Non - compliance with internal guidelines when investigating a client",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("94030cb0-f437-4199-b687-1e4d7888cde8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1085),
                            IsDeleted = false,
                            Name = "Client exposure (loan) limits exceeded",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("00b4f116-fe49-4be1-939f-4a22e1b2b766"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1087),
                            IsDeleted = false,
                            Name = "Penalties / Fees incurred for contractual disputes / transgressions",
                            RiskEventTypeCategoryId = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b")
                        },
                        new
                        {
                            Id = new Guid("f8bfe310-7c51-4186-b458-4a9d7b14fb62"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1088),
                            IsDeleted = false,
                            Name = "Competitors obtaining information about the firm's initiatives and business strategy",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("37e517c0-310a-40e1-be15-74dd3010e09a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1092),
                            IsDeleted = false,
                            Name = "Misplacement of client information and correspondence",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("0b1671fc-7898-4761-9547-17d96942cb3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1093),
                            IsDeleted = false,
                            Name = "Errors in ARM's publications and annual reports",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("cb35ea08-04d1-4862-84d9-453f44a26668"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1095),
                            IsDeleted = false,
                            Name = "Misquotes by public media sources",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("34065941-a5cb-4b94-9134-bb13361d92ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1096),
                            IsDeleted = false,
                            Name = "Inferior production of corporate gifts",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("97355235-46ba-4427-9dcb-513dfb2450c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1098),
                            IsDeleted = false,
                            Name = "Substandard /Offensive advertisements and promotional activities",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("f52b2ee9-0505-45c3-9e14-701abeff259d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1099),
                            IsDeleted = false,
                            Name = "Poor quality of Annual Reports prints",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("442d7337-10af-425a-870e-30a79bf1ada7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1101),
                            IsDeleted = false,
                            Name = "Fire",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("2d54b1be-2c6c-494c-9ce8-ad43298b47d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1103),
                            IsDeleted = false,
                            Name = "floods",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("5d3b04bb-7648-4180-a8e9-21edb5d1536b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1106),
                            IsDeleted = false,
                            Name = "hail damage",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("f0ed15c9-bb3d-44ea-8849-65f0a99486ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1107),
                            IsDeleted = false,
                            Name = "General responsibility for injuries caused to third parties eg. company Vehicle accidents",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("5ef76162-8892-4cf2-9bd6-2b987324c398"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1109),
                            IsDeleted = false,
                            Name = "Electrical surges",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("c7be34e4-3e84-4bd6-b428-31f3952af59a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1111),
                            IsDeleted = false,
                            Name = "Fire outbreak",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("a05d062f-9903-4421-96e8-2e24fb07f0bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1112),
                            IsDeleted = false,
                            Name = "Water spillage",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("f6df700f-a0e4-467c-ac37-9bb45bb26ac3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1114),
                            IsDeleted = false,
                            Name = "Smoke detectors not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("da8a5b4f-3d55-4214-be26-e820751a7c94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1115),
                            IsDeleted = false,
                            Name = "Fire alarms not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("a83f5bca-19bb-4856-a473-7b9f023affea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1122),
                            IsDeleted = false,
                            Name = "Political interference in the companys operations",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("a0956f9b-7aee-4a28-830e-5cac35658374"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1126),
                            IsDeleted = false,
                            Name = "Launch of competitive products by agents",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("09a8c75d-17af-4e9a-b9ee-1a297e9b8117"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1128),
                            IsDeleted = false,
                            Name = "Court debt judgements",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("64ff8358-9a58-46bb-b0ca-13608dc1e7c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1129),
                            IsDeleted = false,
                            Name = "Out-of-court settlement costs",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("2019f512-f238-4a56-b436-64816ddb5ade"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1131),
                            IsDeleted = false,
                            Name = "Litigation expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("8e9714b8-ac22-4745-ba39-79b923a42b35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1132),
                            IsDeleted = false,
                            Name = "Debt recovery expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("8fcd3e1e-bd5b-47f1-a059-51e3c423aa0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1134),
                            IsDeleted = false,
                            Name = "Fines & penalties",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("dbe409ea-e7c2-4ce1-b6ad-66fc83c64481"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1136),
                            IsDeleted = false,
                            Name = "Loan writeoff expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("b9f39de4-b308-45bc-a75c-ee78bf579b4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1137),
                            IsDeleted = false,
                            Name = "Vandalisation of company property",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("3a9de148-103a-4ca0-a01c-71deba28d5f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1140),
                            IsDeleted = false,
                            Name = "Sabotage",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("8ec78006-2db0-4d58-8b59-7c722d7c45e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1142),
                            IsDeleted = false,
                            Name = "Robberies",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("a5d85d6f-e98d-4b8a-b3af-040b9eeb325e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1143),
                            IsDeleted = false,
                            Name = "Missed deadlines",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("7b55d2e0-56ed-4b9c-897e-83168a25fc3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1145),
                            IsDeleted = false,
                            Name = "undeserved fines and licence supensions",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("09dbce13-8b88-4550-b66c-db5cd082a100"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1150),
                            IsDeleted = false,
                            Name = "Interruption in communications",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("5cdb882c-ab92-4a19-9ca3-cdc06ac475d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1152),
                            IsDeleted = false,
                            Name = "Power outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("5a804b2a-ae1b-4384-87e2-db479b4d1429"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1153),
                            IsDeleted = false,
                            Name = "Inability to process transactions",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("12184b22-5e61-42ab-ade8-86181fc2e3f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1155),
                            IsDeleted = false,
                            Name = "Telecommunication link outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("dd9ffe3b-03e5-4984-95d8-19921a6dc55a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1158),
                            IsDeleted = false,
                            Name = "CCTV outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("dddfc105-5902-4419-8b77-35d3c5f98196"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1160),
                            IsDeleted = false,
                            Name = "System downtime",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("1351d6e5-e3a4-4af0-bde9-7eae37f5225f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1162),
                            IsDeleted = false,
                            Name = "Automated data processing errors",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("bf884f42-f367-4285-807d-3e38d5515293"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1163),
                            IsDeleted = false,
                            Name = "Errors in the maintenance of information",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("53c0fc7c-0afc-487d-94a9-892766c2e424"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1165),
                            IsDeleted = false,
                            Name = "Data entry errors (payment instructions, rates)",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("fe99f5b3-64ae-4025-be69-c97e0181ccc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1166),
                            IsDeleted = false,
                            Name = "Transaction not booked",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("39a11e6d-2c69-48f8-8d6e-4ae29ea0700b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1168),
                            IsDeleted = false,
                            Name = "Alteration not countersigned",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("1449806b-6684-4395-8170-18c5670c893e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1169),
                            IsDeleted = false,
                            Name = "Transaction not registered",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("a4c16f6e-c30a-43f5-be2e-0c8c0c3bfc40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1173),
                            IsDeleted = false,
                            Name = "Amount in words different from figures",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("72de559f-f374-4f42-8c35-07aa0329b434"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1174),
                            IsDeleted = false,
                            Name = "Application of wrong interest or exchange rates",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("e38b0e66-abe7-49e5-9157-944e5611c6e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1176),
                            IsDeleted = false,
                            Name = "Failure to regularise customer instructions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("7263f175-7a16-4760-8426-ac2820b97ef5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1178),
                            IsDeleted = false,
                            Name = "Data entry errors",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("8c5633f9-f277-4676-864b-ec527c2b9c90"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1179),
                            IsDeleted = false,
                            Name = "Processing undated transactions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("3beadeaf-ce9d-46ac-bf7f-47793ed142c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1181),
                            IsDeleted = false,
                            Name = "Improper identification of beneficiaries",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("842a726f-62f6-4ce7-b0f7-369b2fab531c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1182),
                            IsDeleted = false,
                            Name = "Wrong classification of accounts",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("3630ef96-5b8b-45c1-9f0f-1492b2840eba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1184),
                            IsDeleted = false,
                            Name = "Incorrect client records",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("67760e42-ce1f-4395-82fc-d91bf587dc34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1187),
                            IsDeleted = false,
                            Name = "Inaccurate information sent to clients / external parties",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("aff01348-11fe-4363-844a-840cb5e9c38c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1189),
                            IsDeleted = false,
                            Name = "Client permissions/disclaimers missing",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("8fa6a82f-3663-485e-b314-cedd56454ac9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1190),
                            IsDeleted = false,
                            Name = "Contractual documents missing / incomplete / erroneous",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("34dc374a-4137-4846-ba29-0ff50fac1590"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1192),
                            IsDeleted = false,
                            Name = "Improper account setup",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("eacc10a4-eb02-4aa4-aa4a-7a4a136fa291"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1193),
                            IsDeleted = false,
                            Name = "Incomplete account opening documentation",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("09121ef9-1bfd-4f6f-b21b-0a28da2be70d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1195),
                            IsDeleted = false,
                            Name = "Failure to upload mandates",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("774426b2-502e-4779-afc4-00d18d65f613"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1197),
                            IsDeleted = false,
                            Name = "Unapproved access given to accounts",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("96e6f104-229c-473a-baf3-412e6262c307"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1198),
                            IsDeleted = false,
                            Name = "Negligent loss or damage of client assets",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("b430f827-426e-4ec0-8854-e3b352bf9ad3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1202),
                            IsDeleted = false,
                            Name = "Failure of counter-party company to repay inter-company lending amounts on demand",
                            RiskEventTypeCategoryId = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472")
                        },
                        new
                        {
                            Id = new Guid("60b15d9a-f7a7-428d-ae23-9d97acb930f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1203),
                            IsDeleted = false,
                            Name = "Failure of vendors to deliver on contractual obligations",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("e879a38f-a1c7-41e7-9cbf-b3ed5f99f3ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1205),
                            IsDeleted = false,
                            Name = "Disagreements over terms of outsourcing contracts",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("08d22c86-3386-4bc9-91d2-22f57331bd80"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1206),
                            IsDeleted = false,
                            Name = "Errors in Human Resources/ Administration processes",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("58c5eb34-cb2b-4b55-a224-8938262c0750"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1208),
                            IsDeleted = false,
                            Name = "Procurement not authorised",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("cf27a582-881e-452a-8c11-6204b3543dac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 171, DateTimeKind.Local).AddTicks(1210),
                            IsDeleted = false,
                            Name = "Disposal of Fixed asset not approved",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RCSAStage")
                        .HasColumnType("int");

                    b.Property<Guid>("RiskControlSelfAssessmentUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RiskControlSelfAssessmentUnitId")
                        .IsUnique();

                    b.ToTable("DocumentRSCAProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRSCAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentRSCAProcessJsonDump")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRSCAProcessId");

                    b.ToTable("DocumentRSCAProcessLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwnerUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<string>("ColourEffectiveness")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Control")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectiveActions")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRCSAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InherentRisk")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResidualRiskLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ResidualRiskRating")
                        .HasColumnType("int");

                    b.Property<string>("ResidualRisks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResult")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TestResultAttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<string>("TestToApply")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeLine")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRCSAProcessId");

                    b.ToTable("ProcessInherentRiskControl", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SoftDeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("RSCAProcess", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("34080688-f0a4-4369-8d35-a9c6534787e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6483),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("f0803ff9-dcda-46ad-a42e-e11b14f05dea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6490),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("fd6d7294-8e08-454c-9152-428a9d6d08b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6492),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("2d0ddde8-8fee-4c48-abc1-897aa3d7870a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6494),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("df872f57-c146-48ec-af35-4503026f11f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6495),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("d661c167-7027-4080-87e0-f0034770c852"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6497),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("d54e6e04-975a-4f88-a2c5-77fd19d9d4f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6499),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("5bf7bce2-5fc8-46cc-96be-3023cb0cd405"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6501),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("52c37e96-3a79-4f65-863e-18adfd59e68c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6515),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("8a9b77bb-ef48-4552-8c51-60ca7731cb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6517),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("4b9ed13f-5166-4a04-8224-391fefa49bfa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6519),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("9d45489c-92b5-43ec-834a-1a2a7188d722"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6520),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("dc847a43-175c-4fdf-9fab-5124091f971f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6522),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("60816228-81c9-4e19-a24d-439d7a4d2470"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6524),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("bfb5574a-1a3e-48cb-982a-dbf773816949"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6526),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("7d7cae4a-0d5a-4bce-88a5-5e54f445f848"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6527),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("244885a4-8aec-4306-ba3e-ff355d9f04a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6530),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("a3a3c604-2f8e-450e-8eca-8d85f30de4f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6532),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("ef5a6c5e-8e33-436c-bbf9-08fe2d24932d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6533),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("24c649ec-0ca1-4d63-8b87-0721374ab9d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6536),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("9ef9a68d-e2fb-4249-a9d3-aadcd41040b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6537),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("a13ca042-97e3-4ae0-b36c-1ae0ec3f102a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6539),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("8f48272f-bdaa-4c9a-abc1-afa61c4d40ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6540),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("348e2f2e-b33d-4dfb-8d29-88dad4ffe542"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6542),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("9fd80808-fa40-422a-8d38-6f15bed3a754"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6545),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("809137e2-1ec5-416d-8c2d-5703d3c7a6df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6547),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("abea733e-4695-47a2-a2aa-035eab639456"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6549),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("89ba14d0-dfae-4d79-a393-89f6c90ce021"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6550),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("d2311d11-c3f2-4d83-801b-b347066291f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6552),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("938d0f33-99b0-4189-8cf0-f0813b0025e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6553),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("e4517585-0b91-4cb1-a0e1-7d23490a4ca6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6555),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("89e5aca8-227d-4a7d-985d-696eb7f657b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6556),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("fddca4a9-70e8-4038-986f-66f37d6b8201"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6559),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("1ac54234-e298-43ce-9fc7-0ae83131cc65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6561),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("bf16dc2d-5801-41d3-a837-1e3d43bbaded"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6562),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("5407b132-d2a2-46a8-b603-53ef81fde8c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6564),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("14488121-22ca-4ae2-a89d-cb30037aff78"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6565),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("c2094ca8-d2a7-4609-88f3-d3d838a485ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6567),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("305f7779-addd-4891-ab72-e19bda4df02d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6568),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("74af41c0-0c59-4383-a62a-b543cc224604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6569),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("cec1b02a-05fb-4598-a3de-a2e9d99b8df6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6573),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("4d8b21cf-d7e0-45a5-8dd4-bfbf4a03b5b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6575),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("ca30991a-0c9d-4a40-8000-4e110aa5c32d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6576),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("f331575b-d997-4d89-a4c8-b85886891323"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6578),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("a7867b7a-5a96-41f9-8e6f-81d1a4ebf976"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6579),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("e88080f3-21cd-4b78-98bd-6e92578cf8a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6582),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("076c08e4-33b4-400a-82be-1f1c307d6273"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6583),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("b726bad9-9389-41b1-b2a9-b3a6f8423aa5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6584),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("40f0eec9-3697-4855-89e7-76f8ab803a7d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6588),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("28daafb8-d50a-42c5-98fb-66c4cb2f6b73"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6589),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("4cd9c181-2c64-4cd0-986a-630051ed28c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6601),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("164fcab5-3d79-49dc-9f5b-766a4b159d9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6604),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("6cf21a01-4573-47bf-9ec5-99ed164ea28d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6605),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("d7798e6a-ffbf-4951-8667-a0c5d54472e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6606),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("b6a9871b-2676-4c01-a510-104e5bc13ef5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6608),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("20206bc6-a78f-42a8-8272-5111b855d5e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6609),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("ea733763-60e6-42e4-895a-814df1d90469"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6613),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("a573e176-6292-4750-b338-c4cef0827e0f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6615),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("485f4df5-0b86-4304-9542-cfad8846e505"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6617),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("4fee7c0e-18ee-4f5e-83ae-939299fac440"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6618),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("8345349f-6f3b-4a07-b2e5-f8e29d221339"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6620),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("042f47d3-a449-43fb-905f-2510060ad3bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6621),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("09fbdcab-ad4e-49f6-8307-e311c8143aa7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6623),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("b74cc0cd-948c-4d7f-904e-846f336b032d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6624),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("df4b19a2-b824-4493-80af-5c46b1a6977d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6627),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("b9273934-7f99-43b5-bd37-f0e8d8e07b3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6628),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("8b42c6a4-cecb-4002-87cf-bb11b1b27cff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6630),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("c8e96cb2-820c-4323-8b2f-0a534bee2800"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6632),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("f5272428-ca35-405f-b419-25e7daf5466e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6634),
                            IsDeleted = false,
                            Name = "Redemption/Withdrawals/Other Payments",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("a500a2f5-4f06-4edf-b026-a2f86a1514e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6636),
                            IsDeleted = false,
                            Name = "Subscriptions",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("db40870b-64b6-4258-8f92-c68c8f8a550d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6637),
                            IsDeleted = false,
                            Name = "Reference Letters",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("b36e15dd-6af1-44f5-a86b-791a8455c948"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6639),
                            IsDeleted = false,
                            Name = "Statement/Valuation Requests & Quarterly Portfolio Reviews",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("a7f3b7a2-7b51-44b4-bb76-301460ffda34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6643),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("d027e0ba-10b3-406a-944d-d2a7597a1731"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6644),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("37f99e29-8c62-4e63-b12a-7e041f35949b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6646),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("2ae5a049-d22f-4a56-993d-6a18abd9d756"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6647),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("644b5c18-522b-49b9-b526-60427edec29e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6649),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("f33a308b-6ba2-430c-a3ae-5f3c762af6e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6651),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("2226ebfa-9771-4efe-a1cf-5aa02aceee49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6652),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("83b15016-c42c-44c5-b586-852083a40a39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6654),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("e10a996a-89d6-4ae9-a832-13d9ee254027"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6657),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("4202d9d6-839a-4eff-8a64-02b575bb8313"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6658),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("b9dd49f2-af17-4ec1-a512-0ee8d3e37440"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6660),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("fb32b8d6-55e1-4f5b-bd3e-ee8b92c3d857"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6661),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("898f90a4-f5f3-490e-a220-7b38eca06460"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6663),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("3d334b58-697c-43d5-a72e-200a70274132"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6664),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("11fe5377-471d-40c1-aafe-e27ae28c296f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6665),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("78a3fde0-a9f0-4938-b248-72d90d018acb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6667),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("f9dc3b74-1f4f-4146-a21e-5d5cd41d3653"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6670),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("5c1d2578-ce2b-4f0a-bfd0-b05308af28fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6672),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("badd1c71-709d-4246-a74e-b6025c61b1a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6673),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("8e3f9474-2e09-44f3-addc-49cc85724ac7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6674),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("dfad8bb0-42a9-40a6-adc5-0ca0bd8f929d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6676),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("a97216b6-d2b1-4164-b1b2-24c78fa4ff36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6688),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("19c9e068-96f1-4f6f-84ee-dfab4a92d24b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6689),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5e866f17-48a1-4b68-8bb4-f17cb977dc79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6691),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("0b25fb57-7390-4ebc-b098-7cc478334d45"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6694),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("2e698e00-61ea-4701-9967-ad4c70025532"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6695),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("04802d42-af01-458f-8caf-f96984f71f93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6697),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("967ca7ef-e70b-4c1a-a82f-b40e3097c77c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6698),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("e984e832-1b28-44bd-9563-c39b28d867fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6700),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("5d4f6aa3-3202-439e-8f30-368993669e33"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6701),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("422ee96f-90d9-4f33-b82e-39bf48453c71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6703),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("12c94aeb-f956-4c33-a1f2-94f436baba50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6704),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("a4777963-4838-402a-adac-b5ef2c34731c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6707),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("acddf284-72c9-41db-b179-6cef348a2465"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6708),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("402d2c7c-ff52-44f5-9b11-ebc9c18ba250"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6710),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("25ef3501-3b3d-4766-ab74-f891aacd52c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6711),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("b87b623d-1673-49a8-bdcc-897897729178"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6713),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("15d38737-a8cf-4960-a94a-8f05d7574e98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6714),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("ffc49406-a576-47a9-8b6f-52fedb01ec4f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6716),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("27fa2d23-b6a3-4e77-b8b7-b00b1c6d6eac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6717),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("3bab6f04-fe66-4eee-9099-7a64bbc3c5ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6720),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("716ac3e2-c859-41f6-9025-d2f87940a28b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6722),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("b26d9e9d-7808-4217-8941-d0a6e4e7d26e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6723),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("15d644b0-3b5c-402d-9487-9d792be5450c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6725),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("fb157438-dc9c-49ce-a697-3a05ce3b8c01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6726),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("6b626c04-b245-41e3-8a6a-91af494633cc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6728),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("bcfb36e0-3a93-4778-a1ef-1ec5595b3519"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6729),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("f471b2b0-a65a-4145-81e9-8ad9ad96749d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6730),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("1f9e74ec-11af-4193-a2d7-81c97c435d47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6733),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("1cad9980-7fc1-40da-9bcf-67061f73cfa5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6735),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("0632784d-1f91-4379-a8dc-14dce623b34e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6736),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("dc107604-2e9e-412d-aa0b-366494bad397"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6738),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("f85a3a50-3a02-497f-b10b-5a87b1be1a5f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6740),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("0e18940b-d5cb-447f-83ec-1079d591545a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6741),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("b3f23cf7-e53a-4d7b-8bf9-ba3e85b3487d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6742),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("2f26791f-7903-41b5-9540-a79fb073c304"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6744),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("55349dfb-f5d7-431c-9939-f04c368e0392"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6747),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("feb7eaf7-b3fb-4c33-b746-b308ce3cf9e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6748),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("51beaa30-aa91-4887-96bf-0a96fd1e10e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6750),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("9a52a17e-08ef-44f7-bf2e-14229ac174ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6751),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("8c1af0bc-89d3-452f-a518-19201aac4b79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6753),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("26f2d1fb-cd3c-4fad-989d-74b601c0e8d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6754),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("12e505ce-9dc5-4ed9-b09e-683d9d62d69c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6756),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("92e21620-914d-44a7-835a-c6e254163ec1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6757),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("0ce654f0-c6bc-44f9-8df0-a2551315154c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6771),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("989351ea-d9e6-4562-9e99-6c3cc68b0cd7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6773),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("4382957e-b00d-4c9d-9538-4a4d2eb20584"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6774),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("9956c1f5-4bef-4580-a514-7d4a45b48266"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6776),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("c932c3ba-17f0-4ae4-a437-6d27edf8b453"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6778),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("17dc4872-7a33-49c9-88ab-e28c5da77318"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6780),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("4009d4b4-4647-489a-bfbf-2c80364e9034"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6781),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("72da53f0-3da2-43e8-a21e-eb3f56562b12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6783),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("5c29ca88-e9ff-4146-9c01-361db3c657bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6786),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("dcf880b0-4ffb-4691-9c96-8daa2a719347"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6787),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("797b4f17-4118-480b-a6df-6ceed41a08b0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6789),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("a2f0b805-e032-4100-8d3f-14991db1362d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6790),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("dd3a1b23-1384-44c8-81de-da1f21028e27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6792),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("eb29035e-d145-4b09-9603-8286b7478eaf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6793),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("a3d31250-69d4-4353-8cbb-d9feac225d23"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6794),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("06086a2d-be8e-4b0a-a86a-0dd59e04dde9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6796),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("b63877c8-efe9-463b-8716-00d6f4929f65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6799),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("1f587c50-c499-4608-93f3-8c48bcebf9ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6802),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("ef36b7bf-386d-49ed-8578-069836009334"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6803),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("9d07d9b1-a8a0-44a3-9f1b-47cca199e872"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6804),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("80c649fc-af45-455a-85ef-c56641b7b8aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6806),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("66ccdd9e-ab15-4d6d-af29-40c9e632df49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6807),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("f7438bd2-156a-40f3-9daf-c61a145b5f94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6809),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("9882bf4d-df38-4004-b232-54965772ecf5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6810),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("aae111de-ccd8-4a5b-aa1c-4e121543d137"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6814),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("bcfde2fb-426b-4180-81a5-85079267b7f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6815),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("9978d4d0-9b0e-4b6f-b38d-ca64f598a40e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6817),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("d81ab711-3916-4b43-8a00-489fd5a41030"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6818),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("d589195e-f028-4d2b-8211-801994ad5b24"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6820),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("e62c1958-e882-4634-acc5-284753f309c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6821),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("8eb3beb4-16be-4a26-92a3-88733504e248"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6823),
                            IsDeleted = false,
                            Name = "Reconciliation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("42016bae-5541-4e3e-a642-7e0cb9edf959"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6825),
                            IsDeleted = false,
                            Name = "Call over",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("c7c36732-88d8-498d-b99f-a6a669b0bd3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6828),
                            IsDeleted = false,
                            Name = "Fee accrual validation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("f600f0f1-c5ee-49a1-b794-223b14a496fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6829),
                            IsDeleted = false,
                            Name = "GL reconciliation and review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("6c37b196-45ab-478a-86cb-1e09f6387598"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6831),
                            IsDeleted = false,
                            Name = "Valuation and pricing review, EOD activities review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("543ee99d-cb49-4300-8110-1e5442e68330"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6833),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("0de5863b-7fed-494b-9cec-45d9a4f1f25e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6834),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("8fb82ff3-1fbb-4d97-ba12-8c4b207c9fa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6836),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("76310154-8374-4034-857d-6984388ae786"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6837),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("3d1b1000-9ee0-4463-8384-c409e3696f29"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6839),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("015a8315-f493-431b-92e1-a05ad1730a4f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6842),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("bc6752fb-050f-4dd6-82e3-1859f34056f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6843),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("2e7ace2e-c9e7-478d-84ce-32c39433bc00"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6859),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("29987505-0cd6-4daa-b9fb-072e1b8c9b65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6861),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("1fd94076-1e89-411d-8775-63ef1ab57a77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6862),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("a5cb9b28-3363-4e8a-ae00-2d17200dbafd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6864),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("1f62985e-d279-49fc-b4bd-b0b95082ddc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6865),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("ba752f75-d546-4e3e-8363-3b067121457f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6867),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("1def2d67-bdef-46e5-9f3b-fb1ae4360400"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6870),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("d91d8fda-f9f6-4826-8631-5278e7ba9ac2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6871),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("ef957522-6b00-4a03-a7c1-c5f07810cd1f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6873),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("ab060125-4a9e-4648-a326-0a0353a0bbf3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6875),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("d6b9889b-7499-4e26-876b-5d8df4ef9338"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6876),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("50b17c8a-fc95-4c2e-a29d-83c087e1c605"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6878),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("7a87f80d-ca08-47b5-9dd1-5463e77809f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6879),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("d3bee5e0-eb35-46bf-a74b-e963cc604a55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6881),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("20ccf02e-9eb5-495c-ab5e-59bf6b1eb84c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6884),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("3c052b7b-d48a-4309-a9c9-c6c1a40b0a1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6885),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("8538ed6d-0fd6-45b1-a718-448b94e4b43b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6887),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("c9fd6d9a-ea53-4025-955a-696a355b21fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6888),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("51fbba4c-29c9-4026-93ba-8383bfc7e772"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6890),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("192f1729-029f-47df-9374-02b5c0470e8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6891),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("d97c9681-33ea-4ff2-96d7-d1c6b528b6bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6893),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("1f394b19-565d-463c-adaf-f019c92968be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6894),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("cac495a9-503b-4178-9e53-ba7f5715ddb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6897),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("eeed40f8-5315-4d35-b8af-880544e5252a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6898),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("55e61d81-04b8-4cd7-a759-c1abf1916aba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6900),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("61f6e5a4-6b22-4980-9b24-4b97a60f5e66"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6901),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("0e7d4808-cb44-4440-86a8-3c028c5055f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6903),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("46c6f4dd-8ea9-42e0-9742-1dd663d8a403"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6904),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("330c5eed-4757-43ef-b28b-c7986dbf399d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6906),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("a7ca3b70-98e9-4700-ae81-34ab56603e58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6907),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("7c11e05d-8765-4cba-94d4-a2d755fcbdaa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6910),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("ce24bc77-ae4d-47d0-9c2c-1946e114055e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6912),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("b7737651-f9bc-4ae6-8b05-68e55e2f5134"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6913),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("7dfae287-ead2-4df2-b568-f3e27fbe484c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6915),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("eb919554-2a38-416a-a799-c4b0fce96f25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6916),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("1d035467-1b39-41e7-beff-8ecbb4263795"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6917),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("1c48e8b0-b344-43e3-adcd-e08de57fd837"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6919),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("0b3b65da-5fe6-471a-9876-15e07dc711c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6920),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("d87c7353-4292-4191-a1dc-a3dd8c9ebc6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6923),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("e0da6c67-8afd-4eb3-b8dc-63e3a07cc301"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6925),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("aefcabcc-0354-4f9d-8cd8-fde08bf73cda"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6926),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("79352797-b025-4c08-bdb3-8e439ee012af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6928),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("1a38cad1-c5c6-4aa8-bb76-a55e982d1ace"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6929),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("fb875617-1ea4-4765-a2d5-698334b0b643"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6942),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("670866f5-e7fa-48e6-945e-4f066e4f9284"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6943),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("d834cca1-0f99-4b66-ab93-06517d6e52a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6945),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("5e3900aa-fd4c-4390-b644-dd6287c07686"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6948),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("50806187-2205-48c6-b085-4ec59b09b217"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6949),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("140c22a1-6252-4066-9239-599e5cb99027"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6951),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("7c9b434e-b936-4cfa-a631-0aad4f8ba821"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6952),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("bbc75232-7696-4f87-8550-dfe5ec49291d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6954),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("148004e2-6dbb-4c79-815d-f8fc9f4b3f17"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6955),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("01413efc-6658-4470-ba41-cdf0f297ff78"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6957),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("a4e4bc8e-10d2-4660-97c5-4504c97d63a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6958),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("ad0a1803-4aa3-45c2-a86b-f22a7294c7fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6961),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("8fc0f72c-1e2a-4ee4-ab3f-7080235be49e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6962),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("c4b603e4-7005-48a3-918b-3beece854776"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6964),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("4ad709f3-f401-4d55-a871-522476dea249"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6965),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("62a07470-e89e-406e-9c54-147d10653d59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6967),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("081b50f7-b39d-41f7-b6f0-292fd707fd4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6968),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("6529360f-ef7e-495d-890e-cb5f61d223da"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6969),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("0cdd8b92-1189-4bc8-a179-d7266b0a4ea1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6971),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("dfe5c0ed-53dd-428e-8a4c-2b50801e8a05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6974),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("bc7473ea-a7bc-4560-8804-23de1eeb14c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6975),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("65798965-c7de-4677-bf49-b675c9867957"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6977),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("63a72041-80a7-488d-ad01-24f8f8494127"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6978),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("28f04892-6785-42cf-879e-81ff11ac0bdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6980),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("88d43e07-0ac7-4b4c-b0ff-069ad1833eef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6981),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("75bc5dde-66d8-4b88-91f6-21df17b9ca13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6982),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("28decbb1-e282-4c58-b3ff-45d1389bd631"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6984),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("d12da58e-7456-4159-b778-dd02f711eaa7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6987),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("99c060b5-5146-41b1-aea0-ae773b832182"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6988),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("86b60b35-d902-424d-9919-9ef8489e1c81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6990),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("3bff7db0-97b9-467c-842c-ba8acd2071f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6991),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("374ad76d-d405-464f-bace-aaf0b2e8445d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6993),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("65f816b1-247e-4771-a27e-adc35c29d7b6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6994),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("7fde11ac-6323-4f1d-a471-7b9c734a52a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6995),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("24a5d205-83ed-47c5-9a16-ce5ee97155e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(6997),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("ad345881-a082-4c8e-8cd9-361bf2553d20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7000),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("b3e37b8a-3cb2-4af0-b8ab-053c0b9f48e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7001),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("97b49880-865f-491e-93d0-0c5d33276b5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7003),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("3ada9acc-a0e1-4639-a9e8-85436ae99d92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7004),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("4863b108-9151-45c4-a7f8-8c5d68f2101d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7006),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("7d6ded53-d7b1-45c6-8f4d-5d9f7c1d6cdb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7007),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("a9f6be31-36ab-4f8f-8e35-2e9621338ac5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7009),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("93cffa97-e75b-4518-a5cc-3a2ff2f1e306"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7010),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("ccc2b56f-3bf9-4e24-9c7d-bec29790dcba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7027),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("3912a560-edd4-4d00-8e0d-5828cc192d52"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7029),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("2b16dfa5-625b-4c68-8645-5e12122c5851"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7030),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("85d61f69-0abd-4a3f-a156-a7005c2b68f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7032),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("63163dd0-1a04-42b1-83e2-9c0432bea822"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7033),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("e8fe3fc2-7827-4f66-a14a-98ddba6dcc04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7035),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("82e668ad-c70f-4b66-8d4c-10376b437d58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7036),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("f8d2b3c2-3bc0-408a-8b3b-b984894037df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7038),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("00d463cb-c557-4246-b94f-aa2cf3616446"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7041),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("e9bccbd8-4437-4339-906b-4071d18e189f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7042),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("637fdf9d-8417-41a2-9230-cf5fa50303dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7044),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("bfb96c5c-37d2-4ee9-a76e-0b141149123a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7045),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("c61374fa-77ec-4277-bf2e-343d64dee4e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7046),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("7e95111d-b793-46bc-b567-f07c0138b92d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7048),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("21c8ddc8-cb3b-42de-a43d-eae611acd4f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7049),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("46c0ef65-84e1-47fd-9ee9-204a70b618a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7050),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("06ee60dc-3508-4680-b139-36b957035d7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7054),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("7b8073b5-240e-44c6-a0ed-d58a9345c38f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7055),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("a0928d67-7504-43e1-bddb-3b86fa91aba6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7056),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("21d4460c-4977-4bc0-9675-3ed52f32fdc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7058),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("b7f3ada4-bfa7-4e52-bd17-4f056dc734a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7059),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("08be68f2-0508-4c0c-a26d-ac28be16ca9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7060),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("c058ae88-0ed8-4500-9d47-8beb572d338d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7062),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("552b0238-5b28-4464-a430-8b45cf35ffb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7063),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("c1a3ae23-da0f-467d-9d98-a1a6c4c885ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7066),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("e1543a2b-f53b-47fa-9e47-53774a04c98d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7067),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("d5d9d288-7283-4690-b9b2-7516b7e40d57"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7069),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("51c69d0f-2489-4b0c-8d7a-1fdad1d92005"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7070),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("1ec6f721-1418-45ed-ac37-b7396a06c8c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7071),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("51df3972-cf92-458b-9c8a-dc9ca28bc023"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7073),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("f7f4e75a-0235-4832-adc5-53d5c688a8af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7074),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("d1ceb4f8-531c-44fb-b33f-3933dbd35ca7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7076),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("c014f0b9-52ed-43a2-a9b8-a6f71f0da87a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7079),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("4fd9599b-d9d6-4630-babe-dcdbbe80373c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7080),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("ef287766-0f2a-4d95-a554-ebba2d15d10b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7081),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("3777f96e-8ffe-4062-8101-d9da215057de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7083),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("d6caf89c-16f5-4362-91d7-97765ac59707"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7085),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("8fb34734-8542-44ae-b396-886e980802ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7086),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("0fff6417-97b9-4c3b-acc0-03998c4492ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7087),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("9da113c1-c790-4e31-a8d4-a1ea4f28f834"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7089),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("f6fe551f-26b3-44fa-bcf3-a3640e0e80fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7092),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("25aa4d6e-cf64-40ee-a1db-b7fff41febc8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7093),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("be574bd0-b69f-46ad-a9de-263babf078a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7094),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("b6225a11-bed3-4efd-9c24-f47df3e3edd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7107),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("34c6470a-0d3c-4553-bec4-9b3c28f37196"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7108),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("9113c0d9-dca8-4715-bbc2-88c1fb900360"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7110),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("36094cfb-924f-4652-87e8-3168dd8176d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7111),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("562371f7-c66c-4cbf-ba45-b658d669a694"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7112),
                            IsDeleted = false,
                            Name = "Trust Client Acquisition",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("5f9f8585-61c0-499c-aa1e-e41b9e3bb751"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7115),
                            IsDeleted = false,
                            Name = "Client Request Processing ",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("f9b1d1b5-8188-483e-b35e-fe85a6c26d4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7117),
                            IsDeleted = false,
                            Name = "Client Investment Monitoring",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("c28f0a3b-cab6-45a9-a194-378b71410742"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7118),
                            IsDeleted = false,
                            Name = "Real estate asset management",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("65f07511-f56b-44c7-bc83-b5714c7b578f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7120),
                            IsDeleted = false,
                            Name = "Business Development",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("26f0bbc2-bcc0-4053-9d0e-801e4d69fc10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7121),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("b4fbf590-6634-4fe4-b0be-9b7a2a3248f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7122),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("3a150e7b-5469-43d0-9988-98748c3ac57f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7123),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("8da835ad-9c05-494a-9187-1326da7c45fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7125),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("82828966-fbb6-4e11-a342-a6b1dd258e56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7128),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("1ad84dc2-4d06-4ff5-9b42-9a332389eadb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7129),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("49fd38d8-be59-49cc-ac3c-61e3c16e6835"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7130),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("317ff6fe-7f33-4a01-8e6b-faba57ee3474"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7132),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("1d3844a8-1935-4a14-9d9a-967f1d1a7579"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7133),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("929fa2a0-1402-4d3e-b04e-35a71a4ee569"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7135),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("cf38d0a3-2975-4e30-9b6f-5c716636eca1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7136),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("c8d32920-6726-4311-85d0-9ee0061dec2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7138),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("d8d61c04-7a93-4b42-b917-786e8237788f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7142),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("479b5680-8245-47d3-8ec2-ca65164e3bb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7143),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("95a28c47-b674-4387-9a93-ab96e96ebb44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7144),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("8220a18d-744b-49d8-a185-050d4de1f6c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7146),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("97e7ae2d-0c2c-447d-929a-fb8a82b7df3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7147),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("6d7ac103-cc81-423b-8acb-0da1c0d4aa4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7149),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("6723c0a0-608f-49c2-95ff-28bbc7213271"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7150),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("c775cef6-927b-456d-b9b1-c31421f4c819"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7151),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("2729a895-5978-4b9b-b475-7620ebc23665"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7155),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("5a70682e-a2c0-48c9-93b3-c91da0bc7197"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7156),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("1b4197a6-b58b-4a60-b795-4b39cc1702a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7157),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("d74bf58b-5068-4b5c-825b-7cbb28e3d667"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7158),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("23adba83-533d-44b0-a756-ae2d1b037350"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7160),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("be0c79d5-c3c5-4593-b127-b26dc4f3f9e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7161),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("a2c06b86-eda0-4cb0-be6d-2902eba1406a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7162),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("adca26cd-be33-4df7-979e-a361be94c83d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7164),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("a9049024-c279-4c81-b491-475a37950f93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7167),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("e2cbb371-99d0-4c92-965b-9a2624e34e08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7168),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("49a93d12-afb9-4c02-8440-fc0fe3af58ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7169),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("94816ad9-7e27-4db7-84f7-0e2f7575f029"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7171),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("9cc7759f-7f5a-428f-8398-7006ffa04a4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7172),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("b23abcb3-e646-4ce0-bbca-71e8b84cdd51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7183),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("69faa90f-3fdd-4d9d-bb21-c515834e04ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7185),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("ff5e4a52-f8e9-4284-a12b-d640b1004db9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7186),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("3132ea04-6f1d-400e-b1e2-7af78e146972"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7189),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("aa6ffc0a-55e3-4da4-b79a-64be5395fc14"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7191),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("48ce9973-60ed-4962-af07-74349bde45a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7192),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("eac4327e-b153-44ea-ab86-11b9dba7974e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7193),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("b36c894e-cc51-4c5a-ad98-a84cc1e018cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7195),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("bfdb0ad6-ae13-46d4-8419-4b40f5dab20e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7196),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("197e8fcb-b185-445b-a7e9-bc7e5473278d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7197),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("078b3319-fb3b-462d-b080-122773e6a879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7199),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("7aa46524-42dd-4ea6-8ac1-e1aa1652e2e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7202),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("75f153f3-9b62-4159-aa79-db496e522c78"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7203),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("ec521a6e-c145-4bab-9e9d-19080f9a209d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7204),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("5e698ccf-9c0b-4835-90c0-312f137d1a91"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7206),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("0195b4a8-3cda-4966-a668-e7411c322868"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7207),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("ae5ae485-c808-4d39-814d-55b7cac03846"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7209),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("0b3c561f-d6d4-4581-ac84-b25633ca315d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7210),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("804b6958-bf26-4b47-a5ad-04aed2ed4e8f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7211),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("a74204bd-1747-4ddf-8cb3-88dc7269ca03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7214),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("c857a341-cd69-4539-9f11-4b3918a03411"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7216),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("a34b618f-7691-46e6-87fc-f9c172422ed3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7217),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("1af2da8c-2c54-4dcc-a779-d9ee72669b8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7219),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("de54ad53-cd40-44ca-a9ec-7497065d1b1f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7220),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("adda7967-5247-4fb4-afa6-04e15ce55cea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7222),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("84dfc6db-a328-4fc8-ac60-3b7792cbd03a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7223),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("e93f31c8-92ed-4131-9e65-0693495a0e83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7224),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("4d1303a2-c695-4b8d-a810-9f5ba45c5d7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7227),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("a8f171df-809c-459f-a28f-a7c9b7fb97d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7229),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("2d485eff-a706-4806-9820-63bacc825839"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7230),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("9ab029bc-d5e8-4990-b087-274667627e24"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7231),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("e73c890c-6ad6-42db-aaf9-299219c8f9d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7233),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("1795e1ad-a9c2-426d-91f4-802ee52b717c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7234),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("9998a291-690e-44b4-a1ee-4178d9696aab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7236),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("33b7d625-58b5-4ac9-b51c-84a4e05c599e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7237),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("2bd4dc0f-0909-40d9-85b1-0d2c97303ad0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7240),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("a474f4a2-1142-4313-9699-643bb4245780"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7241),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("8dede1e7-61b7-4345-bd05-88de832fd1bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7243),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("6c7cbbec-8a28-4dbb-9b1e-b3e5b714bb60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7244),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("31b1ba8c-5e7f-4001-80ce-02cdd918139a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7246),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("c9d0f4a4-7aca-455e-a5a7-824a6476f172"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7247),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("29f7d532-75ed-4dbd-b7a8-6ace109c4ad3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7249),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("44e64164-7e29-46d3-9528-0a45a5cabc16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7250),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("b6947b45-7dc3-4275-b6d2-3f3cf55bc276"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7264),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("d1dfe238-87c9-49fd-a357-861c74eadb01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7265),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("14c0e726-866b-442b-a64c-eb941ae6e40a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7267),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("dbda1227-906f-428f-9d7a-70c9fdb01c92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7268),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("58525545-5398-422f-954d-2775d85c73f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7269),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("dc163bf3-836d-4a1d-841e-2e8d93a4f1d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7271),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("9b1ce1a6-f929-4107-9d04-a674380ebfd7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7273),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("7478709d-3dbb-4300-b99f-e8a12c65e93e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7274),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("fe49508b-966e-44cb-86ef-9f9ad5688cc7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7277),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("563c56b1-d4dc-4ebf-b6ab-addfcf0852f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7279),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("032ce321-ecf4-4f29-8866-4709c5d6f0a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7280),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("ca5c0c3c-29c9-438e-bea9-087085760c69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7282),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("905d47c2-1d2f-4d83-8cc7-6895424f62d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7283),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("e9aa21bd-8daa-4522-8bbb-9b5e1fe1361a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7284),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("8d04b27d-2afd-4867-b997-c6e2adcebb1a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7286),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("a269163b-b103-4394-8ef6-bcdfa93403d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7287),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("035dc96b-ff2d-4e21-b76a-9bcf17a16c97"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7290),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("3c58dbce-f754-48c0-bfb6-3353bd724f32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7291),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("d92fefaa-0dff-49b6-aa17-da1fb3786d87"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7293),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("0d8e1d0b-8dce-4720-9f0c-74ec7084031d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7294),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("e2c4c9d0-f340-4d20-b02c-ff5e173bccac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7296),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("6dc07c76-514a-4e16-ae8d-f8ae6194bfa9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7297),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("f8c99227-8f99-4d5e-a687-2fdaeb741570"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7298),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("632bec71-d5cb-48c8-a81b-30a6743b58ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7300),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("534e2e3e-f0f1-4744-89df-e922e83bfa63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7303),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("8b34721e-0d6b-4405-9c1b-08c291c77ebc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7304),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("56a87cd0-d215-4e0b-8324-9e0cd840f1e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7306),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("d309c8da-7344-459a-bfa8-e1698fb6746a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7307),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("ef53c31d-d45a-40a0-8bc4-6d5420d7a2f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7308),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("4b00c5d8-ef5e-4484-b1b1-d314a8a665ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7310),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("7f80fbb6-ee49-46ad-9f31-4decb716a424"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7311),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("1ef6f9d2-8871-4c1d-b501-198f5a224bb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7312),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("21c66bee-9a97-4544-b854-9284d1f7c42d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7315),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("8ba18760-0355-425c-8245-1c45ad0900ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7317),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("07b3b2a5-53a6-4d3f-8180-f579a6d21558"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7318),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("af5e574b-a1c8-47e7-b21e-484bd148c61d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7320),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("43c3a20b-53d2-4629-858a-9dc733253b0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7321),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("9711258f-5591-404d-a561-17da1d16423b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7322),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("a5de5c51-0030-4999-a5da-2e8d1bb61739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7324),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("c6ab6873-e12e-4eaa-a2e5-9d9915f1bd45"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7325),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("c671087e-cefb-4584-9d8f-03dfd4247c30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7329),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("6177a869-2f32-4be4-9381-7686a743178b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7330),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("42b50ec9-11b4-44dd-8ea1-9fdac5489b84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7331),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("cb0401fb-ff81-433a-9b2d-7e05483528bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7344),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("d390bdc9-7b0e-456d-94bb-937910c395ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7346),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("8167f67e-7ad2-416a-acc1-cd957d7f280f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7347),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("32802ee7-b8c4-471c-a470-b0d748f36b89"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7349),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("da2dc254-082e-4b6a-b6f8-7d4ce4497104"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7350),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("a20e5c09-c93a-4c79-8c46-4363fb7a39d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7353),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("c613a7f5-9195-4091-900b-27a368bb2d50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7355),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("06e4e408-35cc-456c-8fc9-900f6ed721e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7356),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("d597077d-bd9e-4b26-8e54-1b8863782078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7357),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("b2717f2c-3728-49b7-9f33-41020b4198ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7359),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("9e9d889b-b087-4529-9bae-ae2a7f9fb639"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7360),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("bc0f3323-a4e7-40af-a0c7-9afd29920e14"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7361),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("07b8809d-3dfd-43ed-8db3-9e9bb2cbd243"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7363),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("eb5c48ba-729c-4f4a-946a-fde3aa89b011"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7366),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("e63f53a8-51cf-4c7e-9589-01a0a7fae268"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7368),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("31de2d78-2564-4d5e-ba19-6d9c10552b11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7369),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("4a4615dd-df09-41c0-a119-da9dc109d41c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7370),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("2f0d7630-3ac9-4bee-b132-63c7aef11a50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7372),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("41fae743-fd01-4a14-b1a6-0efbb136664e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7373),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("3f3abad8-547e-44e9-88b2-df254324d9e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7374),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("d553850e-26a9-41e6-93b8-54550b08946b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7376),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("239657f6-ef6b-47cf-a008-d938b5cc3415"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7379),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("d34308c7-dd23-47dc-aeb0-a5e8392b1501"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7380),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("85f2d149-829d-4f38-9bf8-c1e9041f4908"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7382),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("e8226308-4190-4a7e-90bb-629bba4dc8e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7383),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("f8f581f9-fdc5-4265-9da5-a9bce25cd6d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7385),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("163f6a8a-63db-4e8d-a210-0e52be6b05d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7386),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("c698d9b9-38d6-4b0d-b0ed-fab383349f2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7387),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("ee32bbb7-421e-483e-9b71-f7cf60e1fb01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7389),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("5556fa7e-79e0-475b-8d81-2165d2235eb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7392),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("63aa4eab-e7fe-4ce1-9680-bc09298de6d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7393),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("409820c1-22ee-4d23-913b-2ca2eaca9571"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7395),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("9004ce4c-2241-4bf0-8469-ebd7453074f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7396),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("f1fcc0c0-cd8f-4d65-bea8-affd75e875fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7398),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("41cbcc6a-9b6d-4d0b-8a9f-a173c11ab0a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7399),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("f19e429e-3725-4731-af15-6c1414ff8052"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7400),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("6ab927b0-efa2-4c20-b1e3-8a31d675551b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7402),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("af176cbc-5e3d-47d7-8221-645abfa5d34a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7405),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("f98b4349-1f84-43ac-ba7b-03b7ddd4312d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7406),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("84f6bb78-ca83-4dec-958b-5b514631f59b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7408),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("62077111-4ffd-4078-a0d5-49d3c3bb7537"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7409),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("1b0a9c6d-7f83-4beb-9cee-e77be4078482"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7410),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("3c01eb5c-f769-417a-b977-6ad96d1a890f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7423),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("31cd1f83-b1d2-4731-bfd0-c04b3e54902b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7424),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("89832ffe-9305-4365-b84e-3d5451daa279"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7426),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("dc45d323-6476-4634-b19a-e8226e47e85d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7429),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("6d67e974-871e-4ea6-9380-1317f7a95149"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7431),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("19895bb3-4c1e-40fc-98b7-fb4b24916402"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7432),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("ec2f3ea0-316c-4ee4-a793-1811e1764319"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7434),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("ee5bbd74-3448-410a-981c-7389eb34f418"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7435),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("8ace8fe7-3c07-4ea8-a6f8-9a789bfb7ad3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7436),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("2dcfb637-23db-4871-9e01-a4b5ea128adf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7438),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("47aa4444-4e16-4f0d-aac4-40d2512b8d48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7439),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("0285f2de-9c65-4c34-9cac-a8ae5316dc75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7442),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("3a2705a1-8584-43cd-944e-ba5547565ff1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7444),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("74f0e372-b80a-4adb-b04c-86f18609a447"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7445),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("bd092267-15a4-47e9-a2cf-69da9cafadb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7446),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("5a1309eb-2404-478d-b2e5-7c6c8da1587a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7448),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("3a62af00-4b43-4b79-91ca-e08a5d374ad1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7449),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("997955ec-4dca-4ded-81c0-53a24cba174f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7450),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("c39cc4e2-ac60-4612-a8f0-f967da6b18ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7452),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("295114c9-9394-459e-ab5a-0efb585a07a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7455),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("96ad9a6f-630a-4e95-a9df-3400efada6f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7456),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("4e02d2cb-4483-488c-b9d1-af149edc2ffa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7458),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("a8eb0491-819b-45b9-b8c1-635d1b7555b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7459),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("698db243-8e24-4813-bfb0-210201420a46"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7460),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("8679c408-7f60-4901-92d0-698e99579cb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7462),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("f5824748-5c08-43d1-bc4f-d6ab753a9f87"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7463),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("137f4783-2669-4b26-9068-dd4a817a70f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7464),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("f11f61df-419b-4e81-adcd-469e919a959a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7467),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("ebc4b156-7eaa-46a1-85c8-808c8d2b0828"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7469),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("44842654-a466-4731-bce5-edac227881d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7470),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("510f3b53-ecbb-4e2f-aaab-3de641e3f311"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7472),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("a18de5d5-5e39-40e1-90a8-8799d9653246"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7473),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("04f5fb39-cfba-4b93-a12d-19fa7685dfa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7474),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("640d7691-a8e1-4f98-a67f-16902d61b7e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7476),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("9859f1f1-dc81-4357-8d2d-61a2d91ef641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7477),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("d212a64c-b5d2-4cb1-ad79-cf9178c008d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7480),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("5567ed9e-670d-456e-816a-bf11f54ec3ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7481),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("424a94b0-34a1-461e-8c41-054b9a096460"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7483),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("983484b2-95ff-437a-9b17-32cb3c7bc66d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7484),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("dd4e0c9d-3cd7-4cd7-85b7-df9002ede6f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7486),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("977ec317-2a9c-4139-b808-9cedba54ccf1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7487),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("ccbfbbb5-0094-4d4f-8371-d8c9ee756915"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7488),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("7763fb97-02dd-46da-80f4-198a88346b8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7490),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("82e9ee36-0413-4d76-bb1f-66b0b2f6a28e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7503),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("7c7efb58-ab6d-4d65-818b-4f3c39dca3f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7505),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("fcb3ba7d-5344-4c69-bb39-3d7c1aac1c7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7506),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("f8336392-32fa-44ca-81b4-065286960da0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7507),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("aacb5deb-f980-482c-bcd0-c1f7538452bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7509),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("7a19429d-ae35-4edf-831c-3565e96057e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7510),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("718a4f89-0167-48d7-b894-6d04ab06e2e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7512),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("0badafcd-b3f6-4db8-aa2d-0074ae74fbf7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7513),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("c7a0e538-d624-4c55-8ddd-d5fe4517e0bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7516),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("bab810f7-a13c-44ee-9fba-56d108c5ad9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7517),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("59457bbd-b05e-49eb-a80f-ad6219f8e7c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7519),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("c1bbbf7d-9f12-485c-9fde-bbc3173f4558"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7520),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("40371f7d-895c-4796-8ca7-e0c341d82801"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7522),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("cef62c7e-5367-4cbe-af33-fccbcfcc7a88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7523),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("96c92e65-fe7b-40e8-b834-f6ade97fb01d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7524),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("9e7ee42b-6971-4ef5-8349-79503100e02c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7526),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("2ffcd993-9630-4d96-a917-46fd5e6f3723"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7529),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("b096826e-d1c3-4484-ad2c-08f3c3661208"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7530),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("c3c98d6f-8bb6-4142-923b-c710f3e8145e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7532),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("2f5aadca-3846-4faf-a9bd-b6af90d31032"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7533),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("8efebff1-58aa-4196-a3c3-ff63b030b132"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7534),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("c2660038-0f79-4c2a-b0ad-b8c5a40ff0d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7536),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("9b58569c-ed89-432e-a545-dcccffc5aecb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7537),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("801c5bcf-e0d5-4c3e-814e-0967da9c54a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7539),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("327e3641-8676-4bef-b882-c20db15e4cb2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7542),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("0289264f-bdb2-4741-8775-baf8efeac66f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7543),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("343daf03-4a49-4b89-9080-e7b794fa3955"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7544),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("be2eacf7-6d6f-4666-af56-295ebe502343"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7546),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("3a08fc4d-b6c5-4fb9-8a9a-4e01b41a5dd0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7547),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("fc19a322-34d9-4fc8-aa64-9a2258a8ef9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7548),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("744f75a2-3bcb-44fc-86b6-7011dde8139f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7550),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("362ad948-6e0d-4045-8d1a-97f1345f45bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7551),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("e88c17ae-55a2-4a9d-a039-4ce774674760"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7554),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("d3c99f50-f6be-438a-b81c-2b8600cf8764"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7555),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("10b72dca-7e79-4158-a207-6bd5c516f000"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7557),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("22c9834e-18af-4812-9589-b37523fe2cee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7558),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("71c9c926-bcfb-45ed-bee9-57a4b8042159"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7560),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("3dd330a4-df29-4378-a5e3-4608da689b59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7561),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("eacb3768-133e-4347-818f-c452369f8065"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7563),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("7bc50e14-4121-40cf-8d93-e9729b8b3f24"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7564),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("37a836f4-e62d-461f-af9c-66c9d7c0a7be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7567),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("4e9cb589-7a8f-445b-af6f-2db565562fd0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7568),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("4472b279-1b53-451e-ab00-7a886d4289a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7570),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("8c81626b-59e4-4ba6-bcd5-aa6d96dcbb19"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7582),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("416da050-70b2-49b0-a5d1-a2809a451fff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7583),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("7e24a307-49ab-41ef-8a38-a98930f2d939"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7585),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("155431d8-4ff7-4ac8-a165-7cb7ec039daf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7586),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("53a68f57-b0c7-47ee-b80b-c72a4eeed303"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7587),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("a16b6a72-92a1-4e98-ba5a-0ed7e4242bf7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7590),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("629870dd-51b5-427c-9df1-41120560263f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7592),
                            IsDeleted = false,
                            Name = "Develop Marketing and Corporate Communication (external and internal)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("108e77ce-9131-4d88-a305-5a9b6b5fa5ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7593),
                            IsDeleted = false,
                            Name = "Production of Branded Materials",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("3b8da873-c407-46d0-91fb-163317f72d06"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7594),
                            IsDeleted = false,
                            Name = "Web Development /Update (this is the process of developing or updating web pages)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("f37c9f9c-809d-4218-af67-6e234a653624"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7596),
                            IsDeleted = false,
                            Name = "CSR Evaluation & Sponsorshp Selection Process",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("7dfeb570-b85e-47b2-9ac9-cacbfe76864c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7598),
                            IsDeleted = false,
                            Name = "Budget and Planning",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("294b44c3-84e9-49f4-b612-ed01c6e7251b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7600),
                            IsDeleted = false,
                            Name = "Bank Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("64c06de7-8db5-4e43-8aaf-29c7f6af41b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7601),
                            IsDeleted = false,
                            Name = "Create Asset Master Data",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("b985a5cc-5d61-4afa-bd9b-019ac387b98d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7605),
                            IsDeleted = false,
                            Name = "Asset Disposal",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("7a924053-d99e-4e38-9e19-4d257f2ddea8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7606),
                            IsDeleted = false,
                            Name = "Invoicing",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("fb24e1d1-4ec5-46bb-ac43-30728404b9b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7608),
                            IsDeleted = false,
                            Name = "Process Payments",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("463570ed-cc5e-4a19-95f1-6104fef5e6a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7609),
                            IsDeleted = false,
                            Name = "Cash Advance and Cash Advance Retirement",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("304e2f16-65a8-4c33-a873-1bf5b0d155b0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7610),
                            IsDeleted = false,
                            Name = "Reimbursements",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("2fa4e7f0-1999-4c06-84ef-3f4da7600e9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7612),
                            IsDeleted = false,
                            Name = "Investor Notes Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("6ea7755e-2c29-4396-a39d-99a51b39b244"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7613),
                            IsDeleted = false,
                            Name = "STAFF DISCIPLINARY ISSUES",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("780b5c6b-a079-43f9-9238-4bf9139fb9c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7615),
                            IsDeleted = false,
                            Name = "TOTAL REWARDS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("acd28926-53b2-4b9a-afb4-bf654e98511f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7618),
                            IsDeleted = false,
                            Name = "STAFF FILE",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("e5f109e0-ac1a-4609-b796-b0b27be919a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7619),
                            IsDeleted = false,
                            Name = "PERFORMANCE APPRAISAL",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("69250a8e-a24b-445b-a283-272c69621943"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7620),
                            IsDeleted = false,
                            Name = "HMO MANAGEMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("8d0fc620-e6db-4118-8434-2663fbb84b5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7622),
                            IsDeleted = false,
                            Name = "TALENT ACQUISITION AND ORGANIZATIONAL DEVELOPMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("2670dc21-0bb4-4d65-902e-a9d7cf227f3b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7623),
                            IsDeleted = false,
                            Name = "STATUTORY DEDUCTIONS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("b1667a46-76fb-415e-952e-bc7b10ba11e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7625),
                            IsDeleted = false,
                            Name = "Staff and Visitors Identification",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("4d5f7bf7-834b-4891-aee6-39d271090145"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7627),
                            IsDeleted = false,
                            Name = "Staff Sign-in/attendance management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("98b87742-5cac-42ff-8da3-f7a4c0a22049"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7628),
                            IsDeleted = false,
                            Name = "Keys Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("184829bf-f28f-49c6-9469-2c4fc1a2d00c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7631),
                            IsDeleted = false,
                            Name = "Scrutiny of all entrants",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("de9548a1-f64e-4c1f-b6c6-3931851e348e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7632),
                            IsDeleted = false,
                            Name = "Cold Room Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("f38e71e5-003b-4f93-a452-cb4d1478b22d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7634),
                            IsDeleted = false,
                            Name = "Dispensed goods Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("326949ea-7ab0-4d3f-9325-7eddf94ee1d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7635),
                            IsDeleted = false,
                            Name = "Goods received register",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("f3c7bb65-2174-4048-913f-d802343a921e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7637),
                            IsDeleted = false,
                            Name = "Community Relationships and Development",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("e456f1fc-6af6-43a3-abe7-36b90c943b00"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7638),
                            IsDeleted = false,
                            Name = "Procurement of Supplies and Inventory Update",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("47ddd445-5552-4513-88c3-a34eadbd7af4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7640),
                            IsDeleted = false,
                            Name = "Store inventory management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("9c86db7a-31df-4975-aa36-7c3a9f1631df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7641),
                            IsDeleted = false,
                            Name = "Requisition Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("bca158eb-6d89-4b79-99dd-6729571cc842"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7644),
                            IsDeleted = false,
                            Name = "Store key management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("1b953d48-f7e3-4f46-9c03-bc4e628a0f4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7646),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("bd3480ce-b5d8-4f10-a341-bbf15f2d1a1f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7648),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("f94c8aa5-5af2-4030-88df-274116f8b534"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7649),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("b02502bb-b3a1-4b33-8bda-5cf035bda66c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7651),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("d85b8bd2-0ef6-449c-b308-ec466342d87b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7662),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("fc2f08a4-9324-4229-89d2-2f17b0fc824e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7663),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("02d9f900-5040-4d7e-bfaa-ae3086ec9184"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7665),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("dd26b867-868d-49cc-bd44-43b20355e77f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7668),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("57fe6e7e-34d4-4050-960b-5416cb9b2712"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7669),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("ac21f568-2db1-4e9f-98b6-341ffcc43407"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7670),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("4d5ba3e6-32e6-4cb0-a5f7-b06569215b45"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7672),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("d3575af9-d6a1-4688-835e-5862f982ade2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7673),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("34969227-e056-4796-b078-e29c52f77a71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7675),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("33515d7e-7d53-42e5-809c-1727ef02c8f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7676),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("eb0d5d61-de0f-411b-9d04-48817cb144e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7678),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("e4c2ef09-ddcf-421b-b05b-8a50bcb873a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7680),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("7ab0d4de-8d7c-476b-9605-c1260231d8c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7682),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("b50723df-0741-4c58-aefd-852c21cf0076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7683),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("41960ae0-b5b6-442b-840e-402afa1d5b87"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7685),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("9d01050e-37aa-4613-86b9-b4982e055304"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7686),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("74aec876-f588-43f0-a5b0-e65d3f90c83b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7687),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("f3b5ffaf-d899-4487-94f2-363bb8f7b644"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7689),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("3d8d703d-4b61-4e18-bf73-21f65e182ab5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7691),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("efa8c080-fb25-4477-b247-7d44777aca50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7694),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("fa56a0d5-c4c4-4da8-875e-c178e054a7ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7695),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("8ee8d1fd-c47c-45c7-bf0f-5da70494e7ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7697),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("db01e86c-0756-402e-ab79-ef00ece94f41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7698),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("57e628ea-a5b9-482b-b9ae-9b89a4658979"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7699),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("e765005e-aca4-43bd-be14-215a88b5058a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7701),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("a1bc0360-dbd1-4242-b941-a963d5b8e96d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7702),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("56d8811a-df0c-4d06-a97a-425ab27b7e99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7703),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("8f2dcb9f-4abf-41f4-8a37-126804ee82e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7707),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("e56a4ef0-9d1a-4b8a-aa30-c5078713357b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7708),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("bd2d513d-df56-4408-a1e7-06f2e0a2887b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7709),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("f5023343-0d62-45e2-9932-97552f850e0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7711),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("a95b662c-21be-4fdd-bc30-eab684efcaa5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7712),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("cc8e194c-8277-49da-aeb1-6cb73023315f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7714),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("26e399ee-8d20-4e61-9f70-7c0de979f502"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7715),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("c958adce-651b-462e-9a53-6583db14bc43"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7716),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("2d539444-e867-43a2-8b64-79b2469dc14c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7720),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("a0adbdff-33ce-4b35-87c6-0b161abc6593"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7721),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("7cbec083-d8e5-4e18-8aac-b51c3d720881"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7722),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("49b3eed5-2c92-4f23-a2ef-3f9421fb47d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7724),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("871de4c8-6027-468d-a2d8-292cf5911b4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7725),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("b189295f-191a-453e-a984-4290937e3439"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7727),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("83e1566e-e017-442a-9444-d6446171557e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7728),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("021bd208-300c-4714-bbd5-9a0c5864fc9b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7729),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("5bc3ce16-c44e-4527-ab2f-24b68166013e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7743),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("7bebfe64-2ba6-4235-b7cf-066d2a350a14"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7744),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("cc63d76a-d086-4392-9147-7045cf0bd275"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7746),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("dd3c74c4-0c2f-4465-9ee9-4977a381bfd6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7747),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("e9a05a72-9a5e-412b-9a49-91565fb27229"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7749),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("2b48c3d1-4e29-494f-8e94-241c7c3e78f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7750),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("810861ed-038d-4181-b3ea-5618512e3afb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7751),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("48091de8-9e6d-4476-9c0f-fd4d7a1a27b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7753),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("f82d3461-3b23-4745-bee9-d5e3d077c567"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7756),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("eaa492dc-a545-4e54-b8c0-5f944c441255"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7757),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("53f80cf2-5a3c-4b6d-842e-8361f5067fb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7759),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("ac32aa8f-0436-4242-a3ef-bc7145f9db8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7760),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("2fca70d0-744e-41e3-a8b9-11c42b7f3b30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7762),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("c3ece518-4949-4ba4-84a2-97c3d10538d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7763),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("eee5c3db-f646-430b-9119-a314d233e7e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7764),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("003440e5-5915-4355-8b54-2803b29cf03a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7766),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("eee11e74-ecb8-4458-86ce-a90c25538047"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7769),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("dcfdc38a-901b-4842-b773-bc979c042624"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7771),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("3ac884c8-3109-48c1-aeec-476fa7521f2f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7772),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("cb360d76-92c9-47b2-9d27-e7ef0068b464"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7773),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("938ae512-79a6-4090-b31b-4d76e8c888a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7775),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("ad963716-0452-4c24-80f0-63a13cf16a27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7776),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("fec7638a-825b-4349-a68a-65892b5dd64e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7778),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("c2c75da4-ca48-40fc-bb33-a81cfd25d604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7779),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("817ff3d3-e7f9-44bd-9575-14248ecd1e16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7782),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("15bcc105-86dd-49dc-8159-c4da525468db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7783),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("a69f55df-f320-45d2-a17f-72bd4a0a992b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7785),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("0600439d-c174-44e0-aa8e-f7f8d23b2a29"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7786),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("6ff3f3b8-2c86-492a-8301-0b6953a441fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7788),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("d63118a5-8fa2-4a81-87aa-dcc126531a58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7789),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("d4f5fef5-06f5-44a3-b11c-fff0054c3abc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7790),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("753cff80-125d-4d60-bcd9-157c8d627a57"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7792),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("496dad52-b840-46f2-a546-e2f58fad0e56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7795),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("31d8e88d-84b2-45a2-9714-10d7e14c1d31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7796),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("b185f08e-d5e8-4ed2-9b25-31d1abd6e269"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7798),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("a841b92e-1d22-46ae-bc77-46843dcd37cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7799),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("2641ab53-139c-4bf3-8302-1ae69561ea18"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7800),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("f65c237c-e1b8-4507-8869-549c0bfaf1ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7802),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("9c30fef7-a191-4dd9-9a42-d7583d0deb5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7803),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("5c128a05-04bc-452b-9178-686b89b7eb03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7805),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("2da1af82-d256-4536-ab3c-c78c019dd0ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7808),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("3f41a7fd-9797-446f-af43-fd11407a1d94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7809),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("c5fd54c1-dc9c-4169-a1d8-ff17c0d906aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7811),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("60ef8b08-c83d-496a-bccb-0f5a67e9503a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7822),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("84c303ec-ca0c-4c8a-a654-d3a4462a0737"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7823),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("f53fcfe2-1226-49fa-9093-6d00f9c7a672"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7825),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("ad5f05de-29f4-4c21-b66f-30fbb213e2c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7826),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("6ea96d06-38cd-4627-8b2c-5b1085a36e33"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7827),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("d483608c-0638-4bf7-af5e-224fb8eae5d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7831),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("44fd1741-44f3-457d-871b-598b03d885d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7832),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("84094c15-9e44-45c5-9dfd-e419a801e73a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7834),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("cb87d549-7eb3-45e3-92ae-d62056b219a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7835),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("c7a1b7e0-9641-4c42-8205-0e7dd4bb41bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7837),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("5ede9cf6-80c1-4471-a2c7-17a832181be7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7838),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("be39303c-6583-4c98-8589-3f8e8e6bac71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7840),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("c18fbd58-94df-4d31-aa07-5b3a06853a3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7841),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("5eecba1c-11f1-4501-a685-52ef718ed943"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7844),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("ad838fd0-7e2f-47f8-a51c-cb2d0c0c3639"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7846),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("94cdbf33-8d09-4b64-887c-0a8e307803ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7847),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("c324c53b-5517-4c93-9462-537c040fb642"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7849),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("1955433d-f299-49ba-8d29-9cda5b2d9a2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7850),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("506cf2b1-d366-4df2-a2c2-2be6eaf3c1b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7852),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("1a34c538-7946-4a98-b5b9-fcea4600a73f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7853),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("4c8d070a-002e-471c-8c39-a9ebd1f0c5ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7855),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("40bf6a5b-7822-40c5-9919-85b384205b22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7858),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("3d623141-2fa0-4179-912b-7f36175a3758"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7859),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("b9243da1-4df0-4cf0-b1db-93061cebf643"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7861),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("3c607523-803f-4992-9239-d7bf53679559"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7862),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("9db1c1ca-7a4b-4f1e-a21d-f4e6266ff952"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7864),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("060db317-e7d0-463e-837f-c71f5cb44ad4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7865),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("a5720413-4a28-449e-b766-bb861ca51746"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7867),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("cf0463cc-1631-42e2-ad69-50c1a8bf766a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7868),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("4da73460-0a2b-49d7-bbdd-990869dd019b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7871),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("d1f14a81-6d5e-4fea-8bbd-64524455252e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7873),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("d83309b3-4aca-4cc6-a8b7-4f446abfac11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7874),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("81953171-0782-4269-8906-2c993643ec22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7876),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("431efcdd-b05c-4852-bf05-a1a59b09e9c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7877),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("104c69a4-2641-4c72-99c5-63b1fb69eb70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7879),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("7478fe74-6b58-4020-b8b2-0bbaa3faee0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7880),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("be6cb6b4-f974-4bd7-8825-07785baf476d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7881),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("13bd0b82-a930-4ce6-8da1-06d61bd16089"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7885),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("4a512d20-06a3-4a26-a578-f0bd7c19f052"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7886),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("f81fa461-171d-40e7-bbe7-278f771be213"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7888),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("0d5179ab-74fc-4810-a183-84ee3361939b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7889),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("fb58cc44-bcf5-47bb-a75f-d253f405b326"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7891),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("0865bcb2-b583-4600-98cf-9e2bcb899834"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7892),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("5968960c-e8f4-4088-b08d-c55072139e33"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7903),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("7b4b9e22-a132-4ff8-a0a4-81b5d529b62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7904),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("1ff79574-9e4e-4086-88ee-db8eda223c38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7908),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("e3fb10c3-e7da-4c41-a3b4-6c26b0f5d38d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7909),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("6301cc81-7a63-46dd-a927-522fb1604f53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7910),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("458963df-0895-485b-8ff0-f72e24c4f808"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7912),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("ab2940f0-1721-48de-9476-fd874974a879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7913),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("bb1cd5f3-427c-489b-b1b4-7d40471c2b19"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7915),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("38378a7d-1404-4c17-a660-6a309957137d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7916),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("a9328c5a-324e-4074-be04-4beda05c9a3a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7917),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("df1ce01e-f614-41a0-b9bc-84da84105775"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7920),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("57fecba9-4439-4fdf-bab1-a4d7da703f0f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7922),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("3b400d9c-f497-450a-8e2f-109bb77edaef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7923),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("639a19c3-a92c-4056-b846-2e2322ae0ed8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7925),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("9f4456ad-5945-46da-b219-5b5e3a2011a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7926),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("ba6fe6a0-24b0-4769-9c3c-4f983ff44131"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7927),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("5c6fe7f5-ce8e-4ad3-9732-b33ed78291f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7929),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("dc430f4d-f284-41bc-9f4a-236fd967f494"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7930),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("c2d9f4da-c575-4af0-932b-e47b7e78e159"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7933),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("eb3e4615-371c-4f7f-bc11-c375b552b936"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7936),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("007a59e3-f974-40dc-bee7-d85ea8418d51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7937),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("329d07ac-387a-4877-a43c-aad7326e30ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7938),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("4486f550-5f44-474e-b787-e026eabe5fe1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7940),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("7afb33b5-ccc9-4a6a-bab5-024220a3f14c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7941),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("0bd8e20e-3d47-49d7-828d-cc317893ce03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7943),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("8b43b7b9-3e88-454e-8505-f81d664426e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7944),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("33c5d6b7-d7b4-4355-bd67-e5ba5e8ecf00"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7947),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("134d2f3c-5c89-4b52-876e-b1437fd9f4f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7949),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("90158f5c-69e6-48ce-b34a-dfb86b8d0749"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7950),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("b11ad991-7591-47de-b5be-680d0f9368e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7952),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("6dcb8063-7a89-4d3b-8db8-4769d6da8ebc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7953),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("633bc13c-efc7-4b59-8a71-5e81f4020070"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7955),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("386bd3b4-6249-4e96-a3ee-28eaaaf5e9fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7956),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("75bfc5eb-e521-49ac-9cd9-ceed4f7e50a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7958),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("93700e97-5a2f-4029-9e22-b6c10aef117f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7961),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("5a4d4a91-c9c8-4ecd-a1bf-84b63828d5fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7962),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("d6c2b182-ac13-4330-87fc-ef4d54f6862f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7964),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("fd522404-a891-44b5-94f0-122f8b352c0f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7965),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("fbe21ab3-3197-4705-9a06-330720e800ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7967),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("22cdf814-8fdc-43d5-96bb-d620fd50624f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7968),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("2defeb79-0bc6-437e-a601-1a065fe15706"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7969),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("612b51d2-fa6e-411a-9546-2c9ee35cbc6d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7971),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("5d8e434b-7fe4-4e6f-b05e-2211f8895ee5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7984),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("3a3f6c39-7959-4507-9aa8-879993152776"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7985),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("54d86b04-a454-436c-bd74-7d299ab64696"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7987),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("fbb5ff24-e922-4b82-867e-de0f79868045"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7988),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("f36d9e28-7486-466e-82e8-bb8f0a39ead0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7990),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("1840cc7a-789f-480a-8e54-7dccf1177673"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7991),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("b289c180-aa1b-44a3-98b4-6a5892159c44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7993),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("7b98a7c8-b297-47b1-a370-5b28785b87ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7994),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("362f44d7-f343-4c59-884f-ebec3de40d4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7998),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("294355a0-01e7-4d33-ae3b-aef1975a2e9f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(7999),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("33635f5e-f474-48ac-ba7c-b542c4f35ce0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8000),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("19936e6a-b89d-4b12-97f9-1164370a6142"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8002),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("25e4f0b4-11cd-45fe-bd02-f9ea92a554f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8003),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("26689f74-6232-40df-b5e0-ce9163b98756"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8005),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("6350d3a6-6752-461b-8154-0a3abc0beb11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8006),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("6d3ad7ba-ccb4-4064-aaa3-8beffe7e0d7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8008),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("1886c81e-7a43-4dbb-99f5-4b96fd5d37f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8011),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("770cdbac-6449-49b6-94e0-2d81fae02297"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8012),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("785b10c9-e06e-4b26-882c-00240bfc5751"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8014),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("cb255b0b-ec4f-4e8b-b9fc-8a853a69855f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8015),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("57d40f69-08a1-4149-99cf-615adce481cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8016),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("05bf08ca-1220-4ab1-b8d8-4fbd55d51566"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8018),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("d26567a2-0621-48ad-bab4-087fe11b8cfc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8019),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("ba4ba9af-6c22-468f-9053-07328d4980c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8021),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("567c348c-fd24-4dbb-b644-5579ed75de57"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8024),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("cb1b71c8-eef3-476b-9d89-257ffc25c74c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8025),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("301a6c5e-0bbc-401d-a69e-0bd2ee89c444"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8026),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("bf5492c2-b68b-49a6-840e-96fda27dfc7e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8028),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("29aa2106-8d33-4c71-ac54-38884199674b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8029),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("c4212d1b-7662-41ef-ba99-c004e33627d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8030),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("83e295a5-2cc0-4c72-b417-e6f48e385ae2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8032),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("d88d7d17-4a79-45c9-8914-6c0dcf376b18"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8033),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("48a2dda6-87ce-42ac-9b73-c4f6335f416f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8036),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("408f4900-1dde-41e6-abad-89c3b41fd9e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8038),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("a6f5d3e5-bf28-492f-b37d-f2997de179bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8039),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("812b1931-e35b-458f-9176-ad1331f074a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8040),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("e7567cb4-3c80-4f3b-92b9-f46a67ee5f53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8042),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("94d32a3b-ecef-4cb7-b01c-7837fefe367e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8043),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("c5f3307f-b071-47c6-9539-13ad07882c43"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8045),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("22183308-9f2e-4414-ade0-ea23b930d32a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8046),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("f71a00e4-0f17-404c-8cae-a53fb01b1635"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8049),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("a147519f-09d6-4531-aba3-4b450e4eccc3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8050),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("0d6d228a-de77-4e4c-bcbf-90760ff9668b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8052),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("3ccecdb3-5ee1-4a2b-a197-ee4f1e194d3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8063),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("7aba0252-4f58-476b-a404-34ecad300d84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8065),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("47cf963b-e6b9-4233-93ca-a0dec11a6880"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8066),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("79ae22c8-7fe4-49da-acbc-4ecbb42bf56a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8067),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("0810eb78-9b0d-4e91-b22a-4d7b13b1ef39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8069),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("b0028e72-4a8f-4cdc-95f2-38c8646084b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8072),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("e9e2c56c-836c-4e76-846c-6b59a74af8c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8073),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("3dc6470e-1e4e-4721-8c42-5b3f5e523f14"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8075),
                            IsDeleted = false,
                            Name = "Agile Delivery Process",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("5f044170-5f14-4d11-8fb1-75a6e02fd207"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8076),
                            IsDeleted = false,
                            Name = "DEVOPs Operations (Deployment to Production)",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("5110ad56-2b14-41c3-800e-7be571831382"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8078),
                            IsDeleted = false,
                            Name = "Functional Testing – User Acceptance Test",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("32f5c714-d299-4d9c-a437-e13e56245d46"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 163, DateTimeKind.Local).AddTicks(8079),
                            IsDeleted = false,
                            Name = "Post Go Live Support",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("RiskControlSelfAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskControlSelfAssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("RiskControlSelfAssessmentId", "Id")
                        .IsUnique();

                    b.ToTable("RiskControlSelfAssessmentUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ActionResolutionDate")
                        .HasColumnType("date");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("ActionManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountImpacted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GrossLossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetLoss")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal>("RecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<DateTime>("RecoveryDate")
                        .HasColumnType("date");

                    b.Property<string>("RecoveryDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RecoveryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalRecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("LossManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RecoveryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RecoveryType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("64c5f5ee-ff08-4c03-914b-57c7e01b391e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 160, DateTimeKind.Local).AddTicks(3966),
                            IsDeleted = false,
                            Name = "recovery1"
                        },
                        new
                        {
                            Id = new Guid("c359ee33-8b9f-4543-8750-2738d0ea9ae1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 160, DateTimeKind.Local).AddTicks(3979),
                            IsDeleted = false,
                            Name = "recovery2"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RiskDriver", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(3412),
                            IsDeleted = false,
                            Name = "People"
                        },
                        new
                        {
                            Id = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(3423),
                            IsDeleted = false,
                            Name = "Process"
                        },
                        new
                        {
                            Id = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(3431),
                            IsDeleted = false,
                            Name = "Systems"
                        },
                        new
                        {
                            Id = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(3434),
                            IsDeleted = false,
                            Name = "ExternalEvents"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9544),
                            IsDeleted = false,
                            Name = "Skills",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9562),
                            IsDeleted = false,
                            Name = "Motivation",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9568),
                            IsDeleted = false,
                            Name = "Capacity",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9571),
                            IsDeleted = false,
                            Name = "Industrial Action",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9574),
                            IsDeleted = false,
                            Name = "Process complexity",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9577),
                            IsDeleted = false,
                            Name = "Change management",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("269387bf-03b1-4b60-95fc-a62977783334"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9589),
                            IsDeleted = false,
                            Name = "Quality of controls",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9592),
                            IsDeleted = false,
                            Name = "Roles and responsibilities",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9594),
                            IsDeleted = false,
                            Name = "Adequacy of procedures",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9596),
                            IsDeleted = false,
                            Name = "System adequacy",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9598),
                            IsDeleted = false,
                            Name = "System availability",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("2094ab76-2766-4a88-9a45-fd5444570151"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9600),
                            IsDeleted = false,
                            Name = "System security",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("96912526-6283-4f3c-9079-769b5d08f06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9603),
                            IsDeleted = false,
                            Name = "System Complexity",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("00a54610-0522-4313-ac74-d39f550ff600"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9605),
                            IsDeleted = false,
                            Name = "Data protection",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9609),
                            IsDeleted = false,
                            Name = "Outsourcing",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9612),
                            IsDeleted = false,
                            Name = "Regulatory",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9614),
                            IsDeleted = false,
                            Name = "Legal",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9616),
                            IsDeleted = false,
                            Name = "Social, and natural environment",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9618),
                            IsDeleted = false,
                            Name = "Client / customer relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 161, DateTimeKind.Local).AddTicks(9620),
                            IsDeleted = false,
                            Name = "Third-party Relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverCategoryId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("20bf9169-be14-4d68-bf10-bb36894bee53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7582),
                            IsDeleted = false,
                            Name = "Staff selection (poor educational levels etc)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("fa13a5c3-5e00-4582-a505-97a1038dd129"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7597),
                            IsDeleted = false,
                            Name = "Inadequate skills development (e.g. training)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("a8cf1d39-7fb8-4f8a-a064-0c2f1ca50760"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7599),
                            IsDeleted = false,
                            Name = "Key man retention",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("82e0a692-e639-45f1-ad7f-cadd431cf012"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7601),
                            IsDeleted = false,
                            Name = "Lack of management oversight",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("59404979-d33b-4020-862b-6820e3e38f6a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7603),
                            IsDeleted = false,
                            Name = "Lack of staff experience in relation to performed tasks",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("7d14456d-b30d-4c56-9144-e8798a059a0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7605),
                            IsDeleted = false,
                            Name = "Negligence of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("f35f8e70-fde9-4eb3-8c7e-a3ca3b9efa0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7607),
                            IsDeleted = false,
                            Name = "Performance failure of Support unit",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("73baf1f8-4efc-472e-972a-faa0cb99aecc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7609),
                            IsDeleted = false,
                            Name = "Inadequate staff compensation (basic salaries, bonuses, reward-system for vigilance etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("9de4004a-4f95-4a19-ac5e-e7cfde40afef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7610),
                            IsDeleted = false,
                            Name = "Working Atmosphere (level of stress, social climate, interpersonal relationships, malicious Intent)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("43c4d3ce-87a8-4031-81a2-cf4bc562f130"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7614),
                            IsDeleted = false,
                            Name = "Workload perception (lack of clearly stated goals and objectives etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("185008fd-4c0f-4f3e-88aa-ef3df7c33cee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7616),
                            IsDeleted = false,
                            Name = "Corruption / Criminal Intent",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("2b7ea3f9-2a35-4dbc-a410-f30306d267c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7617),
                            IsDeleted = false,
                            Name = "Staff shortages within unit (lack of capacity in unit)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("305d29a2-cefa-41d1-9091-e0f919e3e2e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7619),
                            IsDeleted = false,
                            Name = "Staff shortages within support units (lack of capacity in supporting units)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("3e8b267c-c1d7-435b-b3f5-e272f5e80dcd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7621),
                            IsDeleted = false,
                            Name = "Disagreement on issues of mutual interest",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("49a3bc59-53df-4ef5-9589-bb8ef63a8848"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7622),
                            IsDeleted = false,
                            Name = "Failure to consult organised labour on HR policies",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("77637417-8146-49d5-a860-60c7fd7f14cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7625),
                            IsDeleted = false,
                            Name = "Complexity of policies / procedures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("f572a069-8cad-4559-8655-500d2dc02d7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7626),
                            IsDeleted = false,
                            Name = "Complexity of client agreements",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("0033bea2-d61d-46d0-8b05-e3aafb61c40c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7630),
                            IsDeleted = false,
                            Name = "Process inappropriate for geographic / physical location",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("3ae95b9f-82bf-4181-8f7b-23569e017b59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7631),
                            IsDeleted = false,
                            Name = "Automated process failures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("d13ac8a2-1faf-4651-b5e3-c0622c47a90d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7633),
                            IsDeleted = false,
                            Name = "Introduction of new processes and procedures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("aa388c9b-d7b9-4e1f-99e1-268db2d02c56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7634),
                            IsDeleted = false,
                            Name = "Internal communication failures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("0172d7c0-fb34-46ba-bd71-081f64943f0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7636),
                            IsDeleted = false,
                            Name = "Lack of documented guidelines for new processes / services developed",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("3830e3a7-05d1-4eb8-8728-0dc47b22da5e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7638),
                            IsDeleted = false,
                            Name = "Rate of change / diversification of products / services",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("cd0b27bf-9d12-42e7-b788-d21158e641d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7639),
                            IsDeleted = false,
                            Name = "Inadequate controls in place (specific / pervasive / monitoring)",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("c5464cd6-0a88-46a7-af41-12d5421a3d5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7641),
                            IsDeleted = false,
                            Name = "Lack of reporting of control weaknesses / failures",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("3169cab7-077b-42ae-9579-fdb4ea559851"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7644),
                            IsDeleted = false,
                            Name = "Failure of automated controls",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("85eafb88-4aec-4f24-8184-76f48a0ebc1f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7658),
                            IsDeleted = false,
                            Name = "Management ability to override controls or processes",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("7cb14412-bfa0-496c-8fba-208aabcc8e8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7660),
                            IsDeleted = false,
                            Name = "Inadequate clarity of authority (ultimate decision maker) and reporting lines",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("bb344b54-0861-4d4f-b4b5-3e09f928e9ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7662),
                            IsDeleted = false,
                            Name = "Inadequate delegation of power (scope, limits, communication, reporting etc)",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("ed555edd-e26e-464c-8713-c12052ae9657"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7663),
                            IsDeleted = false,
                            Name = "Inadequate definition of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("891c7e0e-c7b8-40be-bc8a-e609722a81b0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7665),
                            IsDeleted = false,
                            Name = "Inadequate segregation of duties",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("62cd73b7-b15f-4c59-9a03-59def1e86a7d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7667),
                            IsDeleted = false,
                            Name = "Lack of formal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("3079405f-340e-4352-8d6b-777564c5e804"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7668),
                            IsDeleted = false,
                            Name = "Inadequate / incomplete procedure (Internal communication failure)",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("151989c0-40e7-4c9e-80b4-b7c98148e9df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7672),
                            IsDeleted = false,
                            Name = "Lack of access to internal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("3b05c1fa-52f1-4b7e-879a-87c2758e4d67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7673),
                            IsDeleted = false,
                            Name = "Lack of SLA's between internal units",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("0ea2786f-b51d-42e6-b909-8f223158cf40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7675),
                            IsDeleted = false,
                            Name = "Non adherence to processes and procedures",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("fae737da-b135-436c-947c-8479909d3ce5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7677),
                            IsDeleted = false,
                            Name = "System inadequate for nature of required tasks",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("6bc8c40e-11dd-4907-b1a3-30738d86e538"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7678),
                            IsDeleted = false,
                            Name = "System inadequate for volume of activities (speed, storage etc)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("0ef0e078-f034-4597-9482-8b2a1c08ed2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7680),
                            IsDeleted = false,
                            Name = "Inadequate technical or functional documentation (user guides)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("47d33359-bbdf-4add-bf82-870c637b8ccd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7681),
                            IsDeleted = false,
                            Name = "IT helpdesk inefficiencies",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("cd7376ef-fa49-41cf-b58a-df3e23ef87de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7683),
                            IsDeleted = false,
                            Name = "Technological obsolescence",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("c1486c2a-e418-4f38-833f-a269849a3bef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7687),
                            IsDeleted = false,
                            Name = "Software failure (Software / data corruption etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("50b27aa4-a452-41e4-916e-51bca23f41cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7688),
                            IsDeleted = false,
                            Name = "Hardware failure (Failure of wearing parts etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("f03ac182-52f9-4fc9-bf3e-04466edb1db5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7690),
                            IsDeleted = false,
                            Name = "System unavailable due to extended period of power outage",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("3a2ab57c-d5ed-41cc-8368-fde33d831ac6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7692),
                            IsDeleted = false,
                            Name = "Other Equipment failure (Failure of other assets/ equipments other than IT related equipments etc.)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("5073bd05-b407-4a98-b238-0f3b7f83fe74"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7693),
                            IsDeleted = false,
                            Name = "Inadequate security of user profiles (passwords etc)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("bbe9ad7c-3f0a-4311-abee-af8072e00f49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7695),
                            IsDeleted = false,
                            Name = "Inadequate security over critical data areas",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("b6ec4861-788c-474a-a8eb-15a2bd1189b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7696),
                            IsDeleted = false,
                            Name = "Inadequate logical system control checks (e.g. log monitoring)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("6f4600a3-857f-42a4-91f3-b83ae6502b8f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7698),
                            IsDeleted = false,
                            Name = "Inadequate synergy between disparate systems with common users",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("6c8a334c-f5bb-4f7f-ae09-44a589c152df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7701),
                            IsDeleted = false,
                            Name = "Poor systems user interface",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("77eee396-18f9-4299-b4fa-2d752687160a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7703),
                            IsDeleted = false,
                            Name = "Inadequate system / data backups",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("1f3041b2-cc52-48dd-a346-15a119e2efb2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7704),
                            IsDeleted = false,
                            Name = "Virus / Intrusion attacks",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("f8f30111-9b52-4ba4-8a85-13d6bec03fad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7706),
                            IsDeleted = false,
                            Name = "Lack of formalization of relationship with outsourcer (duties, deliverables etc)",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("4f8e4d1b-a004-4453-9922-2aaf583f82fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7708),
                            IsDeleted = false,
                            Name = "Performance failure of outsourced vendor / service provider",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("6f405ff4-391d-48f1-a4d3-7bc916ed1139"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7709),
                            IsDeleted = false,
                            Name = "Regulatory compliance breaches",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("00cc6955-4aba-404e-a72b-c819dad2d118"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7711),
                            IsDeleted = false,
                            Name = "Government discretion to impose will and decisions without prior notice.",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("dbfee767-f493-4d81-8b07-ba73129e7831"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7712),
                            IsDeleted = false,
                            Name = "Ambiguity in Regulations",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("2b228cef-6722-4de6-9a88-25ac36d131f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7716),
                            IsDeleted = false,
                            Name = "Inadequate response to legal / contractual disputes",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("73f4f215-993c-4921-a101-4eacee2568a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7717),
                            IsDeleted = false,
                            Name = "Inadequate pre-agreement investigations",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("63cb8c42-0618-4c4f-9e9a-b664c0247d42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7719),
                            IsDeleted = false,
                            Name = "Inadequate legal structures",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("35638595-f074-43d0-b8f0-efa7984d0e60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7720),
                            IsDeleted = false,
                            Name = "Natural disasters (Fire, floods, etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("a05fdd42-0a8c-4a16-ba68-52e56b2c27c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7721),
                            IsDeleted = false,
                            Name = "External attacks (burglary, robberies, vandalism etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("0bfbf626-2545-4143-8118-0bc98c7a6312"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7723),
                            IsDeleted = false,
                            Name = "Political or social unrest",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("cc44d77f-fd88-4d07-83fd-df05acaf61d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7724),
                            IsDeleted = false,
                            Name = "Unethical Social and Business Environment",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("c37334af-8647-4480-ae3e-5521f4538819"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7726),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by the client",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("8bb87a34-6757-4da8-a59c-7aeb93730da7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7729),
                            IsDeleted = false,
                            Name = "Client/Counterparty Failures",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("2dcc07a2-1caa-402c-881b-6fd562c12b81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 162, DateTimeKind.Local).AddTicks(7731),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by third-parties",
                            RiskDriverCategoryId = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RiskEffectCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b73cdec2-5d66-4797-aa21-dfcc3b620642"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 140, DateTimeKind.Local).AddTicks(4107),
                            IsDeleted = false,
                            Name = "Legal Liability"
                        },
                        new
                        {
                            Id = new Guid("9e0cb143-c073-46fa-a372-cc9e3097cddb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 140, DateTimeKind.Local).AddTicks(4118),
                            IsDeleted = false,
                            Name = "Regulatory Action"
                        },
                        new
                        {
                            Id = new Guid("fc5075ad-6fa1-4175-9f71-59b4e60081ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 140, DateTimeKind.Local).AddTicks(4119),
                            IsDeleted = false,
                            Name = "Loss or Damage to Assets"
                        },
                        new
                        {
                            Id = new Guid("fa19f5c5-8ae6-4f04-a557-25d9eb57983f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 140, DateTimeKind.Local).AddTicks(4126),
                            IsDeleted = false,
                            Name = "Restitution"
                        },
                        new
                        {
                            Id = new Guid("646aeb0c-69ed-4f45-b10e-cfd550917c0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 140, DateTimeKind.Local).AddTicks(4128),
                            IsDeleted = false,
                            Name = "Loss of Recourse"
                        },
                        new
                        {
                            Id = new Guid("bfbaea19-e978-4e3b-921f-f566de55aa60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 140, DateTimeKind.Local).AddTicks(4129),
                            IsDeleted = false,
                            Name = "Write-down"
                        },
                        new
                        {
                            Id = new Guid("33d3f25e-1acb-4280-8727-f3743592f095"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 140, DateTimeKind.Local).AddTicks(4130),
                            IsDeleted = false,
                            Name = "Outsourcing / Vendor Costs"
                        },
                        new
                        {
                            Id = new Guid("0c5752fc-3dfa-4a3b-a25d-e5764f239072"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 140, DateTimeKind.Local).AddTicks(4132),
                            IsDeleted = false,
                            Name = "Reputational Loss"
                        },
                        new
                        {
                            Id = new Guid("90e3a0c7-5f94-4eee-8a8b-25134eaaeabf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 140, DateTimeKind.Local).AddTicks(4133),
                            IsDeleted = false,
                            Name = "Reduced operational capacity"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EffectCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EffectDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EffectType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RationaleForGrossLossValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EffectCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEffectManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssesmentStatus")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfIdentification")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfOccurence")
                        .HasColumnType("date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("EstimatedLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportedByUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskEventDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("BusinessEntityId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UnitId");

                    b.ToTable("RiskEvent", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoundaryEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RiskDriverDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskDriverSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EventCategoryId");

                    b.HasIndex("EventSubCategoryId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("RiskDriverCategoryId");

                    b.HasIndex("RiskDriverId");

                    b.HasIndex("RiskDriverSubCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEventManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId", "Name")
                        .IsUnique();

                    b.ToTable("Unit", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2213),
                            DepartmentId = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("085af12a-41d1-4516-adc4-7e6aba212354"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2223),
                            DepartmentId = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2231),
                            DepartmentId = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            IsDeleted = false,
                            Name = "Securities Operations"
                        },
                        new
                        {
                            Id = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2234),
                            DepartmentId = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2238),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2241),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2243),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2245),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("556d5367-6794-4355-974f-e2ebb6447695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2249),
                            DepartmentId = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2252),
                            DepartmentId = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6b2c5f66-56fe-4a29-9393-5a8b7623d880"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2256),
                            DepartmentId = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("c8ba310f-753d-4317-bce6-1559fb079142"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2259),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2262),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("840c5c87-0155-4c39-85f4-f3736f04e540"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2264),
                            DepartmentId = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("3f4ee577-f743-4614-adda-5bd4e641c85c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2267),
                            DepartmentId = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("a7f38bb3-596e-486d-b7ef-3e30b893a622"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2269),
                            DepartmentId = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("dda976b6-ac1f-42ed-a9cf-860ab77826ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2271),
                            DepartmentId = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2274),
                            DepartmentId = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2278),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2281),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f849e3eb-bc9e-46f7-9d8e-45912925298d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2283),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("2108a385-5b39-4953-97e7-216523683078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2285),
                            DepartmentId = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2287),
                            DepartmentId = new Guid("2b4752e0-89e3-45ab-b4d6-f3809bd9c015"),
                            IsDeleted = false,
                            Name = "ARM Securities"
                        },
                        new
                        {
                            Id = new Guid("4082fe29-5966-476e-951f-c44e306ca50f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2289),
                            DepartmentId = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("575a8a92-112f-4752-a875-24999b3f69ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2291),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2294),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("0aacc5ae-ea42-41e1-98c9-9b28d3628d08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2299),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("bfe9d961-8677-4fe2-9727-65f633759353"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2301),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("eaa2f32a-bd71-4b87-a692-6b7eae9f560f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2303),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2305),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("0845fb19-2120-461d-b291-74e1aafa9adb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2307),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2315),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2318),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2320),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2325),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2328),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2330),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2333),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2335),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("941c57d3-66c5-4083-85b9-20bf746b0def"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2337),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2339),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("80245081-74bc-4124-87f5-d6008b28706b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2341),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2345),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a16649cf-8b89-4027-9628-8af108db66fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2348),
                            DepartmentId = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2350),
                            DepartmentId = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e3eaede4-d14c-4c91-b986-f19350038ab4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2352),
                            DepartmentId = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2355),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2357),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("bae03f16-d1e7-410b-ad67-46bfe376c873"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2359),
                            DepartmentId = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("a6dc58d2-3ca3-442c-a2f2-74a3e2f861e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2362),
                            DepartmentId = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("6944d275-92d3-400f-bf70-00f6d9a271ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2365),
                            DepartmentId = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("67552124-7cee-4f19-8e6c-4b9598f1510f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2367),
                            DepartmentId = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2370),
                            DepartmentId = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2372),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2374),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("201b2b9b-55a4-49eb-82b7-05afb9110eae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2376),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("209cfd77-d2b6-4264-963c-bd02558837e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2378),
                            DepartmentId = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("d421d758-faec-4fc4-bab7-9f022d03698d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2381),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Business Development"
                        },
                        new
                        {
                            Id = new Guid("eb42b40b-bfd0-443b-b03f-956ab9d03db3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2384),
                            DepartmentId = new Guid("2214335d-9ca8-4ac9-8fe1-352deda923bf"),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("d1904219-86a4-44a5-85a0-754ff2dcadc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2387),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Retail Sales"
                        },
                        new
                        {
                            Id = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2389),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Operations Settlement"
                        },
                        new
                        {
                            Id = new Guid("81c6034f-0951-4de7-a51b-f4471168c94d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2391),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Customer Onboarding & Data Mgt Team"
                        },
                        new
                        {
                            Id = new Guid("bb208834-9b69-4f5b-a283-54c0fd69cf45"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2393),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Relationship Manager"
                        },
                        new
                        {
                            Id = new Guid("268d2016-a662-4c85-a3b2-5d4cfeeb33ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2395),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Account Executives"
                        },
                        new
                        {
                            Id = new Guid("07d965be-1bd6-40df-bfe9-9679b6a4a3c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2397),
                            DepartmentId = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2399),
                            DepartmentId = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("9ec38d97-5e77-4410-90fd-30c179766021"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2403),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2405),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2408),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2411),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2417),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2419),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("fb274136-84fe-430d-bab9-6647909a1a48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2421),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("d638462f-bde3-4555-889b-2af892201b07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2423),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("e1671ffd-98d2-4063-b883-310378ac972a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2427),
                            DepartmentId = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2429),
                            DepartmentId = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("eaaafeef-5b77-4370-bd8f-21fd1b9e1b94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2431),
                            DepartmentId = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2433),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2435),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("156818e3-1ea6-42b0-a785-7dfaac6f5371"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2437),
                            DepartmentId = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("e60519ac-2af8-40be-94ed-2218e244d1d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2439),
                            DepartmentId = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("19331c05-77f0-4f49-bb90-2af3a78a7793"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2441),
                            DepartmentId = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("9fb66e98-951d-462e-a559-4f19a955bd5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2445),
                            DepartmentId = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2447),
                            DepartmentId = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2449),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2451),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f4c145fb-e830-4fa2-ba1d-77963b39eccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2452),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("598f6cac-69ce-47bb-8be4-f0697c1eb47e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2455),
                            DepartmentId = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("b79352c2-c526-46ce-91fc-c94915ea6ce3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2457),
                            DepartmentId = new Guid("1777e6a2-05bc-4322-81f0-10a205779214"),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("55b730f9-4550-4829-a479-9fc651b7946f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2458),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury Operations"
                        },
                        new
                        {
                            Id = new Guid("a3f65993-988f-49aa-9268-ae88d2472739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2462),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury Sales"
                        },
                        new
                        {
                            Id = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2464),
                            DepartmentId = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("05652a26-461c-4c78-be42-f212fc5fd083"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2466),
                            DepartmentId = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("54578f13-6ee3-418d-aede-e77041ef4878"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2468),
                            DepartmentId = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2471),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2473),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("16bedab4-1eb0-484a-9845-e1581085f146"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2475),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2477),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2480),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2482),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("90cd9708-b7b4-4203-ba98-6ce8c66e623e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2484),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8f3b081b-f835-4577-aa13-9aefd6559760"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2486),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("bb28a222-8895-4def-a8a2-1320ad8eb17b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2488),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("ada4d1eb-bcaf-40b1-9790-82c54a225fc3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2490),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("e35aaace-aeba-48df-867c-750aef56d05f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2492),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2494),
                            DepartmentId = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2497),
                            DepartmentId = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db3aeece-97b4-42b0-bf58-0f02b87ae4cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2499),
                            DepartmentId = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2501),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2503),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("f60b1ae5-e26f-41bc-a5f3-814f19bdaf0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2509),
                            DepartmentId = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("dcea9d1b-56d2-47b3-901e-1e6b8a6365d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2511),
                            DepartmentId = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("7fc65d4a-e0ad-4274-b1ba-c447f49cd208"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2513),
                            DepartmentId = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("e3ccc14e-8d7b-4817-a4c2-8d7eca698d72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2515),
                            DepartmentId = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2519),
                            DepartmentId = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2521),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2523),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d09befe1-8e69-4e76-9735-88597aeb09a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2525),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("cb66fa72-3399-4483-9766-bf35f2033862"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2526),
                            DepartmentId = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("44fe054d-83dd-41da-b90a-a53631af453d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2529),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d33101c-f8c2-44f0-8774-5eda11b05df3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2530),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2533),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2536),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("ad83f6ba-ea3b-4d12-a50a-5f00899e3f0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2539),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("3bc7f31c-9502-492b-8a0d-4204be7a5614"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2541),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2543),
                            DepartmentId = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2545),
                            DepartmentId = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("36e6ae73-2270-40ea-ae16-64d610c1e5b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2547),
                            DepartmentId = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2549),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2551),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("087015b4-acdb-4487-a687-0f084390f387"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2554),
                            DepartmentId = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2289ecd3-d422-42e9-95d1-aa91425d1c0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2556),
                            DepartmentId = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("9a3f56c3-6249-46eb-880d-01b01cbe7078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2558),
                            DepartmentId = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7979d030-e342-426c-b1e6-6ce2ba29cb20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2560),
                            DepartmentId = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("9f4432a0-9002-4553-997d-633869423d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2562),
                            DepartmentId = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2564),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("e4789074-ab43-463f-b18f-42606e28db63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2567),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d79f8f8d-8fe1-4ff4-94f0-2550f51d8186"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2568),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("ea600662-5dbb-4ad6-8200-cc3b2cf39a10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2572),
                            DepartmentId = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("1df86816-2842-4941-8710-36822d6240e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2574),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2576),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2579),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2581),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("eb862f6f-9693-4a7a-b2b8-df539e26a8c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2583),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("be3396b5-e02e-48ac-ae55-d64dad1cbd76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2585),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2587),
                            DepartmentId = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2590),
                            DepartmentId = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8581332b-8d77-4f1c-8a3b-79a996ff575f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2592),
                            DepartmentId = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2594),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2600),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2602),
                            DepartmentId = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("850b308d-bef3-41ad-b812-413b868e7621"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2604),
                            DepartmentId = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2606),
                            DepartmentId = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2608),
                            DepartmentId = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2611),
                            DepartmentId = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2613),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("a470f202-ca90-4fc9-8617-358311885a1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2615),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("30306755-5207-4d72-9c62-359afa8a5f0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2617),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2620),
                            DepartmentId = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2622),
                            DepartmentId = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("0c3dc3f2-d704-4d25-9177-46bde182bf5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2624),
                            DepartmentId = new Guid("865be81a-ebe9-4c50-b5b9-9c07c28b1d9f"),
                            IsDeleted = false,
                            Name = "Company Secretariat"
                        },
                        new
                        {
                            Id = new Guid("856f2fcf-81ba-4ff8-84e5-f61b0acb9128"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2627),
                            DepartmentId = new Guid("37d376e3-5e1f-42a7-9d77-e63f07ca4475"),
                            IsDeleted = false,
                            Name = "Data and Insights"
                        },
                        new
                        {
                            Id = new Guid("b625ff03-0916-4369-882d-0ffcd322660d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2630),
                            DepartmentId = new Guid("252cf529-9e73-4257-a718-d9cf51251ae0"),
                            IsDeleted = false,
                            Name = "Environmental, Social and Governance"
                        },
                        new
                        {
                            Id = new Guid("3ff75ac7-8e21-4e8a-8895-a77a4dfb5dee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2632),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("5e3f8a3a-4451-4153-8871-eaf7f24aa0e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2634),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("789c6900-e5a3-44d4-9e6e-f165c0f94650"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2636),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2639),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("2abce038-72a5-4fd5-9cfc-deef8348f4d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2641),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("38bf0e6d-58f3-47f8-8324-4938c42ac62b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2643),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("7d22672e-a552-4944-a418-d7678717c193"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2646),
                            DepartmentId = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2650),
                            DepartmentId = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("ad196f3c-1065-439f-a8d4-4a88a6933949"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2652),
                            DepartmentId = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2654),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2656),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2570f9e3-7c71-41de-9a32-0981e29c14b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2658),
                            DepartmentId = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("bec6c783-ba3c-4180-9d8a-052ce433f695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2660),
                            DepartmentId = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("33cdd2bc-364b-4975-a2ba-3f40cecca022"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2662),
                            DepartmentId = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("5efbbf5f-3081-4492-9ec4-b8880b3eb06e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2664),
                            DepartmentId = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2667),
                            DepartmentId = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2669),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2671),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6194902-48f8-4bed-bb0d-0aae5b24df4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2673),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("bedd46ce-899c-4c9d-a098-bb49c3633b35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2675),
                            DepartmentId = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("9e089a8d-603a-4c72-a278-0aeb843f9015"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2677),
                            DepartmentId = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4914b69b-1b5e-499a-8350-9fcf5b2e4dca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2680),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("185e0a8b-5aa5-43e5-8828-edeae97cd121"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2682),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("2d544b75-9bda-4aff-a212-a2998fc28cfa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2686),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("2470d7cf-0bea-49c7-a2c7-04c9fa36ade6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2689),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("30c9c38f-23b7-4694-acd9-bac0da70eb4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2694),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("cc9fd72b-9a83-43f9-b28f-f8376af33ac0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2696),
                            DepartmentId = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("8618dc34-8edc-471a-8bab-e7d8b0670462"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2698),
                            DepartmentId = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("fa110f66-701d-43b3-9cea-35ca0aaeece1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2700),
                            DepartmentId = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("a9e024ce-d1e7-42c6-b833-73bb43471c8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2702),
                            DepartmentId = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("db1294f5-ada3-42c3-bc59-cd554818e099"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2704),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("64e5f632-d1a0-4ed0-b133-629f6c5d05c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2708),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("4771bfd1-bcba-463a-84ed-f6e8a53f207a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2710),
                            DepartmentId = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("659a83bc-cee9-4939-8669-d2c5617b7845"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2712),
                            DepartmentId = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("1e382c5d-6b22-43a6-9ce9-521244c1f555"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2714),
                            DepartmentId = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("ad6a7903-fb1b-4bf2-a55c-2d06f83e7707"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2715),
                            DepartmentId = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("8a454ad0-80d6-4ded-a89e-c5e9023357ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2717),
                            DepartmentId = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("12fc7195-2c3f-4bca-88b4-beef3f234d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2719),
                            DepartmentId = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("491cdc51-64aa-4f6b-b5ba-b036b0174852"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2721),
                            DepartmentId = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("d6733360-b4e1-4b88-9cbb-364cf2c3fd9c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2725),
                            DepartmentId = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("5d296ac9-f9f9-4f69-bb40-0f8b616a6d0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2727),
                            DepartmentId = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("35a7256f-7c2a-45ea-8cbb-2e7509b1cd21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2729),
                            DepartmentId = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("3d1ba0a1-ce2d-4806-b60e-4002c054f341"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2731),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("5b77ef60-1c4a-474a-a320-30b120509229"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2734),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2736),
                            DepartmentId = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2738),
                            DepartmentId = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2740),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2744),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("8eb2aa8b-3cd7-41b1-9628-436aaace8df5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2746),
                            DepartmentId = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("79f64fe8-0a3e-4f2a-b499-8f48e6ea37e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2748),
                            DepartmentId = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("2f7f4b7b-25de-490c-9db4-5ecbb9265268"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2750),
                            DepartmentId = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7c0261cb-0d3e-496d-aa86-9cf5f37da1ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2752),
                            DepartmentId = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2754),
                            DepartmentId = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2756),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2760),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("757ecc97-7a10-420e-b919-2ac7aa557b3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2764),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("19704b51-99bb-439f-a4db-6603c6089a58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2766),
                            DepartmentId = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2768),
                            DepartmentId = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("5a96a0a8-8d71-45dc-9736-befceefbecb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2770),
                            DepartmentId = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2773),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2776),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2778),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2780),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2783),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2785),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("329d8cac-d18b-4a9b-bd38-8535e19d2b60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2792),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("e0df9434-41f4-454a-a02b-45d644b4d08d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2795),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("83d63b3c-f20b-4e30-8384-6d603fd67bd4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2797),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6f9b36b-1d78-475e-b7e0-ffdd9f6e45e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2799),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("b88ebfeb-5f91-4718-aa00-ec6ef714f50e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2801),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2803),
                            DepartmentId = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("003ed424-1724-44b1-bcb1-924abb94e338"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2807),
                            DepartmentId = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("5a64f00c-b288-46b3-aa77-ecc4d35b212d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2809),
                            DepartmentId = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2811),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2813),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a39f7dfe-55bb-433d-aabd-70476e81a9f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2815),
                            DepartmentId = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6c300c5e-fba6-467e-952f-4bb3d1d15ea4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2817),
                            DepartmentId = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("b8bc161a-36be-433c-b9b2-2502b40786de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2819),
                            DepartmentId = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("36998696-f319-43d4-bcbf-61b52d0556bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2821),
                            DepartmentId = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2824),
                            DepartmentId = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2826),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2828),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("b0c9d7c8-a875-4f67-b386-d3475c0b2585"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2830),
                            DepartmentId = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("10f06e8a-0531-458a-9131-3d1820112a49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2832),
                            DepartmentId = new Guid("840c2b0e-4146-41fb-a771-ede34bd0d915"),
                            IsDeleted = false,
                            Name = "ARMHIIL"
                        },
                        new
                        {
                            Id = new Guid("1fe23b5b-08a7-450f-9f19-19c41aff6037"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 164, DateTimeKind.Local).AddTicks(2834),
                            DepartmentId = new Guid("b0b881eb-8beb-412e-8b63-ebfb5fbe0c0a"),
                            IsDeleted = false,
                            Name = "ARM Capital"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Infrastructure.Data.Email", b =>
                {
                    b.Property<Guid>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CC")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMessageSent")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("EmailId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("EmailId"));

                    b.ToTable("Email", (string)null);
                });

            modelBuilder.Entity("AuditPlanningMemoAuditExecutionAuditPlanningMemoPlanningTimeline", b =>
                {
                    b.Property<Guid>("AuditPlanningMemoAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditPlanningMemoAuditExecutionId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditPlanningMemoAuditExecutionId", "AuditPlanningMemoAuditExecutionId1");

                    b.HasIndex("AuditPlanningMemoAuditExecutionId1");

                    b.ToTable("AuditPlanningMemoAuditExecutionAuditPlanningMemoPlanningTimeline");
                });

            modelBuilder.Entity("AuditProgramAuditExecutionCommenceEngagementAuditexecution", b =>
                {
                    b.Property<Guid>("AuditProgramAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommenceEngagementAuditexecutionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditProgramAuditExecutionId", "CommenceEngagementAuditexecutionsId");

                    b.HasIndex("CommenceEngagementAuditexecutionsId");

                    b.ToTable("AuditProgramAuditExecutionCommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionOwnerUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionToPreventReoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionToResolve")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("WorkerPaperId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkerPaperId")
                        .IsUnique();

                    b.ToTable("AuditFindings");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExceptionsNoted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssueRating")
                        .HasColumnType("int");

                    b.Property<string>("IssueSummary")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Reoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReviewResult")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AuditProgramId")
                        .IsUnique();

                    b.ToTable("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Permission", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f87d685-92c9-42b4-a58e-20fe028dd3c4"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3727),
                            IsDeleted = false,
                            Module = "Risk Identification",
                            Name = "Create risk event"
                        },
                        new
                        {
                            Id = new Guid("e6ca00e4-7080-4198-b75c-37a2a99d4bc2"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3740),
                            IsDeleted = false,
                            Module = "Risk Identification",
                            Name = "Review risk event"
                        },
                        new
                        {
                            Id = new Guid("226501c2-60c7-4254-bb7f-975480eae817"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3742),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Start RCSA"
                        },
                        new
                        {
                            Id = new Guid("836b6390-aa37-4c3c-bdc1-42f9977a16b4"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3743),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Initiate RCSA"
                        },
                        new
                        {
                            Id = new Guid("6306f9e3-2489-4d8d-9846-fe741faab813"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3745),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Review RCSA"
                        },
                        new
                        {
                            Id = new Guid("559c4f59-68ac-4f83-a708-6632b8a080f4"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3747),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Process control risk rating"
                        },
                        new
                        {
                            Id = new Guid("2e44d6a0-5c92-40be-8d5e-28a586ddeb26"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3748),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Apply test to process inherent risk"
                        },
                        new
                        {
                            Id = new Guid("ed334b91-9e47-46f0-92b7-84c9a1e34b9e"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3749),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Approve initiated RCSA"
                        },
                        new
                        {
                            Id = new Guid("6ae48c8e-e15c-40aa-a660-3a7556d53f3c"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3750),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Reject initiated RCSA"
                        },
                        new
                        {
                            Id = new Guid("4467735e-4043-40a7-b571-654751d1b8d5"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3752),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Approve reviewed test applied"
                        },
                        new
                        {
                            Id = new Guid("f2641950-69d9-499c-8e7b-4b7b2a8a6efb"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3753),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Reject reviewed test applied"
                        },
                        new
                        {
                            Id = new Guid("80041e2a-9387-4554-ba14-496dfc07358a"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3754),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Finalize RCSA"
                        },
                        new
                        {
                            Id = new Guid("b5333a97-47ae-4464-82e7-eb552230fd2c"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3755),
                            IsDeleted = false,
                            Module = "Product Risk Assessment",
                            Name = "Initiate product risk assessment"
                        },
                        new
                        {
                            Id = new Guid("e4db911f-91dd-463e-a310-b441708198aa"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3762),
                            IsDeleted = false,
                            Module = "Product Risk Assessment",
                            Name = "Create assess risk"
                        },
                        new
                        {
                            Id = new Guid("f8684d71-0b28-4f93-bcd7-d1f7c107708f"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3763),
                            IsDeleted = false,
                            Module = "Product Risk Assessment",
                            Name = "Approve product risk assessment"
                        },
                        new
                        {
                            Id = new Guid("e1f00b8c-9704-4406-9d61-468146fe06dd"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3764),
                            IsDeleted = false,
                            Module = "Product Risk Assessment",
                            Name = "Reject product risk assessment"
                        },
                        new
                        {
                            Id = new Guid("9f554761-84a3-4c52-9a3d-3955983c4cc3"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3765),
                            IsDeleted = false,
                            Module = "Business Impact Analysis",
                            Name = "Starts the Business Impact Analysis"
                        },
                        new
                        {
                            Id = new Guid("c42a1ac1-014c-4bfa-a258-7ddb9b257b58"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3766),
                            IsDeleted = false,
                            Module = "Business Impact Analysis",
                            Name = "Initiate the Business Impact Analysis"
                        },
                        new
                        {
                            Id = new Guid("0f4e423f-2a2d-48bb-b8b7-3c1a4d444fa2"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3767),
                            IsDeleted = false,
                            Module = "Business Impact Analysis",
                            Name = "Approve initiate business impact analysis"
                        },
                        new
                        {
                            Id = new Guid("7f5e914d-5c48-4659-a46e-9461f64f4c9b"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3769),
                            IsDeleted = false,
                            Module = "Business Impact Analysis",
                            Name = "Reject initiate business impact analysis"
                        },
                        new
                        {
                            Id = new Guid("42a05247-8579-4c6c-96bf-d5cd3a73a89f"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3770),
                            IsDeleted = false,
                            Module = "Action Tracker",
                            Name = "Update action progress and status"
                        },
                        new
                        {
                            Id = new Guid("a17e0b76-5d29-4c79-a8df-bae18da34cb1"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3771),
                            IsDeleted = false,
                            Module = "Action Tracker",
                            Name = "Update action progress and status inherent risk"
                        },
                        new
                        {
                            Id = new Guid("078c30e2-702e-4abe-af61-fc86357535d7"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3772),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Create rule"
                        },
                        new
                        {
                            Id = new Guid("ac289fc1-4149-42e3-9870-3ec94de81bfa"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3773),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Update rule"
                        },
                        new
                        {
                            Id = new Guid("e36a0878-2621-4749-849c-0cc979ec0b32"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3774),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Create business"
                        },
                        new
                        {
                            Id = new Guid("4ca6b903-3f45-446d-b1ae-6d99b696c845"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3775),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Update business"
                        },
                        new
                        {
                            Id = new Guid("34e8d57a-e3f3-471e-be17-b8b70988282b"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3776),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Create regulator"
                        },
                        new
                        {
                            Id = new Guid("3fa5b006-8d8f-4fec-aff9-249615a896a1"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3777),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Upload report"
                        },
                        new
                        {
                            Id = new Guid("0291715f-c93a-425f-91e3-3f4d64cbe720"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3778),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Approve attached report"
                        },
                        new
                        {
                            Id = new Guid("c135ca16-e877-4e16-aed0-9e330456f33f"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3779),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Reject attached report"
                        },
                        new
                        {
                            Id = new Guid("cf2a9cde-97eb-41e0-b17f-d7ac38ff601b"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3780),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Initiate regulatory payment"
                        },
                        new
                        {
                            Id = new Guid("316f9d9a-3f5c-40e9-b5a5-25833587bda3"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3781),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Update regulatory payment"
                        },
                        new
                        {
                            Id = new Guid("0d542309-09b4-4176-ad55-e7d42e028d14"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3782),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Make Regulatory Payment"
                        },
                        new
                        {
                            Id = new Guid("05ca74cc-cd70-4965-9ea5-2530e2171774"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3783),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Approve regulatory payment"
                        },
                        new
                        {
                            Id = new Guid("a9e34482-dd6b-4274-ae9f-0214d6490b3e"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3784),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Reject regulatory payment"
                        },
                        new
                        {
                            Id = new Guid("438d86f6-f78c-44a8-b0fe-deb55693e80a"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3785),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Initiate statutory payment"
                        },
                        new
                        {
                            Id = new Guid("f5b16af9-1c7d-4c03-8c4c-5669819f74cf"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3786),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Update statutory payment"
                        },
                        new
                        {
                            Id = new Guid("9425e21e-0372-466c-bff1-70b685a75ee8"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3787),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Process statutory payment"
                        },
                        new
                        {
                            Id = new Guid("3889f9f8-25a5-4904-9d9c-56bf9d506a1d"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3788),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Submit statutory payment"
                        },
                        new
                        {
                            Id = new Guid("f0157a4d-de6c-47c7-a4b3-243ebf8076ca"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3789),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Approve statutory payment"
                        },
                        new
                        {
                            Id = new Guid("5c9bd282-d701-4591-877b-9e36a61cff69"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3790),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Reject statutory payment"
                        },
                        new
                        {
                            Id = new Guid("3cb6772e-8370-41e2-a4ff-9adfa83e038c"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3791),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Approve created Internal Control"
                        },
                        new
                        {
                            Id = new Guid("d1ada3b1-3e74-4d43-8b65-0da982aff7e5"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3792),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Reject created Internal Control"
                        },
                        new
                        {
                            Id = new Guid("b67903bd-6435-412d-947c-46a0d2db14ae"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3793),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Create Internal Control"
                        },
                        new
                        {
                            Id = new Guid("57afe880-14b9-4fcb-b627-afe5f63b3029"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3794),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Update Created Internal Control"
                        },
                        new
                        {
                            Id = new Guid("91dc6d3f-dd35-451e-b04a-fa455816c09c"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3795),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Upload attachment for created investigation"
                        },
                        new
                        {
                            Id = new Guid("ffe65ef0-6506-47e6-b8ca-a9290f13c7c5"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3796),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Update investigation status"
                        },
                        new
                        {
                            Id = new Guid("69a2e6e4-0837-47fa-8da9-958f632aff10"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3797),
                            IsDeleted = false,
                            Module = "Internal Control - Exception",
                            Name = "Update Created Exception Tracker"
                        },
                        new
                        {
                            Id = new Guid("8aea0f36-ab57-4f65-b9f2-5945eb3e9436"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3798),
                            IsDeleted = false,
                            Module = "Internal Control - Exception",
                            Name = "Create Exception Tracker"
                        },
                        new
                        {
                            Id = new Guid("fc74be96-ce8e-469e-8a1a-83a98aaddd08"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3799),
                            IsDeleted = false,
                            Module = "Internal Control - Exception",
                            Name = "Delete Created Exception Tracker"
                        },
                        new
                        {
                            Id = new Guid("5ed6a1a1-55a1-4f6f-a9bb-f61f3ca03df1"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3800),
                            IsDeleted = false,
                            Module = "Internal Control - Exception",
                            Name = "Share Exception report"
                        },
                        new
                        {
                            Id = new Guid("218b0863-5156-4488-ab9a-b71c8ae9d2b4"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3801),
                            IsDeleted = false,
                            Module = "Internal Control - Dashboard",
                            Name = "Create Task"
                        },
                        new
                        {
                            Id = new Guid("b2a7429b-74b8-419f-b3ec-a5cab34abfc9"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3802),
                            IsDeleted = false,
                            Module = "Internal Control - Dashboard",
                            Name = "Supervisor to Update task"
                        },
                        new
                        {
                            Id = new Guid("55b7f825-39a1-4437-a42e-2a333ae6658d"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3803),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Approve created Call Over Report"
                        },
                        new
                        {
                            Id = new Guid("26aecbd2-eb44-42b2-b83d-4b6778a9a6b8"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3804),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Reject created Call Over Report"
                        },
                        new
                        {
                            Id = new Guid("c54a7d72-d291-49a0-a6ae-ba94f662ee8e"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3804),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Save call over report attachment"
                        },
                        new
                        {
                            Id = new Guid("d4c9affa-992a-48b5-8e17-97e44aa3e232"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3805),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Submit call over reports"
                        },
                        new
                        {
                            Id = new Guid("d20f5128-ef29-4b73-bac2-28f115906938"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3806),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Save call over score"
                        },
                        new
                        {
                            Id = new Guid("1c10cda1-cd2a-42a4-b295-53404768dc35"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3807),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Create operation control exception"
                        },
                        new
                        {
                            Id = new Guid("d35ab363-6ba9-4812-b0e1-c4685725d688"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3808),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Re-assigned exception"
                        },
                        new
                        {
                            Id = new Guid("9f95e4c7-2d36-495c-b30f-44b3c136fa40"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3814),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Approve operation exception"
                        },
                        new
                        {
                            Id = new Guid("98bd95cd-1c4a-4427-bd76-957624b0ca75"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3815),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Reject operation exception"
                        },
                        new
                        {
                            Id = new Guid("4ba7de16-cc9b-4f2e-9ca6-4133cd025310"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3816),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Update operation control exception"
                        },
                        new
                        {
                            Id = new Guid("df5b084e-654d-4e82-84b2-45132d8379b7"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3817),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Audit announcement memo execution plan"
                        },
                        new
                        {
                            Id = new Guid("183358b1-ecb3-4280-bcd1-50d6cbb31e1d"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3818),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Audit engagement letter plan"
                        },
                        new
                        {
                            Id = new Guid("a78e57af-08fc-4eae-9dcc-0bbc0b973ad7"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3819),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Information requirement execution plan"
                        },
                        new
                        {
                            Id = new Guid("f6f0bfe0-8f31-484c-9d92-45803b717168"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3820),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Audit planning memo execution plan"
                        },
                        new
                        {
                            Id = new Guid("1700f355-1943-49cb-bb43-09d91ae939d9"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3821),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Audit program"
                        },
                        new
                        {
                            Id = new Guid("de6f0445-9768-4cdf-b4a6-48c5afbf666e"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3822),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve audit announcement memo"
                        },
                        new
                        {
                            Id = new Guid("87fb2cbd-b5da-48bd-8966-a6bc109e7e9d"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3823),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve Engagement Letter"
                        },
                        new
                        {
                            Id = new Guid("a777e12a-f2d2-40e4-a6a3-1673fea21290"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3824),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve Information Requirement"
                        },
                        new
                        {
                            Id = new Guid("d9e92885-ddd4-4a6e-b779-3216e1bb2b4d"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3825),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve Audit Planning Memo"
                        },
                        new
                        {
                            Id = new Guid("dc200a69-bb01-4d07-94a8-79844de5170d"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3825),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve Audit Program"
                        },
                        new
                        {
                            Id = new Guid("67805da5-8bd6-441d-9b6b-9c370673c435"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3826),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Audit Announcement Memo"
                        },
                        new
                        {
                            Id = new Guid("d9d45947-d2e5-480e-95cf-379efd384766"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3827),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Engagement Letter"
                        },
                        new
                        {
                            Id = new Guid("9da49c2d-b60c-43dc-9850-04e8e8fcd945"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3828),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Information Requirement"
                        },
                        new
                        {
                            Id = new Guid("26a31c04-6b1d-43d5-a0d0-ea73756fa20f"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3829),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Audit Planning Memo"
                        },
                        new
                        {
                            Id = new Guid("706a5ced-92e3-46f1-8379-bf78129c1f68"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3830),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Audit Program"
                        },
                        new
                        {
                            Id = new Guid("1178eaab-7eac-4a3c-9a98-3d8c4b88a5f1"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3831),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Initiate work paper"
                        },
                        new
                        {
                            Id = new Guid("c56be2cd-feb9-4186-aadb-5c631b12ca35"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3832),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Initiate audit findings"
                        },
                        new
                        {
                            Id = new Guid("d8417df3-e5b7-4ac5-98ef-8f7e0431d9bb"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3833),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve work paper"
                        },
                        new
                        {
                            Id = new Guid("e40ce5f0-19e6-49b9-a0cb-795c3ec26b67"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3834),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject work paper"
                        },
                        new
                        {
                            Id = new Guid("f6f8e3f6-d1cc-48d9-987a-bbc42eebf7f3"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3835),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve audit findings"
                        },
                        new
                        {
                            Id = new Guid("eae56b73-b087-4fd8-81dd-f35f54485718"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3836),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject audit findings"
                        },
                        new
                        {
                            Id = new Guid("39bca629-6bef-4af2-94e2-920d9ff9bc31"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3837),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update Audit Announcement Memo"
                        },
                        new
                        {
                            Id = new Guid("a5df59df-b003-42fc-802d-830bd167cb7e"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3837),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update audit engagement letter"
                        },
                        new
                        {
                            Id = new Guid("689e70cd-0249-49ef-8518-04a0e344484d"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3838),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update Information Requirement"
                        },
                        new
                        {
                            Id = new Guid("5d027a16-4660-445c-850e-63c81242f5ea"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3839),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update Audit Planning Memo"
                        },
                        new
                        {
                            Id = new Guid("5f870a71-0928-4655-a95d-ff677c4a31ff"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3840),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update Audit Program"
                        },
                        new
                        {
                            Id = new Guid("607259d7-edb7-4a94-a794-72f90ce076a0"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3841),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update work paper"
                        },
                        new
                        {
                            Id = new Guid("51e387a4-bca5-48bd-b919-5c5e466f49b9"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 182, DateTimeKind.Local).AddTicks(3842),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update audit findings"
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.SessionManagement.SessionTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LockDuration")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserName");

                    b.Property<int>("NumberOfTry")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionTracker", (string)null);
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec72f5db-5a0a-4155-9945-e808056bb7aa"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(54),
                            Email = "chukwuebuka.obieri@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwuebuka Obieri",
                            Status = 0,
                            Unit = "Risk Management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("3f2f7d25-a521-437a-bdf5-28ed13f17991"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(64),
                            Email = "iwasam.elemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Iwasam Elemi",
                            Status = 0,
                            Unit = "Risk Management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("ef2146b0-e049-44bd-9269-c1c880532362"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(74),
                            Email = "thelma.uwandu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Thelma.Uwandu",
                            Status = 0,
                            Unit = "Risk Management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("624b0c2e-913d-4055-8707-cf549296c9a5"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(77),
                            Email = "nehizena.ibhawoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Nehizena Ibhawoh",
                            Status = 0,
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("3ac09c13-6758-4046-b228-ec46ba84f44e"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(79),
                            Email = "olabisi.adesina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olabisi Adesina",
                            Status = 0,
                            Unit = "Legal",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("5f409328-6e9d-401f-b5a3-b3dd9bd4bcf6"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(81),
                            Email = "ediagbonya.osayomwanbo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ediagbonya Osayomwanbo",
                            Status = 0,
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784")
                        },
                        new
                        {
                            Id = new Guid("46d2ad2b-e638-4a9a-9f32-a041363eebef"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(83),
                            Email = "james.ewah@arm.com.ng",
                            IsDeleted = false,
                            Name = "James Ewah",
                            Status = 0,
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784")
                        },
                        new
                        {
                            Id = new Guid("be86f156-8cbb-423b-80cd-2baff40e08ce"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(85),
                            Email = "olayemi.toye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olayemi Toye",
                            Status = 0,
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("bd7f5cfb-a5fa-4625-bf77-4ba83a9a03f2"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(91),
                            Email = "phoebe.ohiembor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Phoebe Ohiembor",
                            Status = 0,
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("daef754f-ca00-44b9-924a-f525508a9f97"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(93),
                            Email = "ethan.okwara@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ethan Okwara",
                            Status = 0,
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("0804177d-1dbb-4e73-8ab2-2e3b74574297"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(97),
                            Email = "ubi.torsam@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ubi Torsam",
                            Status = 0,
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("57922db1-58cf-4ab1-b1aa-1a643c76ff61"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(98),
                            Email = "stephen.igwenwanne@arm.com.ng",
                            IsDeleted = false,
                            Name = "Stephen Igwenwanne",
                            Status = 0,
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b")
                        },
                        new
                        {
                            Id = new Guid("5ee10d80-de43-40e6-8d2c-abb4989b458c"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(100),
                            Email = "ndubuisi.anya@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ndubuisi Anya",
                            Status = 0,
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b")
                        },
                        new
                        {
                            Id = new Guid("d4bd4ee1-23a0-435d-bfa8-1c5cde1b98bd"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(102),
                            Email = "hassan.adeObafemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hassan AdeObafemi",
                            Status = 0,
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("f617b020-ef19-4025-87ec-f0b8f8f28c56"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(104),
                            Email = "david.akinboade@arm.com.ng",
                            IsDeleted = false,
                            Name = "David Akinboade",
                            Status = 0,
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("4f98ae71-63f8-4e09-84db-d025a98758a2"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(106),
                            Email = "eddy.ayikimi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Eddy Ayikimi",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("ba4832fa-43b9-49bf-a180-2d5793186bc4"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(107),
                            Email = "akpesiri.kodu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Akpesiri Kodu",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("bda3b14c-b099-4bc1-b238-c3f98aca8bb8"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(110),
                            Email = "adeleye.adewusi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adeleye Adewusi",
                            Status = 0,
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e")
                        },
                        new
                        {
                            Id = new Guid("5e3b850b-d98e-4a45-bd5b-b0dd8ccd13f0"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(113),
                            Email = "olatunde.samuel@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olatunde Samuel",
                            Status = 0,
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e")
                        },
                        new
                        {
                            Id = new Guid("486ca312-040d-4e11-a339-2eb9f90bb404"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(115),
                            Email = "bimbo.moses@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bimbo Moses",
                            Status = 0,
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("d08d9df0-73c3-4c6e-82c9-89f505194ca7"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(117),
                            Email = "aminat.ashafa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Aminat Ashafa",
                            Status = 0,
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("5cd1c3a2-0e05-4e7a-8532-8818144db5bf"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(119),
                            Email = "oluwaferanmi.olorunleke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwaferanmi Olorunleke",
                            Status = 0,
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("c263e94d-eaa9-4c1f-8885-ea7b0cb55c2e"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(121),
                            Email = "folarinde.ayenuwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Folarinde Ayenuwa",
                            Status = 0,
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("60b59bb6-689d-4738-a7b0-ecba67279401"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(123),
                            Email = "ibukun.ajose@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ibukun Ajose",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805")
                        },
                        new
                        {
                            Id = new Guid("446dc295-7426-4b45-bf33-373deb18a267"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(125),
                            Email = "kevian.kevin@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kevian Kevin",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805")
                        },
                        new
                        {
                            Id = new Guid("e8c473ba-c045-4c94-9149-b5e0637f6d76"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(127),
                            Email = "raymond.akorah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Raymond Akorah",
                            Status = 0,
                            Unit = "ARM Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("6563e2fb-e20c-4f72-9d83-7c3159c0d08e"),
                            Business = "ARM Digital Financial Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(131),
                            Email = "ina.alogwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ina Alogwu",
                            Status = 0,
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("f2bfddc5-505a-4d84-b0fb-28ca9e8539b5"),
                            Business = "ARM Digital Financial Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(133),
                            Email = "folaranmi.adefila@arm.com.ng",
                            IsDeleted = false,
                            Name = "Folaranmi Adefila",
                            Status = 0,
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("5d87315d-62c0-492c-8620-cb9e2dbf69d9"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(135),
                            Email = "oritsegbemi.agbajor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oritsegbemi Agbajor",
                            Status = 0,
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083")
                        },
                        new
                        {
                            Id = new Guid("529d26cb-d5aa-4ac8-887d-e1610a003765"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(136),
                            Email = "chidinma.mbakwe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chidinma Mbakwe",
                            Status = 0,
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083")
                        },
                        new
                        {
                            Id = new Guid("66d9f405-27cd-480e-a60e-8aba900ae9ae"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(139),
                            Email = "olugbenga.ajigbotafe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olugbenga Ajigbotafe",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("8da215b1-6982-4625-9409-d6ed283c5aba"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(140),
                            Email = "joy.oyekan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Joy Oyekan",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("b46ce177-7334-4aaf-a397-1367533d7696"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(142),
                            Email = "oluwabunmi.abiodun-wright@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwabunmi Abiodun-Wright",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("f8a1d68b-beff-47ec-b1c4-3a6fb3e08008"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(143),
                            Email = "ezekiel.solomon@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ezekiel Solomon",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("b585820b-9363-4409-aee4-cc6abc079659"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(147),
                            Email = "judith.okeke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Judith Okeke",
                            Status = 0,
                            Unit = "Trading & Brokerage",
                            UnitId = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7")
                        },
                        new
                        {
                            Id = new Guid("351e819d-93ad-42b9-b0c7-d87fe9262007"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(149),
                            Email = "carol.ariyibi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Carol Ariyibi",
                            Status = 0,
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621")
                        },
                        new
                        {
                            Id = new Guid("0c9c724c-40c8-4fbc-94fe-40811da631c0"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(150),
                            Email = "olaoluwa.omolayole@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olaoluwa Omolayole",
                            Status = 0,
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621")
                        },
                        new
                        {
                            Id = new Guid("cda6e05b-83e9-4690-9942-5707650a179d"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(152),
                            Email = "jacqueline.adefeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jacqueline Adefeso",
                            Status = 0,
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9")
                        },
                        new
                        {
                            Id = new Guid("5ab01da1-a658-4c95-8b98-70927fdd7366"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(153),
                            Email = "moradeke.odugbesan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moradeke Odugbesan",
                            Status = 0,
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9")
                        },
                        new
                        {
                            Id = new Guid("a3c8b4a6-df1b-40ce-bfae-fe6950cba246"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(156),
                            Email = "dare.shobajo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Dare Shobajo",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("67d5fdd9-df96-45c1-8518-f86c7c21c6ed"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(158),
                            Email = "moshood.hassan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moshood Hassan",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("eab2d9ae-f0fb-4694-a8df-17d6ce3ee445"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(160),
                            Email = "vwede.edah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Vwede Edah",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("714a06cb-b555-4e26-9a03-2aed6164f3ac"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(163),
                            Email = "opeyemi.babasola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Babasola",
                            Status = 0,
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("474ce1f9-b5c6-40ae-bf63-58457a356ee5"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(170),
                            Email = "doyinsola.ola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Doyinsola Ola",
                            Status = 0,
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507")
                        },
                        new
                        {
                            Id = new Guid("0c46d328-85a4-4fd1-94ad-2a97f18e7f7d"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(172),
                            Email = "rasheed.adebola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rasheed Adebola",
                            Status = 0,
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507")
                        },
                        new
                        {
                            Id = new Guid("60bb1294-98ac-4cbf-b91f-485206dd865b"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(173),
                            Email = "gozie.alozieuwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gozie Alozieuwa",
                            Status = 0,
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("25e66c7c-ba07-4a6c-8f70-f16e131f5e85"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(175),
                            Email = "lincoln.ogigai@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lincoln Ogigai",
                            Status = 0,
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("a8b7ab6a-f4b9-4bc1-9beb-77eec51530d2"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(177),
                            Email = "oyinkan.aregbesola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oyinkan Aregbesola",
                            Status = 0,
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d")
                        },
                        new
                        {
                            Id = new Guid("ba5ad227-38be-41f5-9aeb-ed06469e5c48"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(178),
                            Email = "moyosore.taiwo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moyosore Taiwo",
                            Status = 0,
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d")
                        },
                        new
                        {
                            Id = new Guid("258e4d33-b89a-4935-9b70-ef0b636f161a"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(181),
                            Email = "jobalo.oshinkalu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jobalo Oshinkalu",
                            Status = 0,
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d")
                        },
                        new
                        {
                            Id = new Guid("c1795a20-39a8-44b1-9b8f-ad1a283e34ab"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(184),
                            Email = "oyedele.oyinbojuni@armharith.com",
                            IsDeleted = false,
                            Name = "Oyedele Oyinbojuni",
                            Status = 0,
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d")
                        },
                        new
                        {
                            Id = new Guid("9b0e0280-d88c-497f-8a62-30ed341504b9"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(186),
                            Email = "isaac.elakhe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Isaac Elakhe",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("552deb4b-353a-447d-9560-81a696f6bf95"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(188),
                            Email = "oladupe.oshinuga@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oladupe Oshinuga",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("191954a3-f729-4c64-988f-d3bf5f54c422"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(190),
                            Email = "adetayo.adebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adetayo Adebiyi",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("8dc06321-888f-45ed-80c7-ff45f9c1f0ac"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(191),
                            Email = "oluwatobi.oyebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatobi Oyebiyi",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("cff3c259-4784-46d4-a8dc-49f6107741c1"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(193),
                            Email = "itunu.olatunde-folaji@arm.com.ng",
                            IsDeleted = false,
                            Name = "Itunu Olatunde-Folaji",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("c330b606-4fe0-414a-9512-17c7f14eb4dc"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(194),
                            Email = "roselina.ajah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Roselina Ajah",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("a292f054-eb3f-4fca-90bc-1aebbcf3f442"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(196),
                            Email = "abayomi.apoeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Abayomi Apoeso",
                            Status = 0,
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("01e0769e-57b4-44f5-b72e-b1dfbb9ece62"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(199),
                            Email = "faith.sani@arm.com.ng",
                            IsDeleted = false,
                            Name = "Faith Sani",
                            Status = 0,
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("75421c67-075e-4e6e-aabb-2afc66204d2b"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(201),
                            Email = "mounir.bouba@arm.com.ng",
                            IsDeleted = false,
                            Name = "Mounir Bouba",
                            Status = 0,
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("7e1c1cb5-aff6-4fe7-b25d-55bb601b0037"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(203),
                            Email = "chukwufumnanya.chizea@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwufumnanya Chizea",
                            Status = 0,
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("720b3aa9-be62-4a03-ac1c-efedda812e7a"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(205),
                            Email = "raphael.emenyonu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Raphael Emenyonu",
                            Status = 0,
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3")
                        },
                        new
                        {
                            Id = new Guid("1f2c3063-f650-4988-b407-845967a5ebd0"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(207),
                            Email = "hamed.omotayo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hamed Omotayo",
                            Status = 0,
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3")
                        },
                        new
                        {
                            Id = new Guid("02b7cb3b-7a8a-4aa8-bd2b-1152687937c4"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(208),
                            Email = "anuoluwapo.sebanjo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Anuoluwapo Sebanjo",
                            Status = 0,
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("b82434ee-9db0-4733-8407-f1e2f960ec39"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(210),
                            Email = "philip.aikinomiora @arm.com.ng",
                            IsDeleted = false,
                            Name = "Philip Aikinomiora",
                            Status = 0,
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("3551c5cc-a7ef-4e11-a8d5-ebacd3a2207d"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(212),
                            Email = "gbeminiyi.onipede@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gbeminiyi Onipede",
                            Status = 0,
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb")
                        },
                        new
                        {
                            Id = new Guid("5d942274-0819-4339-a113-701920f331f2"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(215),
                            Email = "olukayode.fajuyagbe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olukayode Fajuyagbe",
                            Status = 0,
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb")
                        },
                        new
                        {
                            Id = new Guid("93562d7a-bae5-4d0f-a80c-e5b09d35697e"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(217),
                            Email = "opeyemi.oshinyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Oshinyemi",
                            Status = 0,
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("a2a4de3e-b9e9-4be4-8627-980276f08ba6"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(219),
                            Email = "james.agu@arm.com.ng",
                            IsDeleted = false,
                            Name = "James Agu",
                            Status = 0,
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("35732f6a-6001-410c-bd74-debfc4199cca"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(220),
                            Email = "olawale.bakir@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olawale Bakir",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("03cdff18-db47-4180-904d-33a51fe45732"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(222),
                            Email = "barakat.olusanya@arm.com.ng",
                            IsDeleted = false,
                            Name = "Barakat Olusanya",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("9f4470fb-8dca-481c-b679-fae02979e889"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(223),
                            Email = "gbenga.sonubi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gbenga Sonubi",
                            Status = 0,
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("93543a4b-17c3-479f-b27e-dbfb2ef2748d"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(225),
                            Email = "kareem.bashir@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kareem Bashir",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("b178e9e0-70a0-4cc4-891e-d72e7d2ef7e1"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(226),
                            Email = "patrick.ayele@arm.com.ng",
                            IsDeleted = false,
                            Name = "Patrick Ayele",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("c61ab5c7-d33a-44b0-87bd-4dc68bc29874"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(229),
                            Email = "oluyemi.omodayo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluyemi Omodayo",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("a91bc6bc-9e80-4ead-87b4-66c5a7777305"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(231),
                            Email = "oluwatosin.adeboyejo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Adeboyejo",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("0fa24a96-6fdc-4903-90b2-f74d18a9aa9a"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(232),
                            Email = "elizabeth.alloy@arm.com.ng",
                            IsDeleted = false,
                            Name = "Elizabeth Alloy",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("6bf7f9e0-f82c-4681-bff6-070f86f127d3"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(234),
                            Email = "stephanie.gber@arm.com.ng",
                            IsDeleted = false,
                            Name = "Stephanie Gber",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("40bfb26f-268a-4276-9a48-dfd8bdb16ddd"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(240),
                            Email = "temitope.akinola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Temitope Akinola",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("e798e83e-78e7-4288-91e8-dad4797aead9"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(242),
                            Email = "valerie.okosun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Valerie Okosun",
                            Status = 0,
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76")
                        },
                        new
                        {
                            Id = new Guid("246e6d02-7aca-44c2-ae70-61c75fc52dab"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(244),
                            Email = "kingsley.ottah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kingsley Ottah",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76")
                        },
                        new
                        {
                            Id = new Guid("65ec6ea5-d808-458b-8258-d00ee42f1b38"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(245),
                            Email = "ramond.akorah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ramond Akorah",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("2794fa72-75df-4333-9db2-a50b03866b76"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(248),
                            Email = "oluwatosin.afolayan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Afolayan",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("16a35e4b-6b32-4b31-9034-4d89b9b3d15d"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(250),
                            Email = "evelyn.nwogu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Evelyn Nwogu",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("30689a01-2acb-4cff-8b95-22b862606c3b"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(251),
                            Email = "babatunde.osho@arm.com.ng",
                            IsDeleted = false,
                            Name = "Babatunde Osho",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("d74778a5-4176-49de-bfbb-2d9946f3208f"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(253),
                            Email = "augustine.chukwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Augustine Chukwu",
                            Status = 0,
                            Unit = "Information Security",
                            UnitId = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb")
                        },
                        new
                        {
                            Id = new Guid("c1866848-fde9-477e-8588-2ce91a11de5b"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(254),
                            Email = "kiadum.nwakoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kiadum Nwakoh",
                            Status = 0,
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("cbb1b7a1-7154-44f5-9f40-a435e044ab0f"),
                            Business = "ARM TRUSTEES",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(256),
                            Email = "emmanuella.anaza@arm.com.ng",
                            IsDeleted = false,
                            Name = "Emmanuella Anaza",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("90cd9708-b7b4-4203-ba98-6ce8c66e623e")
                        },
                        new
                        {
                            Id = new Guid("08120b56-7f69-4444-99aa-22c355c32262"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(257),
                            Email = "sandra.onwordi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Sandra Onwordi",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76")
                        },
                        new
                        {
                            Id = new Guid("45f49f1c-bee7-487a-a4b4-25ed724531f7"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(259),
                            Email = "oluwatomilola.oduntan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatomilola Oduntan",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("e1e261f2-3b90-4b97-8ecc-25520b1266cf"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(262),
                            Email = "ogugua.emamoke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ogugua Emamoke",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("3d512136-37dc-436e-963b-e84a6698a52b"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(263),
                            Email = "abiola.itakpe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Abiola Itakpe",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("f0acd510-c285-4d22-9e70-a016ed65fc60"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(265),
                            Email = "chidinma.akosa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chidinma Akosa",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("09f680e1-2321-4117-89ac-74f5f951579c"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(266),
                            Email = "ifeoma.ofili@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeoma Ofili",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287")
                        },
                        new
                        {
                            Id = new Guid("dadb8a2f-3b31-49b9-a7a7-0bd4f85dbb22"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(268),
                            Email = "ademola.adebisi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ademola Adebisi",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287")
                        },
                        new
                        {
                            Id = new Guid("24c994e9-aa9f-4789-af32-d575dc266189"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(269),
                            Email = "victoria.itrechio@arm.com.ng",
                            IsDeleted = false,
                            Name = "Victoria Itrechio",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287")
                        },
                        new
                        {
                            Id = new Guid("f453d730-d870-44d9-bdc8-a762d5567660"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(271),
                            Email = "adebayo.fagbola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adebayo Fagbola",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("eb874806-5550-4297-b409-6f387be1df65"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(272),
                            Email = "maryann.kakulu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Maryann Kakulu",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("f9e47dca-c218-4f3d-a72f-f72e20ca0a9e"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(276),
                            Email = "babatunde.abimbola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Babatunde Abimbola",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("407d11a3-a89c-4cea-9133-d0d16e9c253d"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(277),
                            Email = "kai.orga@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kai Orga",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("2b5189ca-bf72-472c-8223-98373c974a26"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(280),
                            Email = "moronke.bamgbala@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moronke Bamgbala",
                            Status = 0,
                            Unit = "ARM Trustees",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("3fa78520-dc5d-4780-ad14-8d17f3b45111"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(281),
                            Email = "uche.azubuike@arm.com.ng",
                            IsDeleted = false,
                            Name = "Uche Azubuike",
                            Status = 0,
                            Unit = "RFL",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("235b29a5-0a06-478d-8ac5-0839af8a2ba6"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(283),
                            Email = "Wilfird.korsaga@arm.com.ng",
                            IsDeleted = false,
                            Name = "Wilfird Korsaga",
                            Status = 0,
                            Unit = "AAFML",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("54a31cc6-b0ce-4d56-8dcc-7d5d0fd8d1a7"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(284),
                            Email = "yusuf.agbolahan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Yusuf Agbolahan",
                            Status = 0,
                            Unit = "Investment Banking",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("e6884bb0-eff0-4c14-95fe-039936258a72"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(286),
                            Email = "rachel.moreoshodi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rachel Moreoshodi",
                            Status = 0,
                            Unit = "ARMHIIL",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("9e6b1631-51c1-48b7-9364-687c9f7b6bfa"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(287),
                            Email = "damilare.mesimo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Damilare Mmesimo",
                            Status = 0,
                            Unit = "DFS",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("f69f6476-2851-4388-bdf3-618b6835a5e2"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(291),
                            Email = "funmilayo.adeyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Funmilayo Adeyemi",
                            Status = 0,
                            Unit = "DFS",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("9c139bcc-521c-4e66-8bba-74f1e1816e57"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(292),
                            Email = "jobalo.oshikanlu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jobalo Oshikanlu",
                            Status = 0,
                            Unit = "ARMHIIL",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("58af839e-8a5b-40a1-8238-6e594ed4d847"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(294),
                            Email = "toni.timi-oyefolu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Toni Timi-Oyefolu",
                            Status = 0,
                            Unit = "ARMIM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("44be1179-e341-40b9-a14d-757f7862b8f6"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(295),
                            Email = "jumoke.ogundare@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jumoke Ogundare",
                            Status = 0,
                            Unit = "ARM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("9f53c46c-14cb-4cdd-8b1c-f22309aa51e7"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(297),
                            Email = "wale.odutola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Wale Odutola",
                            Status = 0,
                            Unit = "ARM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("6b643b96-46df-405c-9647-41a48e5d7561"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(298),
                            Email = "osahon.ogiemudia@arm.com.ng",
                            IsDeleted = false,
                            Name = "Osahon Ogiemudia",
                            Status = 0,
                            Unit = "ARM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("11379b87-d5a8-416e-9626-f6b2a768e860"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(300),
                            Email = "chijioke.iteghete@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chijioke Iteghete",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("87e03502-359d-43b6-8634-192bec070530"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(301),
                            Email = "ayodele.oluleye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ayodele Oluleye",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("90cef08a-0d77-45cd-8dc2-070e9b911564"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(311),
                            Email = "adepeju.sangotade@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adepeju Sangotade",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("0bebb604-4da1-4e4a-92d0-338e43860293"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(312),
                            Email = "anuoluwapo.senbanjo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Anuoluwapo Senbanjo",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("2856987a-cd13-4e0f-bbf1-d91537844141"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(314),
                            Email = "walter.agbongbohielu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Walter Agbongbohielu",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("51f3936c-e778-4bf4-bf1c-26a7ca704fc0"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(315),
                            Email = "olufisayo.bassey@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olufisayo Bassey",
                            Status = 0,
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("e72fa77d-dfdf-4a6a-8de5-fc5078f7b310"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(317),
                            Email = "opeyemi.oshiyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Oshiyemi",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("4a1dc410-f447-4578-8bc5-0b3ee4c4762b"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(318),
                            Email = "tobi.babalola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Tobi Babalola",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("0d5895c6-e946-46ea-80b4-42c59ea33ccd"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(320),
                            Email = "oluwatosin.oluyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Oluyemi",
                            Status = 0,
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("c0b827ae-ab51-4732-a4dc-1843ff4c9885"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(321),
                            Email = "tosin.adesope@arm.com.ng",
                            IsDeleted = false,
                            Name = "Tosin Adesope",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("c29d85d6-acc2-4487-be23-88dc4310c125"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(325),
                            Email = "tobby.tobby@arm.com.ng",
                            IsDeleted = false,
                            Name = "Tobby Moses Tobby",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("ca849a2b-a155-48c8-9eca-8277fa7f28db"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(326),
                            Email = "olayinka.oyewole@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olayinka Oyewole",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("2c2f8987-3c4f-44b1-b86c-37504c8bab92"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(327),
                            Email = "ifeanyi.esogwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeanyi Esogwa",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("e696e29d-5d7d-443a-96dc-7f20c2fd39bc"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(330),
                            Email = "victor.arowolo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Victor Arowolo",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("0e781544-b17b-49e7-b077-c689a7c3b459"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(332),
                            Email = "oluwaferanmi.adedokun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwaferanmi Adedokun",
                            Status = 0,
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("5812659b-dc93-4a40-ac25-94f23d75eeaa"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(333),
                            Email = "oyenike.oluwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oyenike Oluwa",
                            Status = 0,
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("2dda5c8b-2977-434e-b273-eccdcb793138"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(335),
                            Email = "rosemary.francis@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rosemary Francis",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("994fc348-ca35-4283-8352-d1e9523edb94"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(336),
                            Email = "busola.alakija@arm.com.ng",
                            IsDeleted = false,
                            Name = "Busola Alakija",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("f85c6434-828f-4547-a75d-34ce2edc96dc"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(339),
                            Email = "augustina.osagie@arm.com.ng",
                            IsDeleted = false,
                            Name = "Augustina Osagie",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("368989f2-3eaf-4ba6-afd5-d0fda340d2fd"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(341),
                            Email = "emmanuel.peter@arm.com.ng",
                            IsDeleted = false,
                            Name = "Emmanuel Peter",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("f1da0300-7715-4e59-8d84-2ef5e7f569e9"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(343),
                            Email = "toluwalase.ajediti@arm.com.ng",
                            IsDeleted = false,
                            Name = "Toluwalase Ajediti",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("f4788ce8-f015-4d8b-bba0-98c5e6411b0b"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(344),
                            Email = "oluseyi.omoleye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluseyi Omoleye",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("b21c226f-3dc5-4923-98f5-4816219e259c"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(346),
                            Email = "thompson.shedara@arm.com.ng",
                            IsDeleted = false,
                            Name = "Thompson Shedara",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("be413aaf-5e90-4c57-b551-9c92b7a01d82"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(347),
                            Email = "oladupe.dare@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oladupe Dare",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("6a99182e-abac-4400-bec2-2fc940e7c930"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(349),
                            Email = "martins.onemolease@arm.com.ng",
                            IsDeleted = false,
                            Name = "Martins Onemolease",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("5a9b20fe-cbd7-4d36-8de8-54d89a8d410a"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(350),
                            Email = "ifeoluwani.okunoye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeoluwani Okunoye",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("d1bec837-3f38-4e2c-b5a8-daaf3613648b"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(353),
                            Email = "hassan.balogun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hassan Balogun",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("b57d499f-3fd8-4b60-8715-2ef2b765de3f"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(355),
                            Email = "chioma.opara@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chioma Opara",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("1216a5e9-05e2-4ddc-b70f-7ba4a88b002a"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(356),
                            Email = "ibrahim.owolabi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ibrahim Owolabi",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("d638462f-bde3-4555-889b-2af892201b07")
                        },
                        new
                        {
                            Id = new Guid("1f38ffc0-e89d-4482-a29a-a8bf42f075c1"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(358),
                            Email = "oluwakemi.onipede@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwakemi Onipede",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("d638462f-bde3-4555-889b-2af892201b07")
                        },
                        new
                        {
                            Id = new Guid("753e11d3-ea07-477b-8b36-9f5f9516cd06"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(359),
                            Email = "covenant.ukachi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Covenant Ukachi",
                            Status = 0,
                            Unit = "Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("32cff064-7706-4301-a09b-c80aee863d90"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(362),
                            Email = "bukunmi.chuka@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bukunmi Chuka",
                            Status = 0,
                            Unit = "Registrars",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("bcc86389-dff2-4f1a-b3b0-6ed998bbc141"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(363),
                            Email = "bridget.odubela@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bridget Odubela",
                            Status = 0,
                            Unit = "Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("c34ca755-acf4-4b24-bc41-f34d1c4890bb"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(365),
                            Email = "amara.nwafor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Amara Nwafor",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("636b2119-6577-4c10-bb27-ac9b54b52810"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(368),
                            Email = "chisom.okeke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chisom Okeke",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("72dbcaab-6187-42be-909e-6be2fca1b37b"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(370),
                            Email = "ifeyinwa.amadi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeyinwa Amadi",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("977d0894-c210-4b4f-a3e0-60736b379951"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(371),
                            Email = "victoria.makama@arm.com.ng",
                            IsDeleted = false,
                            Name = "Victoria Makama",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("b218ec77-537d-4359-bf69-e97016d6e209"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(377),
                            Email = "dolapo.fashina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Dolapo Fashina",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("e4505312-5497-415f-8cab-f9980b1409fa"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(379),
                            Email = "oluwabunmi.ayeni@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwabunmi Ayeni",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("9a4c51a4-4b67-4dec-b174-6737b2ef3d31"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(381),
                            Email = "eno.udoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Eno Udoh",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("74c83a17-fb95-4c96-8388-2b38e95f3249"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(382),
                            Email = "busola.akerele@arm.com.ng",
                            IsDeleted = false,
                            Name = "Busola Akerele",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("0b3c0f0c-8f71-42eb-8d64-fcc00e07ab85"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(384),
                            Email = "inemesit.anani@arm.com.ng",
                            IsDeleted = false,
                            Name = "Inemesit Anani",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("ecf418a3-fb65-4624-b949-ba071a33c898"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(387),
                            Email = "dolapo.oyeleke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adedolapo Oyeleke",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("c707d380-8308-49a2-b967-6c0cdc1cbfa9"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(389),
                            Email = "chinonso.okocha@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chinonso Okocha",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("31d75a8b-1fdc-42c8-abe7-710468943af6"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(390),
                            Email = "simisola.famous-cole@arm.com.ng",
                            IsDeleted = false,
                            Name = "Simisola Famous-Cole",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("386c6021-56dd-448a-a280-067beb67bf3e"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(392),
                            Email = "rukayat.adepitan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rukayat Adepitan",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5fefe314-1c4a-4aa5-a30f-03998b36a846"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(393),
                            Email = "deborah.dubukumah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Deborah Dubukumah",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("676f9e64-a411-4e71-8024-63f782886511"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(395),
                            Email = "damilola.akinlade@arm.com.ng",
                            IsDeleted = false,
                            Name = "Damilola Akinlade",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("2b0c9b74-ba21-4f61-bfd7-a502a65e61b3"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(396),
                            Email = "yetunde.adio@arm.com.ng",
                            IsDeleted = false,
                            Name = "Yetunde Adio",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5a71dd57-aebb-4445-bb2f-dc1e88606b35"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(398),
                            Email = "shulammite.wokwereze@arm.com.ng",
                            IsDeleted = false,
                            Name = "Shulammite Wokwereze",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("da657561-5df6-49cc-a0d6-166815433355"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(401),
                            Email = "bukola.abdulakeem@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bukola Abdulakeem",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5f14c06d-282b-4b63-94eb-8f1540ad9cf0"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(402),
                            Email = "lebechi.ndukwe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lebechi Ndukwe",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("b2e02637-bfb4-4357-9d8c-9fff50e11fdf"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(405),
                            Email = "esther.onumaegbu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Esther Onumaegbu",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("c97eb3ad-8d47-475d-a1fa-88378cbc9941"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(406),
                            Email = "godwin.ebie@arm.com.ng",
                            IsDeleted = false,
                            Name = "Godwin Ebie",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("c9dd7fe7-5d87-42f3-90b0-46e2a1abe1e4"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(408),
                            Email = "faith.ojo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Faith Ojo",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("ce78fcec-387b-451f-992d-b9c970264f70"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(409),
                            Email = "veronica.oluigbo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Veronica Oluigbo",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("03a252a6-4bc3-46fb-92c4-b179fb01f923"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(411),
                            Email = "anike.olalere@arm.com.ng",
                            IsDeleted = false,
                            Name = "Anike Olalere",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("d9ac8722-1cb3-4212-852c-25d685126331"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(412),
                            Email = "chukwuebuka.agbo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwuebuka Agbo",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("86ad141b-aa08-4f7f-8b22-8c0729373121"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(415),
                            Email = "chinonso.iwuozor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chinonso Iwuozor",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("b5f96018-1094-4129-ae2c-fad35d57e31d"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(417),
                            Email = "jane.david-abia@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jane David-Abia",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("3b4cedf2-3419-433e-85fb-dd52f74ae28c"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(418),
                            Email = "olufunke.sipe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olufunke Sipe",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5e12ebb7-dc09-455d-a15d-f352067d7e37"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(420),
                            Email = "moyosore.ibitoye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moyosore Ibitoye",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("78ad62ab-e01a-4afd-bbc7-108d4c1b61ee"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(421),
                            Email = "victoria.chukwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Victoria Chukwu",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("19b79846-7c01-4dfa-85b9-9f666a0c8582"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(424),
                            Email = "evelyn.osindeinde@arm.com.ng",
                            IsDeleted = false,
                            Name = "Evelyn Osindeinde",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("79161186-0f2d-4448-bf72-48628f6f9e2a"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(425),
                            Email = "adaeze.ukah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adaeze Ukah",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("0663d5d9-3c25-4fbe-bd4d-b033dafb64ef"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(427),
                            Email = "taiwo.odumuyiwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Taiwo Odumuyiwa",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("bfb53c65-c489-45f0-8485-8f82c76f1d42"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(430),
                            Email = "adepeju-lola.sangotade@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adepeju-Lola Sangotade",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("e0230414-7fbb-447b-90bd-02fcf5a48503"),
                            Business = "ARM Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(431),
                            Email = "enoma.osazee@arm.com.ng",
                            IsDeleted = false,
                            Name = "Enoma Osazee",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("dbf91a6a-13de-43f5-9c21-8544dd2db66a"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(433),
                            Email = "amaka.nnotum@arm.com.ng",
                            IsDeleted = false,
                            Name = "Amaka Nnotum",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("fb274136-84fe-430d-bab9-6647909a1a48")
                        },
                        new
                        {
                            Id = new Guid("160beb93-55f1-4256-b76d-ed1ab1c5846e"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(435),
                            Email = "ayomide.ojeniyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ayomide Ojeniyi",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb")
                        },
                        new
                        {
                            Id = new Guid("ce3e8ba4-342b-4166-a92d-bb425204cfdd"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(436),
                            Email = "lawrence.olusina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lawrence Olusina",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb")
                        },
                        new
                        {
                            Id = new Guid("5466e8b9-70a8-4511-8510-4854095b9982"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(438),
                            Email = "ilerioluwa.akinosun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ilerioluwa Akinosun",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb")
                        },
                        new
                        {
                            Id = new Guid("c1c2828c-7ed9-4c06-80d0-1d1dde99dc03"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(445),
                            Email = "olashile.abowaba@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olashile Abowaba",
                            Status = 0,
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("82aa1fd1-fa50-4e6f-9b7d-906c8dabf324"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(447),
                            Email = "ifeoluwa.obigbemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeoluwa Obigbemi",
                            Status = 0,
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("c73c54a5-4247-4dd1-9157-41380d5a9b83"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(450),
                            Email = "gift.aizebeoje@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gift Aizebeoje",
                            Status = 0,
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("93697f1c-73d5-46dc-b6fb-6042a61e1c22"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(452),
                            Email = "adeolu.folayira@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adeolu Folayira",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("3d555125-903e-4b88-bc08-88aa2bdc4ffc"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(453),
                            Email = "hannah.aliu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hannah Aliu",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("06ce9ce9-20a4-4772-b89e-a50595919ec2"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(455),
                            Email = "oluwafunke.nasiru@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwafunke Nasiru",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("06af31fa-1388-489b-be62-8f6fea189530"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(456),
                            Email = "ademola.fatade@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ademola Fatade",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("887c4ddf-51b2-4f51-8308-9af05055f8d7"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(458),
                            Email = "faizat.adeboye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Faizat Adeboye",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("cc065087-7bdd-45aa-b00b-60ecde517677"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(459),
                            Email = "taiwo.olusola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Taiwo Olusola",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("3cef0e5c-e51f-48bd-8c6e-4351f117f0d7"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(461),
                            Email = "olanrewaju.fatai@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olanrewaju Fatai@",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("2576c83b-bdc9-4b0b-9040-134f5fe47d95"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(464),
                            Email = "joy.ogunbi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Joy Ogunbi",
                            Status = 0,
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d667eed-04db-481c-9ae0-1c7e614e4507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3954),
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3966),
                            IsDeleted = false,
                            ModuleItemType = 1,
                            Name = "UnitHead"
                        },
                        new
                        {
                            Id = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3968),
                            IsDeleted = false,
                            ModuleItemType = 1,
                            Name = "RiskChampion"
                        },
                        new
                        {
                            Id = new Guid("a8cac012-b665-481a-8028-90ed1c4226f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3977),
                            IsDeleted = false,
                            ModuleItemType = 1,
                            Name = "Staff"
                        },
                        new
                        {
                            Id = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3979),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "OtherComplianceUser"
                        },
                        new
                        {
                            Id = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3981),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "ComplianceOfficer"
                        },
                        new
                        {
                            Id = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3983),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "HROfficer"
                        },
                        new
                        {
                            Id = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3990),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "FINCON"
                        },
                        new
                        {
                            Id = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3992),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3993),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditOfficer"
                        },
                        new
                        {
                            Id = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3995),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditSupervisor"
                        },
                        new
                        {
                            Id = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3997),
                            IsDeleted = false,
                            ModuleItemType = 7,
                            Name = "InternalControlOfficer"
                        },
                        new
                        {
                            Id = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(3999),
                            IsDeleted = false,
                            ModuleItemType = 7,
                            Name = "InternalControlSupervisor"
                        },
                        new
                        {
                            Id = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4000),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditManagerConcern"
                        },
                        new
                        {
                            Id = new Guid("e20991e8-6233-4635-8829-4ee12bf7004d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4002),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditExecutiveManagerConcern"
                        },
                        new
                        {
                            Id = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4007),
                            IsDeleted = false,
                            ModuleItemType = 7,
                            Name = "InternalControlCallOverOfficer"
                        },
                        new
                        {
                            Id = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4009),
                            IsDeleted = false,
                            ModuleItemType = 7,
                            Name = "InternalControlCallOverSupervisor"
                        },
                        new
                        {
                            Id = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4011),
                            IsDeleted = false,
                            ModuleItemType = 10,
                            Name = "OperationControlOfficer"
                        },
                        new
                        {
                            Id = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4012),
                            IsDeleted = false,
                            ModuleItemType = 10,
                            Name = "OperationControlSupervisor"
                        },
                        new
                        {
                            Id = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4014),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditee"
                        },
                        new
                        {
                            Id = new Guid("e4495bcf-454a-4f04-92e2-9cb02605db3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4015),
                            IsDeleted = false,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = new Guid("2fc82d56-b5ac-44a6-8f5e-3ea708d722e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4017),
                            IsDeleted = false,
                            ModuleItemType = 13,
                            Name = "InfoSec Officer"
                        },
                        new
                        {
                            Id = new Guid("dfdb754d-c7c7-4070-be8a-c86ea420f4c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4019),
                            IsDeleted = false,
                            ModuleItemType = 13,
                            Name = "InfoSec ISO Risk Champion"
                        },
                        new
                        {
                            Id = new Guid("d67f889d-7635-40ae-bb90-340b57032ad5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(4022),
                            IsDeleted = false,
                            ModuleItemType = 13,
                            Name = "InfoSec ISO Unit Head"
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRoleMap", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoleMap", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("744e925b-6aa7-45fa-824c-0b505a04e20a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9874),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("744e925b-6aa7-45fa-824c-0b505a04e20a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9882),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b241d596-f089-434b-a94c-16114c0a4b4b"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9884),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5074d70a-7471-46a7-8064-605b9710ac74"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9885),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5074d70a-7471-46a7-8064-605b9710ac74"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9888),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5074d70a-7471-46a7-8064-605b9710ac74"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9889),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("068e132d-97ae-4ebe-88a1-2787c944be70"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9891),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("068e132d-97ae-4ebe-88a1-2787c944be70"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9892),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("aa8b94de-4efb-48ed-95f2-3efb1e980555"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9894),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("aa8b94de-4efb-48ed-95f2-3efb1e980555"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9895),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("53d973cc-d395-4789-8b8f-f394b2dd0b2f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9896),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d3fcfd86-22fb-4255-8255-a45704e47378"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9898),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4ed59e86-27c2-4270-bc10-060676cec0a0"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9899),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("18d63e3e-1940-4f80-8c69-29bcc9392b80"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9901),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c6492702-c4f5-4099-b360-be3d0f37180b"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9903),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("82d94cb6-6e22-476b-b8a2-a6c996636c73"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9904),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("82d94cb6-6e22-476b-b8a2-a6c996636c73"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9905),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("59a83afc-7720-4f57-bbea-80d8358f9b0d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9907),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8e4a4569-dbae-4cec-a86b-d43bf743955e"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9908),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3fc9a856-df88-4bc8-88b1-cf4b65f3928d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9909),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7b13db39-3b27-4ddf-822e-c96a0514434e"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9911),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("fd313524-5a4f-4667-b2f9-219b64558435"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9912),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a17fba1c-a1c8-47c1-b0fd-577aa740757a"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9914),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8c5d8d3e-587b-4ad7-8333-5ff668390cf3"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9915),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8c5d8d3e-587b-4ad7-8333-5ff668390cf3"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9916),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("86de4f7d-fe4c-4a54-a0bc-a894883424c5"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9919),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9920),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9922),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9923),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9925),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("98fc4263-5311-4a1b-8889-aaf3541781e3"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9926),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("98fc4263-5311-4a1b-8889-aaf3541781e3"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9928),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("219903d2-54d5-42e2-9916-1bd7420e1cc1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9929),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("eac59325-3b9c-4701-ac63-b4dc55d65872"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9931),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("eac59325-3b9c-4701-ac63-b4dc55d65872"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9933),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5438428c-8c2b-48bd-b1d1-2382c488ca9a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9934),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5438428c-8c2b-48bd-b1d1-2382c488ca9a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9935),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5438428c-8c2b-48bd-b1d1-2382c488ca9a"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9937),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ebcf8632-14fe-4c88-9684-93f01986a209"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9938),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ebcf8632-14fe-4c88-9684-93f01986a209"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9939),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0668bb60-8c7a-4392-9a92-d1ec04924a48"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9941),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("39eab3e1-ec3c-4e46-b220-72f24a1a9b6a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9942),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("f0a8aaf4-89ae-4a13-bb10-e6f5104646bd"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9943),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("68b49eca-2285-46d4-8449-4cf78a8a730d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9949),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("be485a1a-1e6b-452d-a797-dd2dfe5a6902"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9951),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("62db3f26-b6bd-4a06-9a89-dc93c249c73d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9952),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("62db3f26-b6bd-4a06-9a89-dc93c249c73d"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9953),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9435698f-d64b-413a-b334-f476bd3ed548"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9955),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9435698f-d64b-413a-b334-f476bd3ed548"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9956),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9e27a329-52f7-4004-8a1a-090ddcac29d0"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9957),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9e27a329-52f7-4004-8a1a-090ddcac29d0"),
                            RoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9959),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("04a192db-f039-49c7-bbc9-f7d7b4085ecd"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9960),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("04a192db-f039-49c7-bbc9-f7d7b4085ecd"),
                            RoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9965),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3d1dd8c9-46df-47d6-bfe5-e6707937301c"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9966),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("663cc78c-a538-4ca0-84a3-7d182e8c2292"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9968),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("663cc78c-a538-4ca0-84a3-7d182e8c2292"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9969),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d8ed93b7-a3da-4745-ba17-486a11fe10df"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9970),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("703c42fa-406c-453c-b3cf-a2fb3ad354a1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9972),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("703c42fa-406c-453c-b3cf-a2fb3ad354a1"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9973),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b64e0d40-6f17-4e47-a0be-6674b9b2ac18"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9974),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5e902748-0188-405d-8a9b-cb3e22098d1b"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9976),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5e902748-0188-405d-8a9b-cb3e22098d1b"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9977),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("00fecf89-bb70-4e62-a76b-cd1794d6a21f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9978),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9980),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9981),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9983),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9984),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9985),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9987),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9988),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9989),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6209fd2d-95d0-4927-9ada-460ecd424e54"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9990),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3720bdd2-8bf3-4f07-80e1-89e087e7347d"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9992),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("73355329-e14d-4c0f-9836-ebf962a9298f"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9993),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("984b9023-c774-4e90-a16e-3af0aad05a3c"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9994),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("984b9023-c774-4e90-a16e-3af0aad05a3c"),
                            RoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9997),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("57cda194-4fae-482d-a09f-43c397d373d1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9998),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("16473b29-42ad-4763-b1ef-11f0e02b3bca"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 183, DateTimeKind.Local).AddTicks(9999),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0c0245d8-95bd-4c59-8518-2e6ec44685fc"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(1),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7e265aed-6c39-4043-92b0-28f64a9c099d"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(2),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("dc3c4bd1-3d0a-4275-86a0-54d0a058b6df"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(3),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("dc3c4bd1-3d0a-4275-86a0-54d0a058b6df"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(4),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("dc3c4bd1-3d0a-4275-86a0-54d0a058b6df"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(5),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("f19317cd-ef8b-425d-abcd-ee6f3f9bc2a8"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(7),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8024d065-906b-4708-821c-1a2eb3aacae1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(8),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8024d065-906b-4708-821c-1a2eb3aacae1"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(9),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8024d065-906b-4708-821c-1a2eb3aacae1"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(11),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(12),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(13),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(14),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(16),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(17),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(27),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(29),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(30),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b57ffb70-5d09-4349-bbad-54eecfa9fbae"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(31),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b57ffb70-5d09-4349-bbad-54eecfa9fbae"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(33),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b57ffb70-5d09-4349-bbad-54eecfa9fbae"),
                            RoleId = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(34),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("53cc8c36-4366-45cc-b329-8d42b48ff515"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(35),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("53cc8c36-4366-45cc-b329-8d42b48ff515"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(36),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0b0fdcae-d8af-4505-88b4-88e42f5e43ab"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(38),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0b0fdcae-d8af-4505-88b4-88e42f5e43ab"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(39),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("15e02e42-4ad1-4f38-b074-10c9cdac4767"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(40),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("15e02e42-4ad1-4f38-b074-10c9cdac4767"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(42),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("15e02e42-4ad1-4f38-b074-10c9cdac4767"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(43),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0c093023-fb37-4f46-ada0-849afaae7f99"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(44),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("00670a0d-dbb5-4b9d-b7c1-ec77ced4f63b"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(45),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d700564f-1a2f-4396-8f6f-e769eb6e7af8"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(46),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("404f4298-bfca-4709-b9d4-652509d7f604"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(48),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d70df12b-96fd-46b2-ba74-7898b8cf828f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(49),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1f3a321c-a151-400b-a619-dcebde93c73f"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(50),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a8292054-64b5-48ee-8269-81c84c18f424"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(52),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b15d21ae-9e86-4380-924d-d06662ce1e0e"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(53),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("414dc8d2-233b-443f-b7da-181aa1cadb3f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(54),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("414dc8d2-233b-443f-b7da-181aa1cadb3f"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(55),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(57),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(58),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(59),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(61),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a33da7fb-c2d8-43ea-a5af-48df82c586a7"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(62),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d74a1b81-b74f-4cda-a602-c6d46c4d61e9"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(63),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ea045141-2b65-497c-8b97-6ca1ecd8885e"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(64),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ac871e3a-fb51-427a-83a3-54d3ccd726c0"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(66),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ac871e3a-fb51-427a-83a3-54d3ccd726c0"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(67),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("eeb105a0-8b43-4528-95ef-90c4efce1ee7"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(68),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("517580ef-82c5-43eb-aeb7-2a82eb2e8546"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(69),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("57c976a7-a9e0-4f31-bec1-99d5d290996e"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(70),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("57c976a7-a9e0-4f31-bec1-99d5d290996e"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(72),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ce6623a1-3821-460e-88c2-e5082838840e"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(73),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ce6623a1-3821-460e-88c2-e5082838840e"),
                            RoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(74),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("453e760b-1dee-4706-b2ea-f06826f46bac"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(75),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6de1a7fc-b57e-4283-8e46-edea9631ce32"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(77),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6de1a7fc-b57e-4283-8e46-edea9631ce32"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(78),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3dd0786d-f3c4-4662-83ac-2420fcbfa5f3"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(79),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1bac4e41-033e-49ce-8e4e-9e7632d4189b"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(81),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("89ec5cac-5c61-4ac5-b19a-966195dba85c"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(82),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("95212a97-96c7-434c-a795-bb692ee58021"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(83),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c0c800df-ac58-4fd9-88b1-63a3dbf4451c"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(85),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c0c800df-ac58-4fd9-88b1-63a3dbf4451c"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(86),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c0c800df-ac58-4fd9-88b1-63a3dbf4451c"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(87),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("63684ef0-a6ed-4d5a-9b47-568358a84670"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(89),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("63684ef0-a6ed-4d5a-9b47-568358a84670"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(94),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("63684ef0-a6ed-4d5a-9b47-568358a84670"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(96),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cab92ccc-ca73-4e7a-acab-cd7fd0a7db3a"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(97),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cab92ccc-ca73-4e7a-acab-cd7fd0a7db3a"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(98),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0a2aaf20-ad6f-499a-821b-88e8c4e80850"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(99),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0a2aaf20-ad6f-499a-821b-88e8c4e80850"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(101),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0a2aaf20-ad6f-499a-821b-88e8c4e80850"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(102),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4736e129-0473-4b12-8305-62011ee8ba52"),
                            RoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(103),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("fd37f00f-06f2-400b-a883-05ded0522c6b"),
                            RoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(104),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("bbb05cc6-492d-405d-883d-e2779bf0ab1e"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(106),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("62310863-e5a5-4f6c-ba97-2141acaf1e62"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(107),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ddc6903f-0a16-448a-ac10-279a5f169b13"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(108),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ddc6903f-0a16-448a-ac10-279a5f169b13"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(109),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ddc6903f-0a16-448a-ac10-279a5f169b13"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(111),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("75e2dc83-eb5e-4c43-9eb4-1b9c2ba3e588"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(112),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("75e2dc83-eb5e-4c43-9eb4-1b9c2ba3e588"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(113),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e21c004e-9246-47b6-8547-6b462643ae59"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(115),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e21c004e-9246-47b6-8547-6b462643ae59"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(116),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d587a654-52e1-472e-895e-15690c026b3d"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(119),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0daa9fb1-8858-4fa3-94c1-d26a3375679b"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(120),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0daa9fb1-8858-4fa3-94c1-d26a3375679b"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(121),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0daa9fb1-8858-4fa3-94c1-d26a3375679b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(122),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c15dc281-64a8-4dfe-999b-a59084327aa9"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(123),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c15dc281-64a8-4dfe-999b-a59084327aa9"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(125),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("bd8f67ea-a3d0-48d3-99bd-e75f5008f974"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(126),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("bd8f67ea-a3d0-48d3-99bd-e75f5008f974"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(128),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("bd8f67ea-a3d0-48d3-99bd-e75f5008f974"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(129),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ed7fa8c7-7bbb-4a7c-94b2-c25aaace3fb1"),
                            RoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(130),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3756232d-c562-47a7-bc5f-81d82a85964f"),
                            RoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(131),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c4a91ea0-ae99-4dc5-913f-043f14836a30"),
                            RoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(133),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7ee32b4c-07a4-4459-9ac0-577df0458611"),
                            RoleId = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(134),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7ee32b4c-07a4-4459-9ac0-577df0458611"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(135),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e2809297-1779-4454-85cc-c7c105a6a709"),
                            RoleId = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(136),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7cf72076-44ad-428d-8073-d6cfb172806d"),
                            RoleId = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(137),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7cf72076-44ad-428d-8073-d6cfb172806d"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(139),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("24158b3a-a2ab-468c-b4ee-a0361d0bd679"),
                            RoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(140),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("24158b3a-a2ab-468c-b4ee-a0361d0bd679"),
                            RoleId = new Guid("8d667eed-04db-481c-9ae0-1c7e614e4507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(141),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0f293e73-db67-4151-95a3-c37f9a578640"),
                            RoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(142),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0326c783-2eb2-4723-8e92-f3d755df6c82"),
                            RoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(144),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("fe525ead-e18a-4e3f-852d-ca1854139dc0"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(145),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1f409f31-01da-45c4-b08c-4d75362fe0f0"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(147),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1f409f31-01da-45c4-b08c-4d75362fe0f0"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(149),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0ba0ccae-e71c-433e-8de4-30285f854bc8"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(150),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0ba0ccae-e71c-433e-8de4-30285f854bc8"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(151),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("52f6bb20-fbfe-45cd-a767-bca8c272ff4a"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(152),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("52f6bb20-fbfe-45cd-a767-bca8c272ff4a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(154),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("82eaa8ad-7483-40ca-b584-1f0546720a79"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(155),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("82eaa8ad-7483-40ca-b584-1f0546720a79"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(156),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("328cae33-88ef-4b8c-b928-a761024d2e54"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(157),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("328cae33-88ef-4b8c-b928-a761024d2e54"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(162),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("66cf02d7-748e-4b59-9f3d-24ae3134a25b"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(164),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("00830805-4cff-4380-94c2-2498b00dba7d"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(166),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("00830805-4cff-4380-94c2-2498b00dba7d"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(167),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a3b8254e-d8c1-49ae-99b3-30fe33bd5806"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(168),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a3b8254e-d8c1-49ae-99b3-30fe33bd5806"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(169),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a48b5840-94d2-445e-8a5f-1eeb5beb45f8"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(171),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a48b5840-94d2-445e-8a5f-1eeb5beb45f8"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(172),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e3c6a104-e732-4865-afe3-58f3e973af90"),
                            RoleId = new Guid("e20991e8-6233-4635-8829-4ee12bf7004d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(173),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b9e76d0e-46fd-48b8-8ecb-c4e1527f67eb"),
                            RoleId = new Guid("e20991e8-6233-4635-8829-4ee12bf7004d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(174),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("09bafc7d-145b-4508-bdbe-4ab9550edaad"),
                            RoleId = new Guid("e20991e8-6233-4635-8829-4ee12bf7004d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(176),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8fda951d-36fa-4263-8c66-1fba037d3765"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(177),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("69f91acc-e65c-4b4c-a43f-ef2216d220cf"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(178),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1b0346b0-5186-4af1-8f80-8605f368296d"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(179),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("27ac990e-7445-4be9-9206-ee36533fdabb"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(182),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5245052a-9d22-4cbc-8552-32e40c0d1c57"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(183),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5a1a94b8-f9ae-4485-af3f-cbdb507c9f5e"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(184),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d06f7e39-f81b-4062-b841-b5de4b7d98cf"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(185),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ef7040f3-cff3-40ab-871f-d7da70c41581"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(187),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1788341d-ab99-4ac4-9c6a-aff9ebba37e6"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(188),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e705cfd6-c806-4a73-ad96-b831e203b7f9"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(189),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5bff9668-4850-4351-b37b-e6ca0048fa4c"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(190),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6a30b54c-54bc-41d2-ae42-4cb418bfb3a5"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(192),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1ab43f1a-d3c4-4cbd-a1eb-c38a75a812f3"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(193),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7f7d39f1-e068-4c3a-b6fc-02f0bc76e351"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(194),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("db50d28f-5f88-47fc-a160-da10003c1fc1"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(195),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("f0790dc3-bb5b-4086-9ea1-7967b337fc5f"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(196),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cf9c48f2-20da-4989-b929-b2a250154126"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(198),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b292c77c-ec56-4e3e-bd59-4fa6de45e998"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(199),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d69810b1-d0c7-4c25-9e82-29677990fe6e"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(200),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("59a2eae1-ded9-4f5d-b6e9-c8572e77f764"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(201),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1c2a2eb3-c584-4185-acbb-5bbb06c10cf5"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(202),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8f71c6e3-b327-4046-ad43-783141f8b01b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(204),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e4e321fa-c082-4b73-90d1-2ee8d1df57b1"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(205),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("de135872-a718-452f-9975-c152411c5f3d"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(206),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ee8dd936-36b8-4492-aa97-9eb78a88d051"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(207),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("672316f2-ddd1-48f6-bc95-710d27836a3d"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(209),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cd86c3bb-c3ce-4e32-a18d-864c7be053b7"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(211),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("75d0157a-c79c-4402-9212-fd9feaf6bb3b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(212),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b4cf0cf4-69d6-4610-b8ba-b3a39193b8e6"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(213),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("006f672b-6535-473b-b93c-11b3d9844a83"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(215),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("27b6e67c-92a4-4166-ab21-fdf40f8c9a08"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(216),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cebab131-6b5b-4648-88a8-4f6524cb71e3"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(217),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b70e5969-5638-4492-95ef-405713ee599c"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(218),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("87497a34-3059-4b2e-9afd-65ad4ccf9cdc"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(220),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("af39e2a5-a893-4e07-90af-5d11d9fc0bf4"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(221),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ed8fd2d3-536b-477a-b27d-aa52171de2f7"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(222),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("86ef8958-9c81-4ce8-9fc6-2df53ab20599"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(223),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("17ec9f3f-2de4-4730-929e-0d3aaba63256"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(225),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("62c5e7f4-dc13-4b17-9a74-ab301cee30ee"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(230),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ca9690f7-2871-4bb1-9072-cfa10bb14a0b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(231),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6d4b51f7-929b-4894-a1f1-82b84d971880"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(232),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4b9592a9-c7b0-4231-9170-8f68d4b672b1"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(233),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3983d79c-3c87-4fd9-b05b-c7c2db777f18"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(235),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("adcc99a7-dc88-46bb-8398-62e9ec322d5f"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(236),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ec75a36c-663d-4405-926a-8addacc6dc0f"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(237),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7eb3989a-9707-4a1e-9182-60ff86b6d44d"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(239),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("46759c7a-860b-48c1-972f-aeddc13fe604"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(240),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4c116457-5a05-4e31-bec4-4e3e74d1584f"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(242),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a4d57608-7b78-4e09-ba49-79444f23da6c"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(243),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ee3838b7-b264-41ce-96df-5fb233b7fc83"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(244),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5df5bba8-fa4a-40a8-b88f-ce342d1fcb4e"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(246),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9627518a-07ee-4da8-bf71-9503615994f6"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(247),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("846503d5-9b92-4148-83a3-682b99fa1ed7"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(248),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("44aaf905-d100-4b66-ae1a-42ff22b5985c"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(249),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ce35779-1df8-48fa-818d-605c69fda68e"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(251),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("eefdd975-bbe9-44dd-a654-2992ddd303dd"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(252),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5d9e18df-0a3c-495b-8de4-65bf8be65a87"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(253),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b49fc47a-6b5d-4ec5-bb83-468b3fc04602"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(254),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e143ed84-322a-4f9c-993a-12598abe894d"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(256),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("54fba425-4415-4149-bdbf-e031c0dd5a8b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(257),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b61100af-0f06-4ac6-85ef-80da244e4fa7"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(258),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("50e7d53a-168a-474e-a981-0c21cf63ad3d"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(259),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("02734701-28d5-4166-ac88-065780672f10"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(261),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c052329e-ff47-42e0-919d-6e6a701a96b3"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(262),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("72b05306-1d04-4310-8344-16e8ca7c3372"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(263),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4b510482-51c3-43ed-98d9-bc58cdd53cd3"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(264),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c48c025d-c9dc-4525-bd5b-8e0898585852"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(265),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("40d1d858-3446-4ba7-92bb-35db2dae6bed"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(267),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8cd17aaf-7503-4906-b6a0-1a24227520cb"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(268),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("2d0f9ee3-c16d-4097-9de3-ea7974a2c3b3"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(269),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5b3e427f-8b10-4b20-a217-711ce08b6e48"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(270),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("003da116-b61e-4d0c-aee1-fd7055110bad"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(272),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cddcc87a-8f88-4a4f-b81c-b690496571a8"),
                            RoleId = new Guid("2fc82d56-b5ac-44a6-8f5e-3ea708d722e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(273),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0b0fdcae-d8af-4505-88b4-88e42f5e43ab"),
                            RoleId = new Guid("2fc82d56-b5ac-44a6-8f5e-3ea708d722e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(274),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5e2a7be9-a773-4f2e-9b96-3cdfe9b074be"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(275),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b241d596-f089-434b-a94c-16114c0a4b4b"),
                            RoleId = new Guid("e4495bcf-454a-4f04-92e2-9cb02605db3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(277),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("744e925b-6aa7-45fa-824c-0b505a04e20a"),
                            RoleId = new Guid("e4495bcf-454a-4f04-92e2-9cb02605db3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(278),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1b0346b0-5186-4af1-8f80-8605f368296d"),
                            RoleId = new Guid("e4495bcf-454a-4f04-92e2-9cb02605db3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(279),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRolePermission", b =>
                {
                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("UserRoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserRolePermission", (string)null);

                    b.HasData(
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("9f87d685-92c9-42b4-a58e-20fe028dd3c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6384),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("9f87d685-92c9-42b4-a58e-20fe028dd3c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6395),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("a8cac012-b665-481a-8028-90ed1c4226f9"),
                            PermissionId = new Guid("9f87d685-92c9-42b4-a58e-20fe028dd3c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6397),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("b5333a97-47ae-4464-82e7-eb552230fd2c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6400),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("b5333a97-47ae-4464-82e7-eb552230fd2c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6402),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("f8684d71-0b28-4f93-bcd7-d1f7c107708f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6407),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("e1f00b8c-9704-4406-9d61-468146fe06dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6408),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("f8684d71-0b28-4f93-bcd7-d1f7c107708f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6410),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("e1f00b8c-9704-4406-9d61-468146fe06dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6411),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("836b6390-aa37-4c3c-bdc1-42f9977a16b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6413),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("559c4f59-68ac-4f83-a708-6632b8a080f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6414),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("2e44d6a0-5c92-40be-8d5e-28a586ddeb26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6416),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("ed334b91-9e47-46f0-92b7-84c9a1e34b9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6417),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("6ae48c8e-e15c-40aa-a660-3a7556d53f3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6418),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("4467735e-4043-40a7-b571-654751d1b8d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6420),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("f2641950-69d9-499c-8e7b-4b7b2a8a6efb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6421),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("c42a1ac1-014c-4bfa-a258-7ddb9b257b58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6423),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("0f4e423f-2a2d-48bb-b8b7-3c1a4d444fa2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6424),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("7f5e914d-5c48-4659-a46e-9461f64f4c9b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6426),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("42a05247-8579-4c6c-96bf-d5cd3a73a89f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6427),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("42a05247-8579-4c6c-96bf-d5cd3a73a89f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6429),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("a17e0b76-5d29-4c79-a8df-bae18da34cb1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6430),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("a17e0b76-5d29-4c79-a8df-bae18da34cb1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6432),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("078c30e2-702e-4abe-af61-fc86357535d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6434),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("ac289fc1-4149-42e3-9870-3ec94de81bfa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6435),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("e36a0878-2621-4749-849c-0cc979ec0b32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6437),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("4ca6b903-3f45-446d-b1ae-6d99b696c845"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6438),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("34e8d57a-e3f3-471e-be17-b8b70988282b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6439),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            PermissionId = new Guid("3fa5b006-8d8f-4fec-aff9-249615a896a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6441),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("0291715f-c93a-425f-91e3-3f4d64cbe720"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6442),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("c135ca16-e877-4e16-aed0-9e330456f33f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6443),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("cf2a9cde-97eb-41e0-b17f-d7ac38ff601b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6445),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("316f9d9a-3f5c-40e9-b5a5-25833587bda3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6446),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            PermissionId = new Guid("0d542309-09b4-4176-ad55-e7d42e028d14"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6452),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("05ca74cc-cd70-4965-9ea5-2530e2171774"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6454),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("a9e34482-dd6b-4274-ae9f-0214d6490b3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6456),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            PermissionId = new Guid("438d86f6-f78c-44a8-b0fe-deb55693e80a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6457),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            PermissionId = new Guid("f5b16af9-1c7d-4c03-8c4c-5669819f74cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6458),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            PermissionId = new Guid("9425e21e-0372-466c-bff1-70b685a75ee8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6460),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            PermissionId = new Guid("3889f9f8-25a5-4904-9d9c-56bf9d506a1d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6461),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            PermissionId = new Guid("f0157a4d-de6c-47c7-a4b3-243ebf8076ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6462),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            PermissionId = new Guid("5c9bd282-d701-4591-877b-9e36a61cff69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6464),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("3cb6772e-8370-41e2-a4ff-9adfa83e038c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6466),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("d1ada3b1-3e74-4d43-8b65-0da982aff7e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6467),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("b67903bd-6435-412d-947c-46a0d2db14ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6469),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("57afe880-14b9-4fcb-b627-afe5f63b3029"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6470),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("91dc6d3f-dd35-451e-b04a-fa455816c09c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6471),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("ffe65ef0-6506-47e6-b8ca-a9290f13c7c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6473),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("69a2e6e4-0837-47fa-8da9-958f632aff10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6474),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("8aea0f36-ab57-4f65-b9f2-5945eb3e9436"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6475),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("fc74be96-ce8e-469e-8a1a-83a98aaddd08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6477),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("5ed6a1a1-55a1-4f6f-a9bb-f61f3ca03df1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6478),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("218b0863-5156-4488-ab9a-b71c8ae9d2b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6479),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e"),
                            PermissionId = new Guid("b2a7429b-74b8-419f-b3ec-a5cab34abfc9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6481),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            PermissionId = new Guid("55b7f825-39a1-4437-a42e-2a333ae6658d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6482),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            PermissionId = new Guid("26aecbd2-eb44-42b2-b83d-4b6778a9a6b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6483),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            PermissionId = new Guid("c54a7d72-d291-49a0-a6ae-ba94f662ee8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6485),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            PermissionId = new Guid("d4c9affa-992a-48b5-8e17-97e44aa3e232"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6486),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("d20f5128-ef29-4b73-bac2-28f115906938"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6487),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            PermissionId = new Guid("1c10cda1-cd2a-42a4-b295-53404768dc35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6488),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("1c10cda1-cd2a-42a4-b295-53404768dc35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6490),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("d35ab363-6ba9-4812-b0e1-c4685725d688"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6492),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            PermissionId = new Guid("9f95e4c7-2d36-495c-b30f-44b3c136fa40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6493),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("9f95e4c7-2d36-495c-b30f-44b3c136fa40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6495),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            PermissionId = new Guid("98bd95cd-1c4a-4427-bd76-957624b0ca75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6496),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("98bd95cd-1c4a-4427-bd76-957624b0ca75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6497),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            PermissionId = new Guid("4ba7de16-cc9b-4f2e-9ca6-4133cd025310"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6499),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("4ba7de16-cc9b-4f2e-9ca6-4133cd025310"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6500),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("df5b084e-654d-4e82-84b2-45132d8379b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6501),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("183358b1-ecb3-4280-bcd1-50d6cbb31e1d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6503),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("a78e57af-08fc-4eae-9dcc-0bbc0b973ad7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6504),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("f6f0bfe0-8f31-484c-9d92-45803b717168"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6506),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("1700f355-1943-49cb-bb43-09d91ae939d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6507),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("de6f0445-9768-4cdf-b4a6-48c5afbf666e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6508),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("87fb2cbd-b5da-48bd-8966-a6bc109e7e9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6510),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("a777e12a-f2d2-40e4-a6a3-1673fea21290"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6511),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("d9e92885-ddd4-4a6e-b779-3216e1bb2b4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6512),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("dc200a69-bb01-4d07-94a8-79844de5170d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6514),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("67805da5-8bd6-441d-9b6b-9c370673c435"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6515),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("d9d45947-d2e5-480e-95cf-379efd384766"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6516),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("9da49c2d-b60c-43dc-9850-04e8e8fcd945"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6518),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("26a31c04-6b1d-43d5-a0d0-ea73756fa20f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6519),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("706a5ced-92e3-46f1-8379-bf78129c1f68"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6524),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("1178eaab-7eac-4a3c-9a98-3d8c4b88a5f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6526),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("c56be2cd-feb9-4186-aadb-5c631b12ca35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6528),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("d8417df3-e5b7-4ac5-98ef-8f7e0431d9bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6529),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("e40ce5f0-19e6-49b9-a0cb-795c3ec26b67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6530),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("f6f8e3f6-d1cc-48d9-987a-bbc42eebf7f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6532),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("eae56b73-b087-4fd8-81dd-f35f54485718"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6533),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("39bca629-6bef-4af2-94e2-920d9ff9bc31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6535),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("a5df59df-b003-42fc-802d-830bd167cb7e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6536),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("689e70cd-0249-49ef-8518-04a0e344484d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6537),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("5d027a16-4660-445c-850e-63c81242f5ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6539),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("5f870a71-0928-4655-a95d-ff677c4a31ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6541),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("607259d7-edb7-4a94-a794-72f90ce076a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6542),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("51e387a4-bca5-48bd-b919-5c5e466f49b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 7, 28, 17, 46, 58, 184, DateTimeKind.Local).AddTicks(6543),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.AntivirusAssessment.InactiveSensors", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.AntivirusAssessment.AntivirusAssessmentModel", "AntivirusAssessmentModel")
                        .WithMany("InactiveSensors")
                        .HasForeignKey("AntivirusAssessmentModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AntivirusAssessmentModel");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.AntivirusAssessment.ReducedFunctionalityMode", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.AntivirusAssessment.AntivirusAssessmentModel", "AntivirusAssessmentModel")
                        .WithMany("ReducedFunctionalityMode")
                        .HasForeignKey("AntivirusAssessmentModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AntivirusAssessmentModel");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", "ComplianceDepartment")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", "ComplianceRegulator")
                        .WithMany("ComplianceRules")
                        .HasForeignKey("ComplianceRegulatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceRegulator");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", "ComplianceRule")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("ComplianceRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceRule");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.CASPLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("CASP")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.CASPLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.DAMLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("DAM")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.DAMLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.DLPLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("DLP")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.DLPLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.EDRLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("EDR")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.EDRLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.FIMLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("FIM")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.FIMLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.PAMLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("PAM")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.PAMLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.SIEMLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("SIEM")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.SIEMLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.ExistingPrimaryControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InfosecRiskAssessment.InfosecRiskAssessmentModel", "InfosecRiskAssessment")
                        .WithMany("ExistingPrimaryControls")
                        .HasForeignKey("InfosecRiskAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfosecRiskAssessment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.ExistingPrimaryControlAnnexture", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InfosecRiskAssessment.Annexture", "Annexture")
                        .WithMany("ExistingPrimaryControlAnnextures")
                        .HasForeignKey("AnnextureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.InfosecRiskAssessment.ExistingPrimaryControl", "ExistingPrimaryControl")
                        .WithMany("ExistingPrimaryControlAnnextures")
                        .HasForeignKey("ExistingPrimaryControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Annexture");

                    b.Navigation("ExistingPrimaryControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.PlannedControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InfosecRiskAssessment.InfosecRiskAssessmentModel", "InfosecRiskAssessment")
                        .WithMany("PlannedControls")
                        .HasForeignKey("InfosecRiskAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfosecRiskAssessment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.PlannedControlAnnexture", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InfosecRiskAssessment.Annexture", "Annexture")
                        .WithMany("PlannedControlAnnextures")
                        .HasForeignKey("AnnextureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.InfosecRiskAssessment.PlannedControl", "PlannedControl")
                        .WithMany("PlannedControlAnnextures")
                        .HasForeignKey("PlannedControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Annexture");

                    b.Navigation("PlannedControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlAction", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InternalControl.InternalControlModel", "InternalControl")
                        .WithMany("Actions")
                        .HasForeignKey("InternalControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlActionOwner", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InternalControl.InternalControlAction", "InternalControlAction")
                        .WithMany("InternalControlActionOwners")
                        .HasForeignKey("InternalControlActionlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalControlAction");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOverReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InternalControl.InternalControlCallOver", "CallOver")
                        .WithMany("Reports")
                        .HasForeignKey("CallOverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallOver");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHILL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AssessmentOfDigitalInitiativeList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany()
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditAnnouncementMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("AuditFinding")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditPlanningMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("RFL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMCapitalRating", "ARMCapitalAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", "ARMHillAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMResearch", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", "ARMTAMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", "DigitalFinancialServiceAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("Citation")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithMany()
                        .HasForeignKey("AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMCapitalRating", "ComplianceARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", "ComplianceDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", "ComplianceBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", "ComplianceBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingResearch", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Customerexperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany()
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", "ConsolidatedAuditFinding")
                        .WithMany("ActionDetail")
                        .HasForeignKey("ConsolidatedAuditFindingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("EngagementLetterAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterAuditExecutionDuration")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterReportDistributionList")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessARMCapitalRating", "FinancialARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", "FinancialDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", "FinancialBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", "FinancialHillReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingResearch", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithMany("InformationRequirementAuditExecution")
                        .HasForeignKey("CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("InternalAuditRating")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithMany()
                        .HasForeignKey("CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithMany()
                        .HasForeignKey("ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernARMAgribusiness")
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMCapitalRating", "ManagementConcernARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitDFSRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitDFSRating", "ManagementConcernDFSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMCapitalRating", "ManagementConcernARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernARMSecurity")
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceDFSRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceDFSRating", "ManagementConcernDFSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ManagementResponse")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ObservationList")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapitalRating", "OperationARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", "OperationBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", "OperationDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", "OperationBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingResearch", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CorporateStrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDetailfindings", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ReportDetailfindings")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDistributionList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("DistributionList")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapitalRating", "StrategyARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", "StrategyBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", "StrategyDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", "StrategyBusinessRatingARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingResearch", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CorporateStrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", "ProductRiskAssessment")
                        .WithMany("ProductAssessRisks")
                        .HasForeignKey("ProductRiskAssementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductRiskAssessment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.VulnerabilityManagement.InternalVulnerability", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.VulnerabilityManagement.VulnerabilityModel", "VulnerabilityModel")
                        .WithMany("InternalVulnerabilities")
                        .HasForeignKey("VulnerabilityModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VulnerabilityModel");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BIAUnitProcessDetails")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", "BIAUnitProcessDetails")
                        .WithMany("BusinessUnitsToRunProcess")
                        .HasForeignKey("BIAUnitProcessDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", "BusinessImpactAnalysis")
                        .WithMany("BusinessImpactAnalysisUnits")
                        .HasForeignKey("BusinessImpactAnalysisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysis");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BusinessImpactAnalysisUnitLogs")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", "BusinessEntity")
                        .WithMany("Departments")
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessEntity");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", "RiskEventType")
                        .WithMany("RiskEventTypeCategories")
                        .HasForeignKey("RiskEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventType");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", "RiskEventTypeCategory")
                        .WithMany("RiskEventTypeSubCategories")
                        .HasForeignKey("RiskEventTypeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventTypeCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", "RiskControlSelfAssessmentUnit")
                        .WithOne("DocumentRSCAProcess")
                        .HasForeignKey("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "RiskControlSelfAssessmentUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessmentUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRSCAProcess")
                        .WithMany("DocumentRSCAProcessLogs")
                        .HasForeignKey("DocumentRSCAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRSCAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRCSAProcess")
                        .WithMany("ProcessInherentRiskControls")
                        .HasForeignKey("DocumentRCSAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRCSAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany("RSCAProcess")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", "RiskControlSelfAssessment")
                        .WithMany("RiskControlSelfAssessmentUnits")
                        .HasForeignKey("RiskControlSelfAssessmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessment");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", "RiskDriver")
                        .WithMany("RiskDriverCategories")
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriver");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", "RiskDriverCategory")
                        .WithMany("RiskDriverSubCategories")
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriverCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", null)
                        .WithMany()
                        .HasForeignKey("EffectCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", null)
                        .WithMany()
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", null)
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", null)
                        .WithMany()
                        .HasForeignKey("EventCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", null)
                        .WithMany()
                        .HasForeignKey("EventSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", null)
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Department", "Department")
                        .WithMany("Units")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AuditPlanningMemoAuditExecutionAuditPlanningMemoPlanningTimeline", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoPlanningTimeline", null)
                        .WithMany()
                        .HasForeignKey("AuditPlanningMemoAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", null)
                        .WithMany()
                        .HasForeignKey("AuditPlanningMemoAuditExecutionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuditProgramAuditExecutionCommenceEngagementAuditexecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", null)
                        .WithMany()
                        .HasForeignKey("AuditProgramAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", null)
                        .WithMany()
                        .HasForeignKey("CommenceEngagementAuditexecutionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.HasOne("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "WorkPaper")
                        .WithOne("AuditFindings")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", "WorkerPaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", "AuditProgramAuditExecution")
                        .WithOne("workPaper")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "AuditProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRoleMap", b =>
                {
                    b.HasOne("GrcApi.Modules.Shared.UserRole", "Role")
                        .WithMany("UserRoleMap")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrcApi.Modules.Shared.User", "User")
                        .WithMany("UserRoleMap")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRolePermission", b =>
                {
                    b.HasOne("GrcApi.Modules.Shared.Permission", "Permission")
                        .WithMany("UserRolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrcApi.Modules.Shared.UserRole", "UserRole")
                        .WithMany("UserRolePermissions")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.AntivirusAssessment.AntivirusAssessmentModel", b =>
                {
                    b.Navigation("InactiveSensors");

                    b.Navigation("ReducedFunctionalityMode");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");

                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Navigation("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.LogManagement", b =>
                {
                    b.Navigation("CASP")
                        .IsRequired();

                    b.Navigation("DAM")
                        .IsRequired();

                    b.Navigation("DLP")
                        .IsRequired();

                    b.Navigation("EDR")
                        .IsRequired();

                    b.Navigation("FIM")
                        .IsRequired();

                    b.Navigation("PAM")
                        .IsRequired();

                    b.Navigation("SIEM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.Annexture", b =>
                {
                    b.Navigation("ExistingPrimaryControlAnnextures");

                    b.Navigation("PlannedControlAnnextures");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.ExistingPrimaryControl", b =>
                {
                    b.Navigation("ExistingPrimaryControlAnnextures");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.InfosecRiskAssessmentModel", b =>
                {
                    b.Navigation("ExistingPrimaryControls");

                    b.Navigation("PlannedControls");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InfosecRiskAssessment.PlannedControl", b =>
                {
                    b.Navigation("PlannedControlAnnextures");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlAction", b =>
                {
                    b.Navigation("InternalControlActionOwners");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOver", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlModel", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFL")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMCapital")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Navigation("workPaper")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Navigation("AuditAnnouncementMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("AuditPlanningMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution")
                        .IsRequired();

                    b.Navigation("InformationRequirementAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("Customerexperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Navigation("ActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHILL")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Navigation("EngagementLetterAuditExecutionDuration");

                    b.Navigation("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Navigation("AuditFinding");

                    b.Navigation("Citation");

                    b.Navigation("DistributionList");

                    b.Navigation("InternalAuditRating");

                    b.Navigation("ManagementResponse");

                    b.Navigation("ObservationList");

                    b.Navigation("ReportDetailfindings");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("CorporateStrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("CorporateStrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Navigation("ProductAssessRisks");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.VulnerabilityManagement.VulnerabilityModel", b =>
                {
                    b.Navigation("InternalVulnerabilities");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Navigation("BusinessUnitsToRunProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Navigation("BusinessImpactAnalysisUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("BusinessImpactAnalysisUnitLogs");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Navigation("RiskEventTypeCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Navigation("RiskEventTypeSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Navigation("DocumentRSCAProcessLogs");

                    b.Navigation("ProcessInherentRiskControls");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Navigation("RiskControlSelfAssessmentUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Navigation("DocumentRSCAProcess")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Navigation("RiskDriverCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Navigation("RiskDriverSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Navigation("RSCAProcess");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Navigation("AuditFindings")
                        .IsRequired();
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.Permission", b =>
                {
                    b.Navigation("UserRolePermissions");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.Navigation("UserRoleMap");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Navigation("UserRoleMap");

                    b.Navigation("UserRolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
